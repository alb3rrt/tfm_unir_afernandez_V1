Teaching MPC:
Which Way to the Promised Land?
Timm Faulwasser  Sergio Lucia  Moritz Schulze Darup  Martin M¨onnigmann 
 Institute of Energy Systems, Energy Efficiency and Energy Economics, TU Dortmund University, Dortmund, Germany
timm.faulwasser@ieee.org  Laboratory of Process Automation Systems, TU Dortmund
University, Dortmund, Germany sergio.lucia@tu-dortmund.de  Control and Cyberphysical Systems, TU Dortmund University,
Dortmund, Germany moritz.schulzedarup@tu-dortmund.de  Automatic Control and Systems Theory, Ruhr University Bochum,
Bochum, Germany martin.moennigmann@rub.de

arXiv:2106.00944v1 [math.OC] 2 Jun 2021

Abstract: Since the earliest conceptualizations by Lee and Markus, and Propoi in the 1960s, Model Predictive Control (MPC) has become a major success story of systems and control with respect to industrial impact and with respect to continued and wide-spread research interest. The field has evolved from conceptually simple linear-quadratic (convex) settings in discrete and continuous time to nonlinear and distributed settings including hybrid, stochastic, and infinitedimensional systems. Put differently, essentially the entire spectrum of dynamic systems can be considered in the MPC framework with respect to both--system theoretic analysis and tailored numerics. Moreover, recent developments in machine learning also leverage MPC concepts and learning-based and data-driven MPC have become highly active research areas. However, this evident and continued success renders it increasingly complex to live up to industrial expectations while enabling graduate students for state-of-the-art research in teaching MPC. Hence, this position paper attempts to trigger a discussion on teaching MPC. To lay the basis for a fruitful debate, we subsequently investigate the prospect of covering MPC in undergraduate courses; we comment on teaching textbooks; and we discuss the increasing complexity of research-oriented graduate teaching of MPC.

Keywords: Model Predictive Control, Teaching

1. INTRODUCTION
The idea of Model Predictive Control (MPC)--or recedinghorizon control--can at least be traced back to Propoi (1963) and to Lee and Markus (1967). Roughly 50-60 years later, its success in industrial applications cannot be ignored. Among other features, MPC stands out due to the effective combination of the three following key items:
(a) simplicity of the conceptual idea,
(b) efficacy of handling complex systems, and
(c) flexibility to dock with emerging trends in systems and control, general engineering, and computer science.
With respect to item (a), many control educators will agree that the conceptual idea of MPC is rather straightforwardly conveyed to students--both undergraduate and graduate ones. Similar experiences can be made in communicating to industrial practitioners not previously ac-

customed to MPC. Moreover, it stands to reason that the mathematical prerequisites required to understand a linear-quadratic MPC controller are not more complex than those needed for for frequency-domain techniques in classical PID control. Yet, simplicity alone does not guarantee success. Hence, the second important aspect of MPC is that it has proven itself to be a very useful method in manifold applications, cf. item (b). While the classical optimal control route to deriving optimal feedbacks via the Hamilton-Jacobi-Bellman Equation or via the Pontryagin Maximum Principle is only viable in quite specific settings--i.e. mostly linear dynamics or rather low-dimensional nonlinear systems--the concept of MPC yields receding-horizon feedback for a large class of systems.
Long gone are times when real-time feasible MPC and NMPC applications were limited to slow process systems, see Qin and Badgwell (2000, 2003) for overviews of early industrial applications. Without any claim of completeness, milestones in terms of computational speed can be

marked by Diehl et al. (2001), who demonstrated NMPC on a lab-scale system with sampling time 10s, Jerez et al. (2014) who report MHz sampling rates for MPC and M¨onnigmann and Kastsian (2011) (who target GHz sampling rates using explicit MPC). Moreover, Houska et al. (2011a) report kHz sampling rates for nonlinear systems. Enablers for this progress have been papers such as (Bemporad et al., 2002; Seron et al., 2003; Wang and Boyd, 2010), while Ohtsuka and Kodama (2002) proposed code generation for NMPC. Hence, it is far from surprising that nowadays, powerful open-source and commercial software tools for MPC (see e.g. Lofberg (2004); Houska et al. (2011a); Herceg et al. (2013); Bemporad et al. (2018); Andersson et al. (2019)) 1 enable readily solving problems of a complexity that would have been publication worthy not too long ago.
Turning to item (c), it is interesting to observe that while most research topics are subject to activity cycles-- the infamous AI-winter (ainewsletter.com, 2005) being a prominent example--MPC has not seen such cycles yet. As evident from Fig. 1, closely related topics such as optimal control and dynamic programming have seen periods of varying scientific interest (as measured by the Google Ngram viewer, which counts frequency of search terms in English texts). MPC, in contrast, has seen a steady growth since the early 1980s. It is fair to ask why a research field in systems and control seemingly grows void of apparent activity cycles. The answer can be found in the flexibility of MPC to dock with other control trends, which in turn led to the emergence of various branches such as {nonlinear, stochastic and robust, hybrid, distributed, economic, datadriven, learning} MPC. Likewise, MPC finds use in a variety of application domains: process engineering, mechatronics and robotics, aeronautics, logistics, smart grids and energy systems, finance, cyber-security, etc. Arguably, this twofold diversity is a unique advantage of MPC.
While this flexibility has catalyzed research on MPC for more than three decades--one might go as far as saying that MPC is adaptive with respect to parallel research trends--it also renders teaching MPC increasingly complex, though necessary. This complexity does not mean that MPC courses should be postponed to the graduate level. The necessity to teach MPC stems on the one hand from the requirement that higher education in engineering (undergraduate and graduate alike) should prepare for careers in industry. Systems and control would fail in this regard if MPC was not part of the core curriculum in control. On the other hand, it becomes increasingly difficult on the graduate level to adhere to Humboldt's ideal of combining research and education and to cover the entire spectrum of MPC branches. At the same time, hardly any research group will address the complete spectrum of MPC topics in their research. This raises the questions of what the research topics are that can be covered in a graduate course, and what their relation with topics in systems and control and other neighboring disciplines are.
It is not the purpose of this paper to provide the recedinghorizon optimal solution to teaching MPC. Neither does it
1 The authors do not claim this list to be comprehensive. See, e.g., Table 1 in (Findeisen et al., 2018) for an overview of tools and the corresponding timeline.

Fig. 1. Frequency of search terms in English books according to Google Ngram Viewer. Data is normalized by the number of books published in each year.
elaborate the question of whether MPC should be taught in dedicated courses. Rather, it asks where MPC positions itself with respect to the undergraduate-graduate teaching divide. Specifically, the paper intends to trigger discussion within the MPC community on two aspects:
(i) prospect and limits of teaching MPC to undergraduate engineering students, and
(ii) synergies of advanced MPC courses with neighboring control topics and with disciplines beyond the engineering realm (such as computer science or applied mathematics).
Both aspects call for a brief discussion of existing textbooks on MPC. Hence, Section 2.6 gives a short summary of the books the authors have relied on in preparing their undergraduate and graduate courses so far.
The remainder of this paper is structured as follows: Section 2 proposes a curriculum for an undergraduate curriculum, including a brief discussion of existing textbooks in Section 2.6. Section 3 lists advanced MPC topics that may be covered in graduate courses. The paper closes with hypotheses on teaching MPC in Section 4, which are meant to serve as the basis of a plenary discussion at the 7th IFAC Conference on Nonlinear Model Predictive Control 2021.
2. THE PROSPECTS OF UNDERGRADUATE MPC TEACHING
As pointed out, MPC is a powerful, widely applied, and conceptually easy control method. Thus, it stands to reason that it should play a prominent role in control education. Hence, the question arises whether it can be addressed early in the curriculum in order to leave enough time for advanced control courses. However, while conceptually easy, linear-quadratic MPC combines elements from distinct fields such as linear algebra, systems theory, and numerical optimization. For effectively teaching basic MPC to undergraduates, it is thus important to determine the bare necessities regarding students' prior knowledge.

Clearly, the assessment requires additional information about the underlying undergraduate curriculum. The situation will likely differ among institutions and even among different departments in the same institution. This holds in particular since MPC has attracted sustained interest from engineering, mathematics and, more lately, computer science departments. We believe, however, that certain pivotal insights are independent of specific situations and we attempt to summarize them below. Such a summary is always based on the combined experience of the authors and, thus, never truly objective. Whether these insights form indeed a viable nucleus of undergraduate MPC teaching and how certain bottlenecks should be tackled deserves further discussion within the MPC community, respectively, it is for the reader to decide.
2.1 Bare necessities of prior knowledge
There are only a handful of requirements for an undergraduate MPC course. Students should be familiar with
· basics of linear algebra (matrix computations, eigenvalues, vector spaces),
· analysis in Rn (gradients, Hessians, extrema),
· basic linear systems theory (state space models, stability of LTI systems), and
· control fundamentals (feedback vs. feed-forward).
Put differently, an undergraduate MPC course should not be responsible for laying the mathematical foundations or for providing first insights into systems and control. One may even say that students must have learned about the pivotal nature of feedback in order to appreciate optimizing over a long horizon and dispensing with the largest part of the open-loop predictions. Clearly, there is a long and continuously growing wish list of additional prior knowledge beneficial for an MPC course such as first contacts with basic LTI optimal control (LQR) or convex optimization (optimality conditions). However, we believe that these essentials can also reasonably covered by the MPC course itself.
2.2 Modeling and system identification
Although the importance of (physical or data-driven) state-space models for MPC is undeniable, their derivation is often skipped when teaching MPC. This may turn out to be critical in undergraduate courses because of two problems: (i) Students with no further background in modeling of dynamic systems can underestimate the challenge of modeling for MPC and other control methods. (ii) They could also be unlikely to appreciate a modelbased method if the origin of the models remains unclear. One may argue, however, it is enough to show by example that systematic methods for deriving models adequate for MPC exist, and to encourage students to attend an additional course that covers modeling in greater depths. To this end, it suffices to revisit modeling based on conservation laws (conservation of mass, momentum and energy, Kirchhoff's laws depending on the preferences of the lecturer), the linearization of dynamical systems, and linear and nonlinear least-squares optimization, which can

be used for parameter estimation or identification of the system matrices. These topics need not be covered in great theoretical depths, but a pragmatic introduction, ideally combined with a hands-on exercise with numerical tools, is sufficient to demonstrate that models of the required type can be derived from data or from first principles combined with data.
2.3 Unconstrained and constrained optimization
The natural and straightforward inclusion of state and input constraints as well as the built-in applicability to MIMO systems undoubtedly are key features of MPC. In this context, it is important to point out that solving a control task while explicitly taking constraints into account is fundamentally different from the common approach of augmenting "unconstrained" controllers with subsequent modifications (such as, e.g., PID with anti-windup). 2 Analogously, under the assumption that students have no background on convex optimization, it is essential to work out the fundamental differences between unconstrained and constrained optimization. While the latter is crucially important for modern MPC, 3 the former often provides useful links to prior knowledge such as the analysis of extreme values or LQR.
Apart from these general insights, the level of detail regarding constrained convex optimization and constrained quadratic programming will depend on the focus of the course itself and subsequent courses. The spectrum might range from the application of toolboxes--see, e.g., Lofberg (2004); Houska et al. (2011b); Herceg et al. (2013); Bemporad et al. (2018); Andersson et al. (2019)--over problem modelling and formulation combined with black-box QP solvers, to including the coding of low-complexity QPsolvers--e.g. Nesterov's fast gradient method; see Nesterov (1983) and Richter et al. (2009); Zometa et al. (2012) for its use in MPC)--as practical (flipped classroom or exercises) course elements. Practical coding efforts will benefit from the availability of school-wide licenses of computing environments such as Matlab and previous introduction to numerical computations. However, as costly schoolwide Matlab licensing schemes may not be available at all institutions, one can also straightforwardly resort to open-source alternatives such as Python or Octave. In any case, there is significant prospect for an undergraduate amalgam of MPC teaching and an introduction to numerical computations. Since at many institutions the vast majority of undergraduate students will likely have access to private laptop computers, coding tasks can easily be blended into the lectures; thus implementing the concept of active learning (Hackathorn et al., 2011).
2.4 Stability versus optimality
Another crucial observation for MPC is that optimality only holds with respect to the formulated mathematical
2 This is not to say that modern anti wind-up schemes do not have their merit and place in industrial applications, cf. (Galeani et al., 2009). Yet, such schemes are also non-trivial to analyze thoroughly and thus involve educational challenges of their own. A detailed discussion is, however, beyond the scope of the present paper. 3 Indeed, traditional unconstrained MPC variants such as GPC may or may not be included in an undergraduate course.

problem. Receding-horizon optimization does not necessarily guarantee typical design criteria such as stability or robustness, see Mayne et al. (2000). This can be easily illustrated with suitable numerical examples many of which are readily available. As it is well-known, designing the MPC problem such that stability is guaranteed is significantly more difficult than merely stating a plausible optimization problem. Nevertheless, it is conceptually easy to motivate the two most-common approaches--the inclusion of a "safe" terminal set or the choice of a sufficiently long prediction horizon--as both approaches can easily be illustrated with numerical experiments. Whether or not providing formal proofs in an undergraduate course is meaningful, and whether or not proving stability is crucial for educating practitioners-to-be, are interesting questions that merit discussion.
Another element worth discourse is that not in all applications of MPC closed-loop stability is the intended purpose. In synchronization problems and in scheduling applications--e.g. in energy systems, resource allocation, or finance applications--traditional stability is not aimed for. Yet, while recent developments in economic MPC appear beyond reach for undergraduate teaching, the interplay of stability and optimality has more facets than the well-known Kalman quote on optimality not implying stability (Kalman, 1960).
2.5 Case studies versus rigorous theory
Effective undergraduate teaching in engineering departments has to put extra effort into balancing theory and examples. Fortunately, in all engineering domains there exist numerous examples suitable for undergraduate students. In mechanical engineering, one may consider mobile robots modelled as double integrators or linearized models of quadcopters. In electrical engineering, linearized generator swing equations allow tackling frequency stabilization via linear MPC. Moreover, battery scheduling provides another and easy route to the consideration of problems beyond stabilization. In chemical engineering, control of continuous reactors is a straightforward option. Remarkably, all these examples allow for an easy motivation of constrained MIMO control.
While the right balance of theory and case studies depends on many extrinsic factors--ranging from department culture to teacher preferences and beyond--undergraduate MPC teaching provides the remarkable opportunity to introduce a hands-on, MIMO-applicable, constrained control method without going through all the details of the analysis of MIMO systems. One may go as far as arguing that MIMO LTI control taught from an MPC point of view is easier and more effective than the traditional PID route. Indeed, the latter involves and requires quite specific concepts such as transmission zeros, control channel decoupling and relative-gain-array analysis. In fact, it can be quite insightful for students to uncover the piecewise affine structure of the optimal control law (or, analogously, of the solution to multiparametric QPs).
Moreover, realistic case studies will naturally guide students towards the duality of control problems, i.e., the need to design state estimators. While Kalman filters and observers might shoot with cannons for birds, the classical

Luenberger observer does not pose any undergraduate teaching obstacle. Yet, it means that pole placement and state feedback concepts are to be included or to be required.
In summary, we claim that--if balanced nicely between theory and application--teaching MPC on the undergraduate level provides a number of opportunities. Besides the ones mentioned above, and beyond the appeal that this may naturally have for faculty who research MPC, it may also turn out as an attractive student gateway towards graduate studies in systems and control.
2.6 Available textbooks
Any discussion about teaching MPC is incomplete without reference to available textbooks. Evidently and luckily, the last decade has seen a substantial growth of textbooks on MPC. Moreover, in February 2021, the search string predictive control returned 140­400 results in English on amazon.com, 4 which are as diverse as re-prints of US patents, books on applications of MPC to specific domains, or research and teaching textbooks. Hence a comprehensive overview of MPC textbooks appears infeasible. Yet, there are undoubtedly established texts and the comparison of which provides indications on the current status.
Classic and early textbooks on MPC include Maciejowski (2002), Rossiter (2004) and Camacho and Bordons Alba (2007), where the first edition of the latter appeared as early as 1999. Not surprisingly these texts focus mostly on the linear setting. It appears that, in the potentially biased view of the authors, Maciejowski (2002) comes quite close to covering all elements needed for an undergraduate MPC teaching endeavor. Yet, at the time of writing it appears to be out of print. Other books that cover most of the elements needed for undergraduate teaching include Wang (2009), Rawlings et al. (2017), whose first edition appeared in 2009, and Borelli et al. (2017); Kouvaritakis and Cannon (2016). In contrast, Gru¨ne and Pannek (2017) (first edition in 2013) and Ellis et al. (2017) focus on more advanced topics including economic MPC.
Two facts stand out: there appears to be no exclusively introductory textbook, i.e., no MPC counterpart of °Astr¨om and Murray (2021). This is not to be read as a critique of the books mentioned above. Rather all the books referenced--seen in the context of their respective publication dates--are teaching and research oriented.
Moreover, when it comes to advanced settings, the books mentioned above, except for Ellis et al. (2017) and Wang (2009), only touch upon continuous-time formulations. The latter aspect is reflective of the fact that MPC research on finite-dimensional systems has developed a bias towards the discrete-time framework.
3. ADVANCED TOPICS IN MPC AND SYNERGIES WITH NEIGHBORING DOMAINS
Under the assumptions of the basic prior knowledge described in Section 2.1, an MPC course for undergraduate students can be organized in a sequential manner. In this case, the formulation of the MPC problem is followed by
4 Depending on the precise settings used.

Related systems and control topics

MPC topics

Related topics in other disciplines

Graduate Undergraduate

Dynamic programming Pontryagin minimum principle Hamilton-Jacobi-Bellman equations

Lyapunov theory Optimal control

Nonlinear control

Robust control

Passivity and dissipativity

Hybrid systems

Adaptive control

System identification

MPC formulation Numerical optimization

Optimality and Stability

Applications

Nonlinear MPC

Economic MPC

Robust MPC

Stochastic MPC

Learning MPC

MHE

Optimization theory and numerics
Functional analysis
Engineering applications

Optimization algorithms Automatic differentiation Embedded optimization Distributed optimization
Chemical Engineering Electrical Engineering Mechanical Engineering

Machine learning

Neural networks Gaussian processes Reinforcement learning

Statistics and probability theory

State estimation and filtering

Hybrid MPC

Distributed MPC
Graduate

MPC for DAEs/PDEs/...

Graph theory

Fig. 2. Illustration of the main topics covered in a potential MPC lecture for undergraduates and advanced MPC topics for a graduate level course. The possible advanced topics are very broad and often require knowledge from related systems and control fields (left column) as well as neighboring disciplines (right column).

notions of optimization, ideas of stability and the demonstration of MPC on simple applications related to different engineering domains, as represented in the central top part of Fig. 2.

4. HYPOTHESES AND CONCLUSIONS 4.1 Hypotheses

In clear contrast to this sequential structure, the scope of advanced MPC topics that can be presented in a graduate MPC course is much broader. The wide range of topics leads to many possible pathways and focus areas, which can be established, e.g., depending on the specific engineering department or the research interests of the lecturer. The advanced topics cover usual concepts discussed in most of the MPC textbooks mentioned in Section 2.6 such as nonlinear MPC including Lyapunov theory, but also more specialized ideas as MPC for hybrid systems or stochastic MPC.
The central bottom part of Fig. 2 represents the wide variety of advanced MPC topics that can be covered in an MPC graduate course. Observe that this does not only include MPC but also its counterpart, i.e., Moving Horizon Estimation (MHE). It is also interesting to note that the teaching of advanced MPC requires additional concepts from systems and control (left part of Fig. 2) as well as from neighboring disciplines such as optimization theory, machine learning or statistics (see right part of Fig. 2).
If students have a broader background, a graduate course may safely deviate from the undergraduate structure. For example, an in-depth discussion of optimal control theory with details on dynamic programming and Pontryagin's minimum principle could be a good starting point to motivate the formulation of the MPC problem. While the central points are probably shared between the graduate and undergraduate courses (MPC formulation, optimization, stability), the order, the didactic story-line, and the included advanced topics can substantially vary between graduate MPC courses.

This note has advocated the prospect of teaching practical MPC in undergraduate courses. We illustrated that students must meet only limited requirements before they can successfully participate in an undergraduate MPC course. At the same time, MPC is one of the conceptually easiest avenues towards MIMO control and towards constrained control. Our main hypotheses are:
(H1) Undergraduate MPC teaching is promising and may increase the attractivity of graduate studies in systems and control.
(H2) MPC can be taught immediately after completing basic math courses and a first introductory control course (i.e., in the 2nd or 3rd year of a B.Sc. program).
Depending on the curriculum and the focus of the hosting department, (H2) can even be sharpened. For instance, if control is taught to students in computer science, MPC could reasonably serve as the first (and possibly only) contact with control. In any case, teaching MPC will also rely on suitable textbooks. The brief overview on available MPC and NMPC textbooks--which does not claim to be comprehensive--shows that the community has been very productive. Yet, it stands out that:
(H3) There appears to be no dedicated undergraduate text book on MPC, while many recent monographs cover the linear-quadratic material as a gateway to more advanced topics.
In the view of the authors, consensus on which elements to cover in undergraduate MPC course is rather easily obtained. However, teaching of advanced MPC material is a different matter:

(H4) Advanced courses offer synergy potential with numerous topics in systems and control and beyond. If the MPC concept is conveyed in introductory lectures, this provides freedom to capitalize on such synergies.

4.2 Final remarks

We are convinced that MPC as a research field will continue to strive due to its flexibility with respect to outside trends and the inside creativity of the community to explore new directions. Moreover, while the decision how to teach MPC on an advanced graduate level may depend on the specific setting (institution, existing related courses, number and prior knowledge of students, . . . ), there appears to be no doubt that transferring elements of MPC teaching to the undergraduate level is a promising, if not necessary, endeavor which may turn into an attractive gateway towards graduate studies in systems and control. Likewise, offering MPC education to non-engineering students, e.g., from computer science, is promising as system and control methods are rapidly diffusing into other domains.

REFERENCES

ainewsletter.com (2005).

Ai newsletter.

URL http://

www.ainewsletter.com/newsletters/aix_0501.htm#w. Archived

newsletter.

Andersson, J., Gillis, J., Horn, G., Rawlings, J., and Diehl, M.

(2019). Casadi: a software framework for nonlinear optimization

and optimal control. Mathematical Programming Computation,

11(1), 1­36.

°Astr¨om, K.J. and Murray, R.M. (2021). Feedback systems: an

introduction for scientists and engineers. Princeton University

Press. 1st edition appeared in 2008.

Bemporad, A., Morari, M., Dua, V., and Pistikopoulos, E. (2002).

The explicit linear quadratic regulator for constrained systems.

Automatica, 38(1), 3­20.

Bemporad, A., Ricker, N., and Morari, M. (2018). Model Predictive

Control Toolbox User's Guide. The Mathworks Inc.

Borelli, F., Bemporad, A., and Morari, M. (2017). Predictive Control

for linear and hybrid systems. Springer.

Camacho, E.F. and Bordons Alba, C. (2007). Model Predictive

Control. Springer, 2nd edition. 1st edition published in 1999.

Diehl, M., Uslu, I., Findeisen, R., Schwarzkopf, S., Allg¨ower, F.,

Bock, H., Bu¨rner, T., Gilles, E., Kienle, A., Schlo¨der, J., and

Stein, E. (2001). Real-time optimization for large scale processes:

Nonlinear model predictive control of a high purity distillation

column. In Online Optimization of Large Scale Systems, 363­383.

Springer.

Ellis, M., Liu, M., and Christofides, P. (2017). Economic Model

Predictive Control: Theory, Formulations and Chemical Process

Applications. Springer, Berlin.

Findeisen, R., Graichen, K., and Mo¨nnigmann, M. (2018). Embed-

ded optimization in control: An introduction, opportunities, and

challenges (in German). at - Automatisierungstechnik, 66(11),

877­902.

Galeani, S., Tarbouriech, S., Turner, M., and Zaccarian, L. (2009).

A tutorial on modern anti-windup design. European Journal of

Control, 15(3-4), 418­440.

Gru¨ne, L. and Pannek, J. (2017). Nonlinear Model Predictive

Control. Springer.

Hackathorn, J., Solomon, E., Blankmeyer, K., Tennial, R., and

Garczynski, A. (2011). Learning by doing: An empirical study of

active teaching techniques. Journal of Effective Teaching, 11(2),

40­54.

Herceg, M., Kvasnica, M., Jones, C., and Morari, M. (2013). Multi-

Parametric Toolbox 3.0. In Proc. of the European Control

Conference, 502­510. Zu¨rich, Switzerland. http://control.ee. ethz.ch/~mpt. Houska, B., Ferreau, H., and Diehl, M. (2011a). ACADO toolkit ­ an open-source framework for automatic control and dynamic optimization. Optimal Control Applications and Methods, 32(3), 298­312. Houska, B., Ferreau, H., and Diehl, M. (2011b). An auto-generated real-time iteration algorithm for nonlinear MPC in the microsecond range. Automatica, 47(10), 2279­2285. Jerez, J., Goulart, P., Richter, S., Constantinides, G., Kerrigan, E., and Morari, M. (2014). Embedded online optimization for model predictive control at megahertz rates. IEEE Transactions on Automatic Control, 59(12), 3238­3251. Kalman, R. (1960). Contributions to the theory of optimal control. Bol. Soc. Mat. Mexicana, 5(2), 102­119. Kouvaritakis, B. and Cannon, M. (2016). Model Predictive Control. Classical, Robust and Stochastic. Springer. Lee, E. and Markus, L. (1967). Foundations of Optimal Control Theory. The SIAM Series in Applied Mathematics. John Wiley & Sons New York, London, Sydney. Lofberg, J. (2004). Yalmip: A toolbox for modeling and optimization in matlab. In 2004 IEEE International Conference on Robotics and Automation, 284­289. IEEE. Maciejowski, J.M. (2002). Predictive Control with Constraints. Pearson Education Limited, Prentice Hall, London. Mayne, D., Rawlings, J., Rao, C., and Scokaert, P. (2000). Constrained model predictive control: Stability and optimality. Automatica, 36(6), 789­814. M¨onnigmann, M. and Kastsian, M. (2011). Fast explicit model predictive control with multiway trees. In Proceedings of the 18th IFAC World Congress, 1356­1361. Nesterov, Y. (1983). A method for solving a convex programming problem with convergence rate 1/k2. Soviet Mathematics Doklady, 27(2), 372­376. Ohtsuka, T. and Kodama, A. (2002). Automatic code generation system for nonlinear receding horizon control. Transactions of the Society of Instrument and Control Engineers, 38(7), 617­623. Propoi, A. (1963). Application of linear programming methods for the synthesis of automatic sampled-data systems. Avtomat. i Telemekh, 24(7), 912­920. Qin, S. and Badgwell, T. (2000). An overview of nonlinear model predictive control applications. In F. Allg¨ower and A. Zheng (eds.), Nonlinear model predictive control, volume 26 of Progress in Systems and Control Theory, 369­392. Birkh¨auser. Qin, S. and Badgwell, T. (2003). A survey of industrial model predictive control technology. Control engineering practice, 11(7), 733­764. Rawlings, J.B., Mayne, D.Q., and Diehl, M.M. (2017). Model Predictive Control: Theory, Computation, and Design. Nob Hill Publishing. Richter, S., Jones, C., and Morari, M. (2009). Real-time inputconstrained MPC using fast gradient methods. In Proceedings of the 48th IEEE Conference on Decision and Control and the 28th Chinese Control Conference, CDC/CCC, 7387­7393. IEEE. Rossiter, J.A. (2004). Model-Based Predictive Control: a Practical Approach. CRC Press. Seron, M.M., Goodwin, G.C., and De Don´a, J.A. (2003). Characterisation of receding horizon control for constrained linear systems. Asian Journal of Control, 5(2), 271­286. Wang, L. (2009). Model Predictive Control System Design and Implementation Using MATLAB®. Springer Science & Business Media. Wang, Y. and Boyd, S. (2010). Fast model predictive control using online optimization. IEEE Transactions on Control Systems Technology, 18(2), 267­278. Zometa, P., K¨ogel, M., Faulwasser, T., and Findeisen, R. (2012). Implementation aspects of model predictive control for embedded systems. In Proceedings of the 2012 American Control Conference, Montreal, Canada, 1205­1210.

