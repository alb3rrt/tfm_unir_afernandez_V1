Irregularly Clipped Sparse Regression Codes

Wencong Li Japan Advanced Institute of
Science and Technology 923-1292 Nomi, Japan Email: liwencong@jaist.ac.jp

Lei Liu Japan Advanced Institute of
Science and Technology 923-1292 Nomi, Japan Email: leiliu@jaist.ac.jp

Brian M. Kurkoski Japan Advanced Institute of
Science and Technology 923-1292 Nomi, Japan Email: kurkoski@jaist.ac.jp

arXiv:2106.01573v1 [cs.IT] 3 Jun 2021

Abstract--Recently, it was found that clipping can significantly improve the section error rate (SER) performance of sparse regression (SR) codes if an optimal clipping threshold is chosen. In this paper, we propose irregularly clipped SR codes, where multiple clipping thresholds are applied to symbols according to a distribution, to further improve the SER performance of SR codes. Orthogonal approximate message passing (OAMP) algorithm is used for decoding. Using state evolution, the distribution of irregular clipping thresholds is optimized to minimize the SER of OAMP decoding. As a result, optimized irregularly clipped SR codes achieve a better tradeoff between clipping distortion and noise distortion than regularly clipped SR codes. Numerical results demonstrate that irregularly clipped SR codes achieve 0.4 dB gain in signal-to-noise-ratio (SNR) over regularly clipped SR codes at code length  2.5 × 104 and SER  10-5. We further show that irregularly clipped SR codes are robust over a wide range of code rates.
I. INTRODUCTION
Sparse regression (SR) codes were introduced and studied by Barron and Joseph [1] and were shown to achieve the capacity of the additive white Gaussian noise (AWGN) channel when the code length and the rate of non-zero symbols go to infinity [2]­[4]. Furthermore, the code rate can be easily changed by adjusting the matrix size directly rather than rebuilding the parity check matrix carefully as in low density parity check (LDPC) codes [5] because there is no sparse/tree-like requirement on the measurement matrix. The low-complexity fast Fourier transform (FFT) algorithm can be used to reduce the complexity and efficient approximate message passing (AMP) type algorithms can be used for decoding to guarantee a Bayes-optimal solution, i.e., the minimum mean square error (MMSE) solution [2]­[4]. However, SR codes have a weakness at finite code length. When the code length and the compression rate are finite, the performance of SR codes is far from the capacity, and much worse than the widely used LDPC codes.
To improve the performance and competitiveness of SR codes, several techniques have been introduced. Spatialcoupling, originally introduced for LDPC codes, was used in SR codes [4] to obtain a Bayes-optimal decoding performance for any compression rate. Recently, it was found that regular clipping, a technique that is generally used to reduce the peakto-average-power ratio (PAPR), can also improve the section error rate (SER) performance of SR codes significantly [6]. When a signal is clipped, we compensate by scaling the clipped signal to maintain a fixed transmit power; the intuition

of clipped SR codes is that this scaling is more beneficial than the penalty of distortion due to clipping. Therefore, there exists a tradeoff between the clipping distortion and noise distortion. An optimal clipping threshold can bring a significant gain in SER performance for SR codes at finite code length, sometimes achieving 4 dB in SNR at code length 104. However the performance is still not very close to the capacity (about 2 dB at code length 104).
This paper considers irregular clipping of SR codes. In addition, a permuted discrete cosine transform (DCT) matrix is used for the SR code measurement matrix, rather than an i.i.d. Gaussian matrix as in previous work. Thus, lowcomplexity fast DCT and inverse DCT (IDCT) algorithms can be applied to reduce the encoding and decoding complexity of SR codes. Orthogonal AMP (OAMP) algorithm [7] (see also closely-related earlier works in [8], [9]) is exploited for the decoding of the clipped SR codes. It was shown in [10], [11] that state evolution (SE) can asymptotically characterize the performance of OAMP algorithm, similar to extrinsic information transfer (EXIT) chart in iterative decoding [12], [13]. In this paper, the main contributions are summarized as follows.
· To further improve the SER performance of regularly clipped SR codes, we propose an irregularly clipped SR code. In irregularly clipped SR codes, a new irregular clipping method applies different clipping thresholds to different symbols, which provides a larger optimization space and thus results in better SER performance.
· Based on the SE analysis for the OAMP decoding, the distribution of irregular clipping thresholds is optimized to minimize the SER of irregularly clipped SR codes, which is a concave optimization and thus can be solved by standard convex optimization tools.
· We provide numerical results to demonstrate the efficiency of irregularly clipped SR codes. Specifically, comparing with the existing regularly clipped SR codes, the proposed irregularly clipped SR codes achieve about 0.4 dB gain in signal-to-noise-ratio (SNR) at code length  2.5×104 and SER  10-5. Furthermore, the irregularly clipped SR codes are robust in a wide range of code rates, e.g., from 0.2 (low rate) to 1 (high rate).
The findings in this paper provide a promising direction to significantly enhance the performance of SR codes.

II. PRELIMINARIES
In this section, we briefly introduce SR codes, regularly clipped SR codes and OAMP decoding.
Consider an AWGN channel:

y = c + n,

(1)

where c  RM is an encoded vector and n  N (0, n2 IM ) is a Gaussian noise vector. We define SNR = n-2. The goal is to recover c via the received signal vector y.

A. Sparse Regression (SR) Codes An SR code is generated by [2], [4]:

c = Ax,

(2)

where A  RM×N is a measurement matrix with compression rate  = M/N  1, and x is an information-carrying sparse

vector that contains L sections. Each section is of length B and has a single non-zero entry with amplitude B. An example

of x is as follows:

section 1

section 2

section L







 : xT= [0, . . . , 0, B | . . . , 0, B, 0 | . . . , | B, 0, . . . , 0]. (3)

The positions of the non-zero symbols in x carry the information. In this code, the code length is M and the amount of information is LlogB. Thus, the code rate is given by R = LlogB/M .
For theoretical analysis in [2], [4], A  RM×N in (2) is assumed to have independent identically distributed Gaussian (IIDG) entries over N (0, N -1). In this paper, A is generated by randomly selecting M rows from the N × N DCT matrix. Hence, the low-complexity fast DCT algorithm can be used in encoding and decoding. In addition, OAMP [7] can be applied to such non-IID sensing matrices. Furthermore, it is shown that the performance of partial DCT matrices is better than IID Gaussian matrices [9]. Apart from that, it was proved that the OAMP decoding is potential Bayes optimal and obtains the maximum a posteriori (MAP) solution of (1).
SR codes work well at a very large length but are not as good as expected in more practical scenarios (e.g., limited code length and high code rates). Therefore a new method to improve the performance is needed.

B. Regularly Clipped SR Code

Clipping is normally applied to reduce PAPR. It sets the signals whose absolute value is larger than a given threshold to the threshold and then normalizes the transmitted signals to keep the same power.
Let clip(·) be a symbol-by-symbol clipping given by

 , z>



clip (z) = z, |z|  .

(4)

 - , z<-

The clipping ratio (CR) of clip(·) in (4) is defined as CR = 10log10( 2/E{z2}). Then, the codeword c is given by a normalized clipping function defined as [6]:

c =  clip (Ax),

(5)

! ~ sparse





clip





 







(a) Clipped SR codes

"&' !!%&



#&%( )"%$'

orth

"#$% )!"#$





"#$% !!"#$

orth

#&%(  !"%$'

!"

"&' )!%&

(b) OAMP decoding



#'$(%&

#'$(%&

 (c) State evolution

Fig. 1. Graphical illustrations of (a) clipped SR codes and AWGN channel, (b) OAMP decoding and (c) state evolution of OAMP. Functions  and  in (b) are respectively corresponding to  and  in (a). F and F -1 are DCT and inverse DCT (IDCT) corresponding to the transfer F in (a). Orthogonalization
"orth" is used to solve the correlation problem in iterative process.

where  = 

1

is a normalizing factor. We

E{ clip(Ax) 2}/M

call (5) a regularly clipped SR code since all the elements

in Ax are clipped with the same threshold . Intuitively,

 makes a power compensation for the clipping operation,

which introduces a tradeoff between the clipping distortion

and channel noise distortion.

For simplicity, we rewrite the problem as:

 : y =  clip (z) + n,

(6a)

 : z = F x,

(6b)

 : xl  P (xl), l,

(6c)

where  contains a symbol-by-symbol clipping and an AWGN channel,  is a DCT process (F is a DCT matrix), xl denotes the l-th section in x, and  the block sparse modulation in (3). Fig. 1(a) gives a graphical illustration of the clipped SR codes.
Optimized clipping can significantly improve the SER performance of SR codes [6]. For example, as shown in Fig. 3, when code length = 104 and R = 0.5, the clipped SR code with optimal clipping threshold achieves 4dB gain in SNR at SER = 10-5 comparing the un-clipped case. However, it is still 2dB away from the Shannon limit (0 dB for R = 0.5) of the system in (1).

C. OAMP Decoding
Fig. 1(b) gives an illustration of the OAMP decoding process, which consists of the following modules:
· De-clipping process (·) solves the clipping-and-AWGN constraint  in (6a).
· De-modulation process (·) for the sparse modulation constraint  in (6c).

· F and F -1 correspond to the transfer constraint in (6a). · The orthogonalization "orth" solves the correlation prob-
lem in iterative process and ensures the correctness of state evolution [7].
Their expressions are given by

Declip :

zpost =  (zpri) = E{z|, zpri, vzpri }, (7a) vpost = SE(vzpri ) = var{z|, zpri, vzpri }, (7b)

Orth :

vzorth = OSE vzpost+(1-)vzpri , vzpri , zorth = O(zpost, vzpost ; zpri, vzpri ),

(7c) (7d)

IDCT :

xpri = F -1zorth, vxpri = vzorth ,

(7e)

Demod : xpost = (xpri) = E{x|, xpri, vxpri }, (7f) vpost = SE(vxpri ) = var{x|, xpri, vxpri}, (7g)

Orth :

vxorth = OSE(vxpost , vxpri ), xorth = O(xpost, vxpost ; xpri, vxpri ),

(7h) (7i)

DCT :

zpri = F xorth, vzpri = vxorth ,

(7j)

where orthogonalization is defined as

vorth = OSE(vpost, vpri)

-1

 vp-o1st - vp-r1i

,

uorth = O(upost, vpost; upri, vpri)

 vorth vp-o1stupost - vp-r1i upri ,

(8a) (8b)

and the symbol-by-symbol de-clipping and the section-bysection de-modulation are calculated by

 (zpri) = zP (z|, zpri, vzpri )dz,

(9a)

SE(vzpri ) = z2P (z|, zpri, vzpri )dz - 2(zpri),

(9b)

(xps ri) = xsP (xs|, xps ri, vxpri )dxs,

(9c)

SE(vxpri)

=

1 B

xs-(xps ri) 2P (xs|, xps ri, vxpri )dxs. (9d)

The subscript "s" denotes a section of the corresponding variance vector (see (3)).
State Evolution (SE): SE has been strictly proven to be a numerical tool [10], [11] that can asymptotically characterize the performance of OAMP decoding with any unitarilyinvariant matrices.
For simplicity, we let vz = vzpri = vxorth and vx = vxpri = vzorth . The transfer curves of the orthogonal de-clipping and

orthogonal demodulation are given by

vx = oSrEth(vz, , )  OSE SE(vz) + (1-)vz, vz (10a)

= vz -1 1-SE(vz)/vz -1- 1 , (10b)

vz = SorEth(vx)  OSE SE(vx), vx .

(10c)

where OSE(·) is given in (8). In practice, the local transfer curves oSrEth(·) and SorEth(·) can be obtained by local Monte
Carlo simulations, using the IID Gaussian property of OAMP.

III. IRREGULARLY CLIPPED SR CODE
In this section, we propose an irregular clipping technique to further improve the SER performance of the clipped SR codes. Using SE, we optimize the distribution of irregular clipping thresholds to minimize the SER of SR codes.

A. Irregular Clipping

In the regular clipping in Section II-B, all the elements are clipped based on the same threshold. Differently, in irregular clipping, different clipping thresholds can be applied to different symbols, which provides more optimization space for the SR codes and thus results in better performance.
Define the irregular clipping function as

c = clipIr,r(z).

(11)

where = [ 1 · · · K ]. Specifically, z is partitioned into K

subvectors {z1 · · · zK }, where zk is clipped with threshold k

and has length kM .  = [1 · · · K ] denotes the threshold

distribution of with 0  k  1 and

K k=1

k

=

1.

There-

fore, the codeword length is still M . Similarly, c is partitioned

into {c1 · · · cK }. Then, the irregular clipping function in (11)

is given by

ck = k clip k (zk), k = 1, . . . , K,

(12)

where

clip

(·)
k

is

defined

in

(4)

and

k

is

a

power

compen-

sation parameter for clipping function clip (·). Similarly to

k

(6), we define an irregularly clipped SR code as

~ : y = clipIr,r(z) + n,  : z = F x,

(13a) (13b)

 : xl  P (xl), l,

(13c)

where clipIr,r(·) is given in (12), and (13b) and (13c) are the same as those in (6).

B. OAMP Decoding for Irregularly Clipped SR codes
Let zpost = [z1post · · · , zKpost], zpri = [z1pri · · · , zKpri] and zorth = [z1orth · · · , zKorth]. In the decoding of irregularly clipped SR codes, the de-clipping is performed for each subvector. Thus, the de-clipping in (7) is replaced by: k,

Irr-declip :

zkpost =  k (zkpri),

K

vzpost =

k



SE
k

(vzpri

),

k=1

(14a) (14b)

where



k (·)

and

SE(·) k

are

respectively

given

in

(7a)

and

(7b). The other parts (e.g. demodulation, orthogonalization and

DCT/IDCT) of the OAMP decoding of irregularly clipped SR codes are the same as those in (7).
State Evolution (SE): In irregularly clipped SR codes, the transfer curve of orthogonal irregular de-clipping is given by

vx = ~oSrEth(vz, , )

K

-1

-1





k



SE
k

(vz

)

+

(1

-

)vz

- vz-1

k=1

K

-1

= vz -1 1 -

k



SE
k

(vz

)/vz

-1 ,

k=1

(15a) (15b) (15c)

where oSrEth(vz, ) is given in (10b). The transfer curve of orthogonal demodulation is the same as the regularly clipped

SR codes in (10c). Complexity: It is easy to see that the computational com-

plexity of irregularly clipped SR codes is almost the same as

that of regularly clipped SR codes, dominated by DCT/IDCT with complexity O(N log N ) per iteration.

C. Optimization of Irregular Clipping Thresholds

In this subsection, given the irregular clipping threshold vector , we will discuss the optimization  = [1 · · · K ]. Intuitively, the distribution vector  controls the contribution
of the different clipping thresholds. Therefore, we can optimize  to minimize the SER performance of irregularly clipped SR codes. Equivalently, given SNR, we can maximize the minimal gap between the transfer curves ~oSrEth and SorEth in [vmin, 1], where vmin is a small enough positive number to obtain the desired SER performance. Hence, the optimization problem
can be described as

P1 :

max min
 v[vmin,1]

oSrEt-h1(v) - ~oSrEth(v,

, ),

K

s.t. k = 1,

k=1

0  k  1,

(16a) (16b) (16c)

where ~oSrEth(v, , ) is given in (15), and oSrEt-h1 (·) is an inverse function of SorEth(·) in (10c).
Notice that the objective function in P1 is a complicated function of v. Given , it is very difficult to find the analytical
solution of P1 on the continuous region v  [vmin, 1]. To overcome this problem, we consider minimization on the uniformly
sampling points V = {vi} on [vmin, 1] in log domain. In general, we set vmin = 10-6 and the number of sampling points as 100, i.e., |V| = 100. Therefore, following (15), P1 can be rewritten to the following optimization problem:

P2 : max min
 viV
s.t.

oSrEt-h1 (vi) - ~oSrEth(vi, , ),
K
k = 1,
k=1
0  k  1.

(17a) (17b) (17c)

Note

that

,

vi

,



SE
k

(vi

)

are

all

positive.

It

is

easy

to

verify

that {~oSrEth(vi, , ), i} (see (15)) are concave functions of .

(a) Irregularly Clipped SR Code SNR=1.4 dB
10

8

x

v

6

4

de-mod SE

orth

2

0

10-5

10-4

10-3

10-2

10-1

100

v
z

(b) Regularly Clipped SR Code SNR=2.0 dB
10

8

x

v

6

4

de-mod SE

orth

2

0

10-5

10-4

10-3

10-2

10-1

100

v

z

Fig. 2. SE transfer charts of (a) the optimized regularly clipped SR code with SNR = 2 dB and (b) the optimized irregularly clipped SR codes with SNR = 1.3 dB. B = 64, L = 2048 and R = 0.5. The optimal CR of regular clipping for regularly clipped SR codes is -13 dB.

The minimization of concave functions is also concave [14]. In addition, the constraints in P2 are linear. Therefore, P2 is a concave problem of  and thus it can be solved using standard convex optimization tools.
D. Transfer Chart Comparison of Regularly Clipped and Irregularly Clipped SR codes
Fig. 2 compares the SE transfer charts of the optimized regularly clipped SR codes and the optimized irregularly clipped SR codes. As illustrated in Fig. 2, to ensure the OAMP decoding converges to the target SER, the key is to create a decoding tunnel between the curves of demodulation and declipping. Let vmin be the target performance. There should be no fixed point in the region v  vmin, since otherwise the tunnel will be closed at v > vmin. It is shown that the tunnel is opened at SNR = 2 dB for regularly clipped SR codes (see Fig. 2(a)), and at SNR = 1.3 dB for irregularly clipped SR codes (see Fig. 2(b)). In other words, following the SE transfer chart analysis, irregularly clipped SR codes achieve about 0.7 dB gain in SNR comparing with regularly clipped SR codes for the target performance vmin = 10-5.
IV. SIMULATION RESULTS
Fig. 3 gives the SERs of non-clipped SR code, optimized regularly clipped SR code and optimized irregularly clipped SR code. The parameters are set as B = 64, L = 2048, R = 0.5 (code rate), M = 24, 576 (code length) and SNR = n-2.

Section error rate (SER) Section error rate (SER)

100
10-1
10-2
10-3 Irregular clip
10-4

non-clip Regular clip

100 R = 0.2
10-1 10-2 10-3 10-4

R = 0.4

R = 0.6 R = 0.8 R = 1.0

10-5

10-5

0.5 1 1.5 2

2.5

3 3.5

4 4.5

5

-6

-4

-2

0

2

4

6

8

SNR (dB)

SNR (dB)

Fig. 3. SER comparison between the non-clipped SR codes, optimized regularly clipped SR codes and optimized irregularly clipped SR codes. B = 64, L = 2048, R = 0.5 (code rate), M = 24, 576 (code length) and SNR = n-2. The CRs and its distribution  are given in Table I. The maximum number of iterations is 120. The optimal CR of regular clipping for regularly clipped SR codes is -13 dB.

Fig. 4. SERs of the optimized irregularly clipped SR codes with different
code rates. B = 64, L = 2048, R = {0.2, 0.4, 0.6, 0.8, 1} (code rates),
M = {61440, 30720, 20480, 15360, 12288} (code lengths) and SNR = n-2. CRs and the distribution are given in Table I. The maximum number of iterations is 100.

The optimal CR of regularly clipped SR codes is -13 dB. The irregularly clipped SR codes involve 19 candidate CRs for irregular clipping. For the irregularly clipped SR codes in Fig. 3, the CRs and corresponding distribution vector  are optimized for each simulated SNR (see the concave optimization in Section III-C). The maximum number of iterations is 120. As we can see in Fig. 3, the proposed irregularly clipped SR codes achieve better SER performance than regularly clipped and non-clipped. Comparing with regularly clipped SR codes [6], irregularly clipped SR codes achieve about 0.4 dB gain in SNR at SER=10-5.
Fig. 4 gives the SERs of optimized irregularly clipped SR codes with code rates R = {0.2, 0.4, 0.6, 0.8, 1}. The parameters are set as B = 64, L = 2048, and M = {61440, 30720, 20480, 15360, 12288} (code lengths). The maximum number of iterations is 100. As can be seen, the optimized irregularly clipped SR codes exhibit characteristic waterfall behavior for a range of rate from 0.2 (low rate) to 1 (high rate). Every point in Fig. 4 uses different CRs and . Table I shows the  of each code rate for the points whose SER is close to 10-5.

TABLE I OPTIMIZED COEFFICIENT CRS AND 

R SNR (dB)

CR (dB) and 

0.2

-3.6

-300 -12

-10

-8

0.04460 0.27394 0.38313 0.29831

-300 -30

-16 -10

-8

0.4

0.2

0.02590 0.05297 0.00756 0.00145 0.17107

-6

-2

0

4

0.51890 0.13035 0.00790 0.08390

-300

-24 -22 -18 -6

0.5

1.6

0.01251 0.12000 0.00027 0.00293 0.00031 -5 -4 -3 -2

0.07169 0.56832 0.16883 0.05508

-300

-30

-19

-16

0.6

2.8

0.02048 0.01288 0.13391 0.00462

-12

-4

-2

0

0.00034 0.19962 0.26163 0.36647

-300 -30 -22

-16

-14

0.8

4.8

0.01207 0.02881 0.01619 0.07276 0.04741

-10

0

2

6

8

0.07536 0.06970 0.43372 0.17212 0.07178

-300 -30

-22 -20

1.0

6.4

0.00899 0.03115 0.00010 0.00380

-16

-14

-6 300

0.00037 0.16628 0.00015 0.78912

ACKNOWLEDGMENT

V. CONCLUSION
This paper investigated irregular clipping for SR codes with OAMP decoding. Using SE analysis, we constructed a convex optimization problem to minimize the SER of irregularly clipped SR codes by optimizing the distribution of the clipping thresholds. As a result, the proposed irregularly clipped SR codes achieve a better SER performance than the existing regularly clipped SR codes. When compared with regularly clipped SR codes, irregularly clipped SR codes achieve about 0.4 dB gain in SNR at code length  2.5 × 104 and SER  10-5. Furthermore, irregularly clipped SR codes are robust in a wide range of code rates, e.g., from 0.2 (low rate) to 1 (high rate).

The authors thank Shansuo Liang for the discussions that have improved the quality of this work greatly.
REFERENCES
[1] A. Joseph and A. R. Barron, "Least squares superposition codes of moderate dictionary size are reliable at rates up to capacity," IEEE Trans. Inf. Theory, vol. 58, no. 5, pp. 2541-2557, May 2012.
[2] C. Rush, A. Greig, and R. Venkataramanan, "Capacity-achieving sparse superposition codes via approximate message passing decoding," IEEE Trans. Inf. Theory, vol. 63, no. 3, pp. 1476-1500, Mar. 2017.
[3] J. Barbier, C. Schülke, and F. Krzakala, "Approximate message-passing with spatially coupled structured operators, with applications to compressed sensing and sparse superposition codes," J. Stat. Mech., Theory Experim., vol. 63, no. 5, p. P05013, May 2015.

[4] J. Barbier and F. Krzakala, "Approximate message-passing decoder and capacity-achieving sparse superposition codes," IEEE Trans. Inf. Theory, vol. 63, no. 8, pp. 4894-4927, Aug. 2017.
[5] R. G. Gallager, "Low-density parity-check codes," IRE Trans. Inform. Theory, vol. IT-8, pp. 21­28, Jan. 1962.
[6] S. Liang, J. Ma, and L. Ping, "Clipping can improve the performance of spatially coupled sparse superposition codes," IEEE Commun. Lett., vol. 21, no. 12, pp. 966-969, Dec. 2017.
[7] J. Ma and L. Ping, "Orthogonal AMP," IEEE Access, vol. 5, pp. 2020­ 2033, 2017, preprint arXiv:1602.06509, 2016.
[8] J. Ma, X. Yuan and L. Ping, "Turbo compressed sensing with partial DFT sensing matrix," IEEE Signal Process. Lett., vol. 22, no. 2, pp. 158-161, Feb. 2015.
[9] J. Ma, X. Yuan and L. Ping, "On the performance of Turbo signal recovery with partial DFT sensing matrices," IEEE Signal Process. Lett., vol. 22, no. 10, pp. 1580-1584, Oct. 2015.
[10] K. Takeuchi, "Rigorous dynamics of expectation-propagation-based signal recovery from unitarily invariant measurements," IEEE Trans. Inf. Theory, vol. 66, no. 1, 368 - 386, Jan. 2020.
[11] S. Rangan, P. Schniter, and A. Fletcher, "Vector approximate message passing," IEEE Trans. Inf. Theory, vol. 65, no. 10, pp. 6664-6684, 2019.
[12] S. ten Brink, "Convergence behavior of iteratively decoded parallel concatenated codes," IEEE Trans. Commun., vol. 49, no. 10, pp. 1727­ 1737, Oct. 2001.
[13] S. ten Brink, G. Kramer, and A. Ashikhmin, "Design of low-density parity-check codes for modulation and detection," IEEE Trans. Commun., vol. 52, no. 4, pp. 670­678, April 2004.
[14] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge, U.K.: Cambridge Univ. Press, 2004.

