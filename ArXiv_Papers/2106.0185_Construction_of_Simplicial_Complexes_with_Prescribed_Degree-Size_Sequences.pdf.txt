Construction of Simplicial Complexes with Prescribed Degree-Size Sequences
Tzu-Chi Yen Department of Computer Science, University of Colorado, Boulder, Colorado 80309, USA
We study the realizability of simplicial complexes with a given pair of integer sequences, representing the node degree distribution and facet size distribution, respectively. While the s-uniform variant of the problem is NP-complete when s  3, we identify two populations of input sequences, most of which can be solved in polynomial time using a recursive algorithm that we contribute. Combining with a sampler for the simplicial configuration model [Young et al., Phys. Rev. E 96, 032312 (2017)], we facilitate efficient sampling of simplicial ensembles from arbitrary degree and size distributions. We find that, contrary to expectations based on dyadic networks, increasing nodes' degrees reduces the number of loops in simplicial complexes. Our work unveils a fundamental constraint on the degree-size sequences and sheds light on further analysis of higher-order phenomena based on local structures.

arXiv:2106.00185v1 [cs.SI] 1 Jun 2021

Capturing higher-order dependencies is essential for structural interpretation of the organization and behavior of complex systems [1­3]. Simplicial complex modeling, among other methods in applied topology [4­6], provides a combinatorial description of the topology of the system, highlighting properties that remain invariant when the system undergoes deformations. Similar to standard networks, simplicial complexes are composed of nodes that represent system observables, and high-dimensional analogues of edges, called simplices, that represent polyadic relationships among the nodes. They manifest themselves in several recent discoveries in complex systems, including the mesoscopic localization of epidemics [7], the critical appearance of topological invariants in dynamical systems [8­10], the bistability and hysteresis of contagion models [11­13], the role of group activation in contagion processes [14], and the phase transition in functional brain networks [15]. In a related role, simplicial complexes have been used to summarize static features, addressing questions about the local geometry of data, such as in distinguishing the voting patterns in densely populated cities [16] and in describing the shape of scientific collaborations [17] or the energy landscape of molecules [18]. Despite the significance of simplicial modeling in a wide range of fields, the basic question of which degree-size sequences can be realized by a complex is still open. In this Letter we make progress in this direction by extensive numerical experiments.

There are sequences t that cannot be realized by any simplicial complex. Hence, inspired by Ref. [19], we pose the simplicial complex realization problem: Given integer sequences t = (d, s), does there exist a simplicial complex K with that degree-size sequence? When the answer is affirmative, we call the sequence simplicial.
The degree-size sequence reflects the local interaction patterns of the system. Models that constrain these features can often be used as null models that detect salient structures. In particular, the simplicial configuration model (SCM) [19] specifies a distribution of simplicial complexes with fixed degree-size sequences, and can be sampled via a Markov chain Monte Carlo (MCMC) algorithm. The SCM extends the configuration model for graphs [20, 21] and similar efforts in simplicial complexes of equal-size facets [22]. Critically, the MCMC requires an initial simplicial configuration to work, restricting its use to empirical data which can act as the initialization. The algorithm we propose yields an initialization for arbitrary sequences, not necessarily taken from an observed dataset.
Related work.--A key difficulty in simplicial complex realization is that no facet is allowed to be completely contained in any other facet; we call this the "no-inclusion constraint". In contrast, hypergraphs do not respect the constraint. For simple hypergraphs, Ref. [23] gives a rejection

Let V be a finite set of nodes. A simplicial complex on V is a collection K of nonempty subsets of V , called simplices, subject to two requirements: First, for each node v  V , the singleton {v}  K; second, for all simplices   K, all its proper subsets    must also be in K. A facet is a maximal simplex, i.e., one that is not a subset of any other simplex. Note that a simplicial complex can be fully specified by listing only its facets, and we follow that convention here. We define the degree di of a node vi as the number of facets incident on vi and the size (cardinality) sj of a facet j as the number of nodes it contains. For any simplicial complex K, there is a corresponding degree-size sequence tK = (d, s), where d = {d1, d2, . . . , dn} and s = {s1, s2, . . . , sm}, see Fig. 1. However, the reverse statement is not always true.

(a)
1
1 2
1

(b)

(c)

33221111 33221111

4

4

1 3

3 2

3 2

2

2 2

2 2

3

1

1

FIG. 1. (a) Geometric representation |K| of a simplicial complex K with degree-size sequence d = {3, 3, 2, 2, 1, 1, 1, 1} and s = {4, 3, 2, 2, 2, 1}. The numbers on the nodes represent their degrees. (b) Its incidence matrix, where the circles represent 1's and each row (respectively column) constitutes a facet (respectively node). (c) An alternative realization of the same sequence, following the algorithm described in the main text.

2

sampling algorithm that samples realizations with given degrees and hyperedge sizes. For their non-simple variants, Ref. [24] considers an MCMC approach for generating such hypergraphs and Ref. [25] ensures the existence of a starting hypergraph realization which, however, needs not be simplicial.
Testing whether a degree-size sequence is simplicial is a generalization of the graph realization problem, in which the main result is the Erds­Gallai theorem [26] that exactly characterizes graphical sequences with a set of easy-to-test inequalities. Equivalently, a particular graph realization can be constructed with a recursive algorithm by Havel and Hakimi [27, 28]. Having polynomial solutions to decision problems as such expedites understanding of the fundamental properties of networks. For example, all scale-free networks are sparse [29] and highly heterogeneous networks tend to exhibit degree disassortativity [30, 31]. For simpliciality testing, however, due to the no-inclusion constraint, none of these algorithms applies. Recently, Deza, Levin, Meesum, and Onn [32] proved that deciding whether a given sequence is the degree sequence of a simple s-uniform hypergraph is NP-complete when s  3, through a reduction from the 3-partition problem [33]. Interestingly, simple s-uniform hypergraphs are equivalent to equidimensional simplicial complexes, because when all hyperedges are the same size, they automatically satisfy the no-inclusion constraint. This implies that deciding simpliciality is hard and there may not exist an efficient algorithm to enumerate and sample these instances. Yet, as our exploration reveals, not all sequence combinations are equally hard. For example, for any s, taking the trivial degree sequence d = {1, . . . , 1} immediately yields a simplicial realization.
In this Letter, we develop a deterministic, backtracking-based search algorithm that always correctly solves simpliciality, and present evidence that on most instances it runs in polynomial time. We then explore the topology of the constructed complex more generally via its Betti numbers, as well as using it as a seed for the SCM ensemble. With the randomized realizations, we reveal the regimes in which their expected topology changes as a function of the degree and size sequences.
Algorithm.-- Our algorithm proceeds as follows. It is given as input a node degree sequence d and a facet size sequence s, where both sequences are nonincreasing. Let n = |d| and m = |s|. As a preprocessing step, we pair the 1's in d with those in s to make a partial output. Simpliciality fails trivially if there are fewer 1's in d than in s, as it is doomed to violate the no-inclusion constraint, or if t1 > m or s1 > n, or
d = s, as it would be impossible to form an incidence matrix.
Next, we pick s1 nodes to make a candidate facet ^1. This selection is not done stochastically, but reflects a key branching heuristic in the algorithm, which prioritizes nodes with higher degrees. In other words, higher degree nodes will

be consumed earlier to make larger facets. We ensure that ^1 does not form a subset of any existing facet, or we will proceed with the next candidate in heuristic order. We will validate ^1 with a series of rules, and if it fails any of them, we move to the next candidate, until we accept and advance to the next branching stage to search for ^2 with s2 nodes. For ^2, the higher degree nodes in the input still attain precedence.
With this overall structure in mind, we now express the algorithm recursively. At each branching stage , the input is a 3-tuple (d , s , B ), where d is the residual degree sequence and s the residual size sequence, denoting the marginal sums of the incidence matrix that still need to be fulfilled. In addition, we have a collection of "blocking" facets B := {k : 1  k < }, where each accepted facet k plays a role in the no-inclusion constraint. After accepting ^ , the output is again a 3-tuple (d +1, s +1, B +1). The algorithm returns a
simplicial realization if |d | = |s | = 0, or a negative result when the entire search tree has been traversed.
To validate a candidate facet ^ , we assume that ^ is accepted and virtually move to the next branching stage to obtain a number of intermediate data, which must obey the validation rules before we actually branch. Precisely, we compute the 3-tuple (d +1, s +1, B +1) at stage + 1 and the set of non-shielding nodes Q := V \ ^ , where V is the set of nodes at stage . For clarity, we drop all superscripts in the following developments.

(a)

c 0

Non-simplicial

Simplicial
100

80

60

10 20 30 40

Instances

(b)
105 104 103 102 101 100
0.0
(c)
1.0

Degree sequence

Fraction

0.8

40

0.6

0.4 20
0.2

0.0

20 40 60 80 100

0

Size sequence

Non-simplicial and hard Simplicial and hard

0.2 0.4 0.6 0.8 1.0 Convergence time × 105
(E)

1060

1052

1044

P / N
Sp / S S / N

1036 1028 1020 1012

104

2 4 6 8 10

Instance size

× 102

FIG. 2. (a) Realizability of all degree-size sequences with partitions of 13, following ascending compositions. The colorbars indicate convergence time c, where white to bluish colors mark the non-simplicial instances and gray to reddish colors mark the simplicial ones. Around 4.2% of the instances are hard. The input sequences which contain more uniform entries tend to entail more simplicial instances, as indicated by the arrows, which corresponds to a sequence of {3, 2, 2, 2, 2, 2}. (b) Convergence time distribution when size sequence is fixed at s = {3, 3, . . . , 3} with |s| = 20, with d set to all partitions of 60. Around 81% of the instances are easy (not shown). (c) Simplicial and polynomial fractions of 105 uniform random partitions [34, 35] with growing sizes. The shaded area shows the total number of potential inputs at a specific E, i.e., (E) = a(E) × a(E), where a(n) is the number of partitions of n. In all cases, we apply a cutoff at c = 105.

Rule 1 (for d and s) [36]. We ensure that all residual values in d are positive. We ask that dmax  |s|, and that smax  |d|, where equality in the latter requirement is only allowed when |s| = 1.
Rule 2 (for d, s, and Q). We require that |s|  iQ di, as every subsequent facet must contain at least one non-shielding node (i.e., element of Q) in order to not be contained in ^.
If equality holds, each subsequent facet must take exactly one non-shielding node. To secure its availability, we can thus further require that smax - 1  |d| - |Q|.
Rule 3 (for d and B). Let V be the set of nodes with positive residual degree. We require that, for every blocking facet   B, V be not a subset of .
While Rule 1 is essentially the preprocessing step, Rules 2­3 are meant to cut the combinatorial explosion as much as possible, but not prohibit any realizable sequence from being realized. There are times when accepting a candidate facet forces the algorithm to use specific nodes for the remaining facets, namely, when di = |s| for any node i. In such cases, we invoke a subroutine to recursively remove the "forced" degrees as needed. A Python implementation of the algorithm is freely available [37].
Easy & hard instances.--To benchmark the algorithm, we define the convergence time as
c = b + r ,
where b records the number of times the algorithm backtracks (due to a depleted proposal pool) and r records the number of times a proposed facet is rejected. These numbers are correlated: if we come up with better validation rules, we reduce rejections and prevent backtracking. We call a degree-size sequence easy if c is 0 (simplicial) or 1 (non-simplicial). In these cases, no backtracking is necessary, the algorithm either finds a realization in polynomial time or rejects simpliciality immediately. Otherwise, we call it hard. Of course, "hard" instances with c small will still be easy in practice, but for the purposes of understanding the problem, we find it useful to distinguish between those cases that are solved greedily by our algorithm and those that are not.
In Fig. 2(a), we show the realizability of all combinations of degree-size sequences of a fixed instance size E = d = 13. The self-similar pattern reflects the recursive nature of the algorithm. However, we are unable to conclude a recurrence relation in the spirit of Erds­Gallai, due to the inherent complexity of solving particular instances. Indeed, there are two distinct populations of easy and hard instances, where a major fraction of inputs falls in the polynomial region. The easy majority can be understood as the iterative application of the heuristic policy. For 3-uniform, NP-complete instances [Fig. 2(b)], most inputs are polynomial and, on the average, the non-simplicial instances are harder than simplicial ones,

3

(a)

(b)

0

60

Facet index 1

50

500

40

30

0

500

1000

470 480 490 500

Node index

0

FIG. 3. (a) Realization K of the degree-size sequence from the human diseasome network (after pruning included faces) [19], showing assortative degree structure. Black squares show which nodes make which facet, with n = 1100 and m = 752. The indices are sorted such that nodes (respectively facets) with a larger degree (respectively size) have a lower index. The inset zooms in on the composition of the largest 20 facets. (b) Joint Betti number distribution of the same system, with 104 realizations sampled from the SCM.

as tree exhaustion is needed. In practice, this brings about a useful feature that false negatives are kept at minimum when applying a reasonable cutoff.
To investigate the dependence of the simpliciality and hardness of degree-size sequences on the instance size, we perform extensive numerical calculations, generating uniform ensembles of sequences of random integers, (d, s), with range up to E = 1010. We test each sequence for simpliciality by applying the algorithm and compute for each E the simplicial fraction s = S/N , where S is the total number of simplicial sequences in the ensemble and N is ensemble size, chosen at N = 105. We also compute the fractions p = P/N and sp = Sp/S, where P is the total number of polynomial instances in the ensemble and Sp is the number of instances that are both simplicial and polynomial. The results, plotted in Fig. 2(c), clearly demonstrate the persistent existence of easy and hard populations at much larger sizes. An open question is to what extent we can further separate these classes in polynomial time, perhaps through better validation rules.
Topology and the heuristic policy.--When data is encoded as a simplicial complex K, it is of natural interest to characterize its homotopical information by the Betti numbers k(K) [5, 38]. These numbers quantify the k-dimensional connectivity of objects by comparing its volume and boundary at each dimension. For example, 0 is the number of connected components, 1 is the number of homological cycles (or loops), and k effectively counts the number of k-dimensional cavities. The topological cavities can mean geometric cavities in physical space, such as in granular packings [39], or they may correspond to abstract structures in experimental measurements [17]. For instance, a cavity in diffusion MRI readings could indicate axonal dropout, a neurological disorder [40]. In the following, we focus on the first two Betti numbers because they are easier to interpret.
An important feature of our heuristic policy is that the

nodes with large degrees tend to form larger facets, resulting in a core-periphery structure [41] with dangling and isolated facets on the fringe. Therefore, the heuristic tends to find a realization with a maximized number of connected components (large 0) and a minimized number of loops (small 1). We show in Fig. 3(a) this feature on an empirical degree-size sequence extracted from the human diseasome network [19, 42]. Indeed, our algorithm can discover a realization with 0 = 643 and 1 = 5 compatible with the degree-size sequence, whereas typical realizations sampled from the SCM have much lower 0 and much higher 1, see Fig. 3(b). This algorithmic feature of finding extremal Betti numbers is consistent across other empirical datasets we examined [37]. More broadly, this priority policy shows a minimal example where adding correlations can introduce atypical Betti numbers. This sheds light on growth mechanisms which incorporate delicate degree-size correlations, that generate structures with specific homology, such as being totally connected [43] or containing as many cycles as possible [44].
SCM ensembles.--To harness the algorithm, we generate random degree-size sequences and test them for simpliciality. We generate these sequences from two Poisson distributions, modified so that all facets of size 1 are guaranteed to be matched with a degree 1 node. For each simplicial sequence, we use the constructed complex to initialize an MCMC sampler for the SCM ensemble [19] and compute its mean Betti numbers ¯0 and ¯1. Then we take the average over the random partitions. Note that finding an initialization is inefficient with a rejection sampler. The result, shown in Fig. 4, is a systematic study of ¯0 and ¯1 with respect to d¯ and ¯s, where ¯s is the mean facet size and d¯ is the mean node degree, excluding the nodes that are created to match the facets.
In Fig. 4(a), we observe that the average number of connected components ¯0 , in the bulk of the SCM ensemble, decreases with increasing ¯s, likely due to the reduction of facets with cardinality 1 in the size sequence. However, the distribution of cycles ¯1 is considerably more complicated. In the low ¯s regime, the simplicial complex acts like a dyadic network, where denser networks contain more loops. By contrast, in the high ¯s regime, the system is abundant in large simplices. Once there is a fraction of higher degree nodes, we have no other option but to bundle the large facets with those nodes, resulting in a tree-like, few loops complex. We supply a parallel analysis on d-regular degree distributions in Fig. 4(b), which tend to create more loops than Poissonian ones with the same average degree, as they possess fewer high degree nodes.
The decay of the average number of cycles ¯1 when average degree d¯ is increased is reminiscent of the law of large numbers for Betti numbers in random simplicial complexes, such as the Linial­Meshulam complex [45] and the random clique complex [46]. We note that in these studies, the

4

(a)

(b)

500

400

1

300

200

100

0

0

250

0

0

10

20

30 0

10

20

30

Average facet size

Average facet size

(c)







Average facet size
FIG. 4. (a) Average of the first two Betti numbers ¯0 and ¯1 of the simplicial complexes with Poisson-Poisson degree-size sequences, (b) Poisson size sequence and d-regular degree sequence. Each point shows the median of 102 replicates of the indicated ensemble (see legend) and error bars show 25%­75% quantiles. For each realization in the ensemble, we compute the average of Betti numbers from 10 SCM replicates. All complexes have E = 103. (c) Sketches of the simplicial structure. Enlarging the facets, while fixing the degree sequence, will first increase [ 1 to 2 ] and then decrease [ 2 to 3 ] the number of loops. The complexes have the same degree distribution at d¯ = 2.86.
limiting behavior of Betti numbers is discussed in the context of increasing facet density, where the decay is driven by filling the k-dimensional cycles with (k + 1)-simplices. Here, the system has a fixed number of simplices and the decay is driven by the no-inclusion constraints that prevent the realization of any such complexes.
We also observe that ¯1 is unimodal with respect to mean facet size ¯s [Figs. 4(a) and (b)]. The unimodality comes from the competitive relationship between the gradually multifaceted local geometry and the depletion of available facets. In the low ¯s regime, there are fewer large facets to avoid for smaller ones and, thus, increasing the facet sizes has a similar effect as densifying the degrees, which creates more loops [cf. Fig. 4(c), 1 to 2 ]. That said, the loops are destroyed as more and more facets merge together to form larger ones [cf. Fig. 4(c), 2 to 3 ]. This behavior suggests the existence of an optimal facet size distribution for loopy configurations, as the number of facets being a limiting factor.
Discussion.--In computational complexity, many graph problems are NP-hard in general, but may be in P for certain classes of graphs [47]. Simplicial complex realization is yet another addition to the list. We present a depth-bounded

5

branching algorithm whose complexity presents a rich structure. In particular, simpliciality can be solved in time f (m)Ec for some constant c  1, where Ec is the time spent in validations and the prefactor counts the number of nodes in the execution tree. For easy instances, f (m) = m, and the algorithm is linear in instance size. Otherwise, we have f (m) = bm+1 in general, where b is the branching ratio that grows with instance size. This expression of average algorithmic hardness does not capture the behavior of most hard instances, in which we find that b is highly heterogeneous as a function of the branching stage--the searcher stalls at mid-stages, not at the beginning or the end. It remains open to accurately parametrize the complexity of hard instances of the simpliciality problem, and to prove rigorously, if the algorithm runs in linear-time on average. Finally, we note that the branching design has opened up an avenue to systematically improve the algorithm, for example, through stronger validation rules to reduce the branching ratio, or introducing variants by non-chronological backjumping or clause learning techniques, as critically used in modern Boolean satisfiability (SAT) solvers [48].
Aside from these computational complexity questions, the boundary between easy and hard instances deserves further attention. We find that the instances tend to be harder when (d, s) contain numerous uniform entries, whereas a Poisson-Poisson combination yields very little backtracking. The understanding of when and why their hardness differ is poor compared to what is known for constraint satisfaction problems [49] or the inference of stochastic block models [50]. This raises a number of open questions, for example, is there an algorithmic phase transition that separates easy and hard regions? Here, hard instances could mean either tc > 0 or really hard in some other sense, e.g., takes exponential time, as seen in SAT. Or, would there even be two different phase transitions? It is also known that graph isomorphism can be solved in linear time for random graphs [51, 52], by leveraging the fact that in random graphs the degree distribution is essentially never uniform, so that high degree nodes help break symmetries. For simpliciality, it could be useful to investigate the dependency of algorithmic hardness on the degree sequence among equidimensional degree-size sequences. We believe that the solutions to these problems will require new insights in the statistical physics of computation [53, 54], notably, to identify the "order parameter" that drives the formation of algorithmic barrier to hard instances [55].
In closing, we have developed a constructive algorithm to allow faster realization of simplicial complexes with arbitrary degree-size sequences. Our algorithm paves the way for a more comprehensive analysis of higher-order phenomena in terms of local structural attributes, leading to understanding of their roles in various dynamical systems.
I am particularly grateful to Joshua A. Grochow for significant discussions. I am grateful to Alice Patania and

Jean-Gabriel Young for helpful correspondence, as well as to Daniel B. Larremore for support. I acknowledge the BioFrontiers Computing Core at the University of Colorado Boulder for computing facilities. This work was funded in part by Grochow startup funds.
 tzuchi.yen@colorado.edu [1] L. Torres, A. S. Blevins, D. S. Bassett, and T. Eliassi-Rad, The
why, how, and when of representations for complex systems, arXiv:2006.02870 (2020). [2] F. Battiston, G. Cencetti, I. Iacopini, V. Latora, M. Lucas, A. Patania, J.-G. Young, and G. Petri, Networks beyond pairwise interactions: Structure and dynamics, Phys. Rep. 874, 1 (2020). [3] C. Bick, E. Gross, H. A. Harrington, and M. T. Schaub, What are higher-order networks?, arXiv:2104.11329 (2021). [4] H. Edelsbrunner and J. L. Harer, Computational Topology: An Introduction (American Mathematical Society, Providence, RI, 2010). [5] R. Ghrist, Elementary Applied Topology, 1st ed. (CreateSpace, Scotts Valley, CA, 2014). [6] N. Otter, M. A. Porter, U. Tillmann, P. Grindrod, and H. A. Harrington, A roadmap for the computation of persistent homology, EPJ Data Sci. 6, 1 (2017). [7] G. St-Onge, V. Thibeault, A. Allard, L. J. Dubé, and L. Hébert-Dufresne, Social Confinement and Mesoscopic Localization of Epidemics on Networks, Phys. Rev. Lett. 126, 098301 (2021). [8] G. Bianconi, I. Kryven, and R. M. Ziff, Percolation on branching simplicial and cell complexes and its relation to interdependent percolation, Phys. Rev. E 100, 062311 (2019). [9] O. Bobrowski and P. Skraba, Homological percolation and the Euler characteristic, Phys. Rev. E 101, 032304 (2020). [10] C. Kuehn and C. Bick, A universal route to explosive phenomena, arXiv:2002.10714 (2021). [11] I. Iacopini, G. Petri, A. Barrat, and V. Latora, Simplicial models of social contagion, Nat. Comm. 10, 2485 (2019). [12] J. T. Matamalas, S. Gómez, and A. Arenas, Abrupt phase transition of epidemic spreading in simplicial complexes, Phys. Rev. Research 2, 012049(R) (2020). [13] N. W. Landry and J. G. Restrepo, The effect of heterogeneity on hypergraph contagion models, Chaos 30, 103117 (2020). [14] G. Petri and A. Barrat, Simplicial Activity Driven Model, Phys. Rev. Lett. 121, 228301 (2018). [15] F. A. N. Santos, E. P. Raposo, M. D. Coutinho-Filho, M. Copelli, C. J. Stam, and L. Douw, Topological phase transitions in functional brain networks, Phys. Rev. E 100, 032414 (2019). [16] M. Feng and M. A. Porter, Persistent homology of geospatial data: A case study with voting, SIAM Rev. 63, 67 (2021). [17] A. Patania, G. Petri, and F. Vaccarino, The shape of collaborations, EPJ Data Sci. 6, 1 (2017). [18] J. Mirth, Y. Zhai, J. Bush, E. G. Alvarado, H. Jordan, M. Heim, B. Krishnamoorthy, M. Pflaum, A. Clark, Y. Z, and H. Adams, Representations of energy landscapes by sublevelset persistent homology: An example with n-alkanes, J. Chem. Phys. 154, 114114 (2021). [19] J.-G. Young, G. Petri, F. Vaccarino, and A. Patania, Construction of and efficient sampling from the simplicial configuration model, Phys. Rev. E 96, 032312 (2017). [20] B. Bollobás, A probabilistic proof of an asymptotic formula for the number of labelled regular graphs, Eur. J. Comb. 1, 311

6

(1980). [21] B. K. Fosdick, D. B. Larremore, J. Nishimura, and J. Ugander,
Configuring random graph models with fixed degree sequences, SIAM Rev. 60, 315 (2018). [22] O. T. Courtney and G. Bianconi, Generalized network structures: The configuration model and the canonical ensemble of simplicial complexes, Phys. Rev. E 93, 062311 (2016). [23] M. Dyer, C. Greenhill, P. Kleer, J. Ross, and L. Stougie, Sampling hypergraphs with given degrees, arXiv:2006.12021 (2020). [24] P. S. Chodrow, Configuration models of random hypergraphs, J. Compl. Netw. 8, cnaa018 (2020). [25] N. A. Arafat, D. Basu, L. Decreusefond, and S. Bressan, Construction and random generation of hypergraphs with prescribed degree and dimension sequences, arXiv:2004.05429 (2020). [26] Paul Erds and Tibor Gallai, Graphs with prescribed degrees of vertices, Mat. Lopak 11, 264 (1960). [27] V. Havel, A remark on the existence of finite graphs, Casopis Pst. Mat. 80, 477 (1955). [28] S. L. Hakimi, On realizability of a set of integers as degrees of the vertices of a linear graph. I, J. Soc. Ind. Appl. Math. 10, 496 (1962). [29] C. I. Del Genio, T. Gross, and K. E. Bassler, All Scale-Free Networks Are Sparse, Phys. Rev. Lett. 107, 178701 (2011). [30] J. Park and M. E. J. Newman, Origin of degree correlations in the Internet and other networks, Phys. Rev. E 68, 026112 (2003). [31] S. Johnson, J. J. Torres, J. Marro, and M. A. Muñoz, Entropic origin of disassortativity in complex networks, Phys. Rev. Lett. 104, 108702 (2010). [32] A. Deza, A. Levin, S. M. Meesum, and S. Onn, Optimization over degree sequences, SIAM J. Disc. Math. 32, 2067 (2018). [33] M. R. Garey and D. S. Johnson, Computers and Intractability; A Guide to the Theory of NP-Completeness (W. H. Freeman & Co., New York, NY, 1979). [34] A. Nijenhuis and H. S. Wilf, Combinatorial Algorithms for Computers and Calculators, 2nd ed., Computer Science and Applied Mathematics (Academic Press, New York, 1978). [35] The Sage Developers, SageMath, the Sage Mathematics Software System, 2021, Version 9.2, https://www. sagemath.org. [36] This rule is similar to, but stronger than, the Gale­Ryser characterization of bigraphic pairs of sequences [56, 57], which would allow smax = |d| for non-terminal facets, thus violating the no-inclusion constraint. [37] T.-C. Yen, The simplicial-test Python library, Version 1.2, https://pypi.org/project/simplicial-test. [38] A. Hatcher, Algebraic Topology (Cambridge University Press, 2002). [39] M. Saadatfar, H. Takeuchi, V. Robins, N. Francois, and Y. Hiraoka, Pore configuration landscape of granular crystallization, Nat. Comm. 8, 15082 (2017).

[40] A. E. Sizemore, J. E. Phillips-Cremins, R. Ghrist, and D. S. Bassett, The importance of the whole: Topological data analysis for the network neuroscientist, Netw. Neurosci. 3, 656 (2018).
[41] R. J. Gallagher, J.-G. Young, and B. F. Welles, A clarified typology of core-periphery structure in networks, Sci. Adv. 7, eabc9800 (2021).
[42] K.-I. Goh, M. E. Cusick, D. Valle, B. Childs, M. Vidal, and A.-L. Barabási, The human disease network, Proc. Natl. Acad. Sci. U.S.A. 104, 8685 (2007).
[43] S. Horvat and C. D. Modes, Connectedness matters: Construction and exact random sampling of connected networks, J. Phys. Complex. 2, 015008 (2020).
[44] M. Chujyo and Y. Hayashi, A loop enhancement strategy for network robustness, Appl. Netw. Sci. 6, 1 (2021).
[45] N. Linial and Y. Peled, On the phase transition in random simplicial complexes, Ann. Math. 184, 745 (2016).
[46] S. Kanazawa, Law of large numbers for Betti numbers of homogeneous and spatially independent random simplicial complexes, Random Struct. Algor. 58, 10.1002/rsa.21015 (2021).
[47] V. E. Alekseev, On easy and hard hereditary classes of graphs with respect to the independent set problem, Discret. Appl. Math. 132, 17 (2003).
[48] J. Marques-Silva, I. Lynce, and S. Malik, Conflict-driven clause learning SAT solvers, in Handbook of Satisfiability (IOS Press, Amsterdam, 2009) pp. 131­153.
[49] F. Krzakala and L. Zdeborová, Hiding quiet solutions in random constraint satisfaction problems, Phys. Rev. Lett. 102, 238701 (2009).
[50] A. Decelle, F. Krzakala, C. Moore, and L. Zdeborová, Asymptotic analysis of the stochastic block model for modular networks and its algorithmic applications, Phys. Rev. E 84, 066106 (2011).
[51] L. Babai, P. Erds, and S. M. Selkow, Random graph isomorphism, SIAM J. Comput. 9, 628 (1980).
[52] L. Babai and L. Kucera, Canonical labelling of graphs in linear average time, in 20th Annual Symposium on Foundations of Computer Science (Sfcs 1979) (1979) pp. 39­46.
[53] L. Zdeborová and F. Krzakala, Statistical physics of inference: Thresholds and algorithms, Adv. Phys. 65, 453 (2016).
[54] C. Moore and S. Mertens, The Nature of Computation, 1st ed. (Oxford University Press, Oxford, England, 2011).
[55] P. Cheeseman, B. Kanefsky, and W. M. Taylor, Where the really hard problems are, in Proceedings of the 12th International Joint Conference on Artificial Intelligence - Volume 1, IJCAI'91 (Morgan Kaufmann Publishers Inc., San Francisco, CA, 1991) pp. 331­337.
[56] D. Gale, A theorem on flows in networks, Pacific J. Math. 2, 1073 (1957).
[57] H. J. Ryser, Combinatorial properties of matrices of zeros and ones, Canad. J. Math. 9, 371 (1957).

