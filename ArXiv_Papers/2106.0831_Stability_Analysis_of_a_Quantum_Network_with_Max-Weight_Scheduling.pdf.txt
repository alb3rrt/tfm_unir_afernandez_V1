arXiv:2106.00831v1 [quant-ph] 1 Jun 2021

Stability Analysis of a Quantum Network with Max-Weight Scheduling
THIRUPATHAIAH VASANTAM, College of Information and Computer Science, University of Mas-
sachusetts, USA
DON TOWSLEY, College of Information and Computer Science, University of Massachusetts, USA
We study a quantum network that distributes entangled quantum states to multiple sets of users that are connected to the network. Each user is connected to a switch of the network via a link. All the links of the network generate bipartite Bell-state entangled states in each time-slot with certain probabilities, and each end node stores one qubit of the entanglement generated by the link. To create shared entanglements for a set of users, measurement operations are performed on qubits of link-level entanglements on a set of related links, and these operations are probabilistic in nature and are successful with certain probabilities. Requests arrive to the system seeking shared entanglements for different sets of users. Each request is for the creation of shared entanglements for a fixed set of users using link-level entanglements on a fixed set of links. Requests are processed according to First-Come-First-Served service discipline and unserved requests are stored in buffers. Once a request is selected for service, measurement operations are performed on qubits of link-level entanglements on related links to create a shared entanglement. For given set of request arrival rates and link-level entanglement generation rates, we obtain necessary conditions for the stability of queues of requests. In each time-slot, the scheduler has to schedule entanglement swapping operations for different sets of users to stabilize the network. Next, we propose a Max-Weight scheduling policy and show that this policy stabilizes the network for all feasible arrival rates. We also provide numerical results to support our analysis. The analysis of a single quantum switch that creates multipartite entanglements for different sets of users is a special case of our work.
Additional Key Words and Phrases: qubit, entanglements, switch, multipartite, decoherence, Max-Weight
ACM Reference Format: Thirupathaiah Vasantam and Don Towsley. 2021. Stability Analysis of a Quantum Network with Max-Weight Scheduling. 1, 1 (June 2021), 21 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn
1 INTRODUCTION
Quantum entanglement is a key component of quantum information systems. It enables applications in quantum key distribution (QKD)[2, 7], quantum sensing[8] (e.g., multipartite entanglement for quantum metrology, [9], [28]), and distributed quantum computing[4]. These applications motivate the need for a distributed infrastructure (quantum network) that will supply high quality (fidelity) bipartite and multipartite entanglement to end groups of users [3, 6, 19, 20, 25]. To this end, several network architectures have been proposed to provide high entanglement rates at high fidelity [1, 10­ 12, 14].
In this paper we study a quantum network serving entanglement to groups of users. Here a quantum network consists of a collection of quantum switches connected to each other through
Authors' addresses: Thirupathaiah Vasantam, College of Information and Computer Science, University of Massachusetts, Amherst, USA, tvasantam@umass.edu; Don Towsley, College of Information and Computer Science, University of Massachusetts, Amherst, USA, towsley@cs.umass.edu.
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. © 2021 Association for Computing Machinery. XXXX-XXXX/2021/6-ART $15.00 https://doi.org/10.1145/nnnnnnn.nnnnnnn
, Vol. 1, No. 1, Article . Publication date: June 2021.

2

Thirupathaiah Vasantam and Don Towsley

optical links. Users requesting service are connected to the network as end nodes. They have fixed paths between them (in the case of groups consisting of two users), or a fixed spanning three (in the case of groups of three or more users. Every link in the network generates maximally entangled Bellpairs between two nodes of the link and each of the two nodes stores one qubit of an entanglement of the link in memories. When enough link-level entanglement is accrued (Bell pairs at the links on a path or tree connecting a group of users), the switches perform multi-qubit measurements to provide end-to-end entanglement to the user group. If the switch only has to connect two links, it uses Bell-state measurements (BSMs) and when it must connect three or more links, it uses Greenberger-Horne-Zeilinger (GHZ) basis measurements [18].
We assume that the groups generate entanglement requests at different rates. Within each group, requests are processed according to First-Come-First-Serve service discipline and waiting requests are stored in corresponding infinite size buffers
We consider a heterogeneous network, in that different types of requests arrive at different rates, links create link-level entanglements with different probabilities, and the measurement success probabilities at switches can differ across switches. Time is divided into time-slots and each link creates at most one entanglement per time-slot, which decoheres or is assumed to be lost after one timeslot[13]. Although the expectation is that eventually quantum networks will include switches with many long coherence time quantum memories, this will not be the case in the near term. For example, first generation quantum networks are likely to use controllable optical delay line buffers [5] to store single qubitsat a time. Furthermore, such models with small coherence times are useful to study quantum networks that are used for QKD applications [18, 25].
In quantum networks of interest, in each time-slot we should associate links with entanglements to requests that can be processed, under the condition that each link can be used by only one request as each link can have at most one entanglement. Then, what is the capacity region, i.e., the set of arrival rates for which there exists a stationary distribution for occupancy of queues and the average waiting times of requests are finite at equilibrium under a scheduling policy? Can we design a scheduling policy that stabilizes the network for all the arrival rates that belong to the capacity region? We address these research questions in this paper. First, we will derive necessary conditions on the set of arrival rates to achieve stability of the network. We then propose a Max-Weight scheduling policy based on link-level entanglement generation success probabilities, measurement success probabilities, and the topology of the network. This policy does not depend on the request arrival rates, but does depend on request queue sizes and other network parameters. Finally, we show that our policy stabilizes the quantum network for all the arrival rates that belong to the capacity region.
Related work: Recent successful experiments on quantum information exchange [21, 29] encourage us to develop efficient resource allocation algorithms and their performance analysis that can guide us to implement quantum networks at full-scale in future.
In [22], a quantum network with two users connected by a series of repeaters was studied. Their focus was to compute the expected waiting time required to create an end-to-end entanglement across a path with links, where each link creates link-level entanglement with certain probability and measurement operations are successful probabilistically. They used Markov chain theory to develop a method to compute average waiting times. However, they were able to derive exact expressions for paths with at most four segments.
The analysis of a single quantum switch that is connected to several links was investigated in [17, 26, 27]. In [26], the authors studied the model under the assumption that the switch's objective is to create bipartite and tripartite entanglements and it has memories with capabilities to store one qubit and two qubits per each link. They derived expressions for the capacity or the rate at which end-to-entanglements are created. They proposed policies that perform better than the policy that uses the time-division-multiplexing to create bipartite and tripartite entanglements. The analysis of

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

3

a switch that generates end-to-end -partite entanglements was studied in [17], where  2. Using Lyapunov stability theory of Markov chains, they showed that the switch is stable if and only if the number links attached to the switch is greater than or equal to . Furthermore, they derived closedform expressions for the capacity, the rate at which the switch creates end-o-end entanglements. In [27], the authors studied the capacity region of a switch creating bipartite entanglements under the assumption that it has memories of finite and infinite buffer sizes to store qubits of links. In these works, end-to-end entanglements were created for every set of users of size and they did not consider in modeling of the switch the requests arriving for end-to-end entanglements from different applications. In our model, we create end-to-end entanglements for the set of users that requests ask for. Our objective is to create end-to-end entanglements for requests arriving in the system efficiently using network resources.
In [24], a Max-Weight scheduling policy was first introduced for resource allocation in communication networks and it was shown that the proposed policy stabilizes the network for all feasible arrival rates. Later, this policy was adopted for the analysis of a single classical switch in [15], where they showed that switch is stable for all feasible arrival rates under this policy. The models studied in [15, 24] have static network topologies. A salient feature of quantum networks is that they are dynamic in nature, due to the fact that several operations in quantum networks are stochastic in nature. Hence, a Max-Weight scheduling policy for quantum networks must be defined by considering dynamic properties of quantum networks. In a different context, a Max-Weight scheduling policy was studied in [23] for classical networks with varying topologies. We adopt this formulation for analyzing our quantum networks.
Our Contributions: We make the following contributions:
· We derive necessary conditions on the request arrival rates for achieving the stability of the network under a scheduling policy.
· We propose a Max-Weight scheduling policy as a function of probability of successful creation of link-level entanglements and measurement operations, and dynamic queue sizes of requests. We prove that this policy stabilizes the network for all feasible arrival rates using Lyapunov stability theory of Markov chains.
· Finally, we provide numerical results that corroborate our analysis.
The rest of the paper is organized as follows. In Section 2, we introduce the model and demonstrate challenges in analyzing our quantum networks. We then give notation and some preliminary results in Section 3, where we also define our Max-Weight scheduling policy. In Section 4, we give necessary conditions on the request arrival rates for the stability of the network and provide main results along with some proofs. We provide numerical results on the stability of quantum networks under the Max-Weight scheduling policy in Section 5. Finally, we give concluding remarks in Section 6. We give proofs of some supporting results in Appendix.
2 SYSTEM MODEL
We study a quantum network that creates shared entangled quantum states for several sets of users. We model a quantum network as a graph = ( , ). Here =  where is the set of network nodes and is a set of user nodes. Here is the set of links connecting users and network nodes to network nodes,  × . Time is assumed to be divided into fixed length time-slots. During each time-slot, we assume each link attempts to generate a Bell-pair entanglement between the two nodes of the link and each succeeds with probability ,  . Each node of a link can store up to one qubit of the Bell-pair entanglement generated by the link. This qubit must be used to perform a measurement by the end of the time-slot or it is lost due to decoherence. Network nodes can perform measurements on groups of two or more successfully created neighboring link entanglements.

, Vol. 1, No. 1, Article . Publication date: June 2021.

4

Thirupathaiah Vasantam and Don Towsley

Fig. 1. Switch creating bipartite entanglements

We assume that the network provides shared entangled states for types of requests. Further, a

type request seeks creation of shared entanglements for a set of users denoted by  using

network nodes and links in a subgraph of , T = ( , ), that connects the users in . When

= { , }, T is a path within connecting and ; when | | > 2, T is a tree within connecting

users in . For a type request, we assume that all involved entanglement swapping operations

succeed with probability =  \ at network node  .

where denotes the measurement success probability

During each time-slot, type requests arrive to the system according to a stationary process

{ ( )}, where, ( ) denotes the number of type requests arrived in time-slot and the aver-

age number of requests arrived per time-slot is denoted by . For each application, the system has

a buffer with infinite memory to store unserved requests, and requests are served according to the

First-Come-First-Served (FCFS) service discipline.

A single quantum switch is an example for a simple quantum network. In Figure 1, we show a

quantum switch that connects to three users, where user is connected to the switch via link . There

are three types of requests arriving in the system, each type of request seeks a creation of shared

entanglement for a pair of users. For type requests, denotes the average number of requests

arriving in each time-slot. A type request seeks an end-to-end entanglement for user pair using

link level entanglements on links . From Figure 1, the set of user pairs and link pairs for different

sets of requests are: 1 = {1, 2}, 2 = {2, 3}, 3 = {1, 3}, 1 = { 1, 2}, 2 = { 2, 3}, and 3 = { 1, 3}.

In Figure 2, we show a quantum network connected to five users. This network has three switches

{ 1, · · · , 3} and seven links { 1, · · · , 7}, where user is connected to the network via link . Suppose that there are two types of requests with 1 = {1, 2, 3}, 2 = {4, 5}, 1 = { 1, 2, 3, 6}, and 2 =

{ 4, 5, 7}. Now the objective is to serve requests using qubits of associated links for each type of

requests.

Next we use the following simple model to illustrate the key questions that we plan to address.

Consider a single switch as in Figure 1 connected to three users via three links. The objective is

to create end-to-end entanglements for user pairs. Suppose that all the three links have qubits in a

given time-slot. Then the key challenge is, how does the switch decide to serve requests for user

pairs in order to stabilize the network? Since each link has only one qubit, out of the three user

pairs, a request of only one user pair can be served in the given time-slot as each link can be paired-

up with only one other link. In general, how do you select link-pairs in each time-slot such that

each link is paired-up with only one other link? More importantly, the switch's goal is to schedule

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

5

Fig. 2. A quantum network with five users
entanglement swappings for link-pairs in each time-slot so that the queues of requests are stable, in that the average number of stored requests for end-to-end entanglements for each link-pair does not scale-up with time. We need to design a policy that governs the switch to make scheduling decisions in each time-slot such that the switch is stable. Similarly, is there any scheduling policy that stabilizes a given quantum network?
In each time-slot, suppose that the quantum nodes provide information regarding the availability of Bell-pair entanglements of attached links and queue sizes of requests to a centralized scheduler and further assume that the scheduler maintains queues for each of the types of requests. The goal of the scheduler is to select a set of requests that can be served in the given time-slot which then provides the details of the scheduling decision to the quantum nodes. We would like to answer the following question. For the system with links and users, for given p = [ 1, · · · , ] and q = [ 1, · · · , ], what is the capacity region of request rates? Here, the capacity region is the set of request rates = [ 1, · · · , ] for which there exists a scheduling policy that achieves the stability of the system.
In the next section, we define our Max-Weight scheduling policy and give some preliminary results.
3 NOTATION AND PRELIMINARY RESULTS Throughout the paper we use bold-faced letters for vectors. Next, we introduce some terminology of the paper below:
( ) : queue size of type requests at the beginning of time-slot ( ) : number of type requests that arrive in time-slot ( ) : ( ) = 1 if link entanglement is successful in time-slot ; otherwise ( ) = 0.
In each time-slot, since each link has at most one entanglement, it can be used to serve at most one request during that time-slot. We need to select a set of requests for service such that each link
, Vol. 1, No. 1, Article . Publication date: June 2021.

6

Thirupathaiah Vasantam and Don Towsley

can be a member of at most one group of links associated with those requests. This is achieved using a notion called matching, that is defined below.
DEFINITION 1. Matching: We call = [ 1, · · · , ] a matching if  {0, 1} and for each link (1   ), we have

 1.
=1, 
Furthermore, if = 0 (1   ) in , then the vector element = 0 with = 1, violates condition (1).

 obtained from

(1) by replacing the th

Let M be the set of all matchings defined as

M { : is a matching}.

(2)

.

If the scheduler selects a matching = [ , 1   ] to serve requests in a time-slot, then an

entanglement swapping operation is performed on qubits of links if = 1. In time-slot , based

on Q( ) = ( ( )) and T( ) = ( ( )), the scheduler selects a matching according to a scheduling

policy. Suppose that W( ) is the matching used in time-slot , then let (Q( ), T( ), W( )) denote

the probability that a type request is successfully served conditioned on the event that the matching

W( ) is used to schedule requests for service. Let { } be the indicator function of the event . Then we write

(Q( ), T( ), W( )) = { ( )>0} { ( )>0} { ( )>0,  },

(3)

where denotes the joint success probability of all the measurement operations performed on qubits

of links to create a shared entanglement. Next, we define the Max-Weight scheduling policy of

interest below.

DEFINITION 2. Max-Weight Scheduling: In time-slot , under the Max-Weight scheduling policy, the scheduler selects the matching W( ) computed as follows:

W( ) = arg max

(Q( ), T( ), ) ( ).

(4)

M =1

Next, we write the dynamics of the process {Q( )}. Let ( )  {0, 1}} denote whether all the measurement operations required to create a shared entanglement using qubits of links in timeslot succeed or not. Here ( ) = 1 represents that all measurement operations succeed; otherwise,
( ) = 0. We denote the measurement success probability as P( ( ) = 1) = . Now denote by ( )  {0, 1} the number of requests served for application in time-slot . We write

( ) = ( ) { ( )>0} { ( )>0} { ( )>0,  } .

(5)

The evolution of the process {Q( )} is described using the following relation

Q( + 1) = Q( ) - D( ) + A( ).

(6)

Note that the arrived requests A( ) are not used in evaluating the served requests D( ), but they are used in the computation of D( + 1). If D( ) = 0, then it means that no request is served in time-slot
. Let the number of served requests in each time-slot be denoted by = ( ), where  {0, 1} is the number of type served requests and belongs to the set D defined by

D {a = ( ) :  {0, 1},

 1,  }.

(7)

=1, 

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

7

Note that the zero vector 0 is also an element of the set D. Now we obtain a necessary condition on the arrival rates that must be satisfied for the system to
be stable. For type requests, since a link  generates an entanglement with probability and the joint success probability of the involved measurement operations is , it follows that

<

.

(8)



For a link  we can write

<

.

(9)

 ,

Here, we interpret

as the average number of arrived type requests per time-slot, con-

 ,

ditioned on the event that all the links except link  have entanglements and measurement

operations performed on qubits of links are successful. Since each link can belong to at most one

group of links that can serve a request, we must have

=1, 

 ,

<.

(10)

Therefore, a necessary condition is that for each link ,

< 1.

(11)

=1, 



Let  be defined as as



:

< 1,  1   .

(12)

=1, 



Now we investigate whether there exists a scheduling policy that achieves the stability of the system for each  . To this end, we present the following example.

EXAMPLE 1. Consider a quantum switch as in Figure 1 with three links ( = 3) that provides

service to three types of applications ( = 3) requesting end-to-end bipartite entanglements using

different sets of link-pairs. Assume that 1 = {1, 2}, 2 = {2, 3}, and 3 = {1, 3}. Suppose that 1 = 2 = 3 = and = 1 for 1   3. Furthermore, let = 1 for all , 1   3. For this

model, it is easy to check that only one request can be served in each time-slot under the assumption

that qubits decohere after one time-slot. Because of symmetry, each type of requests gets a service

rate

of

1 3

.

Then

if



1 3

,

the switch is

unstable. From

the condition

 , we obtain



1 2

.

It shows

that the switch

is unstable if

1 3





1 2

.

Hence,

there

exists

a

  for which there is no scheduling

policy for which the switch is stable.

From the above example, it is clear that the switch cannot serve more than one request in one time-slot. Since each link has at most one entanglement in each time-slot, a link can be pairedup with only one other link. The condition (11) is derived by considering the traffic arriving at a single link. However, the necessary condition should also be derived based on how many requests of different types can be served simultaneously in one time-slot using qubits of several links. The above example shows that the capacity region is smaller than  due to the fact that some sets of requests cannot be served simultaneously in one time-slot.

Remark 1. In classical networking, a switch forwards requests from input ports to output ports. Let denotes the average number of arrived requests at the input port for the output port per

, Vol. 1, No. 1, Article . Publication date: June 2021.

8

Thirupathaiah Vasantam and Don Towsley

time-slot. In each time-slot, at most one request can be forwarded from each input port to only one

output port, and also, each output port receives at most one request from only one input port. Define  as

 = {a = [ ] :

 1 and

 1,  , }.

(13)

Let M be the set of classical matchings defined as

M { = [ ] :

= 1 and

= 1,  , }.

(14)

In [15], it was shown that if the switch selects the matching ( ) computed according to the following Max-Weight scheduling policy,

W( ) = arg max

( ),

(15)

M

then the switch is stable if lies inside . Furthermore, if  , then no scheduling policy achieves the stability of the switch. We can view the quantum switch as the device with input ports and output ports, where each input port is associated with an application and each output port is associated with a link. In each time-slot, input port is either matched to output ports or not matched to any output port. Furthermore, each output port is matched to at most one input port. If the input port is matched to output ports, then it means that the switch attempts to serve a type request.

In the next section, we will derive a final necessary condition on for the stability of the system and show that the proposed Max-Weight scheduling policy achieves the stability of the system.

4 MAIN RESULTS
In this section, we present the main results of the paper. The process {(Q( ))}, where Q( ) = ( ( ), 1   ) is a Markov chain. Our goal is to find necessary conditions on system parameters to achieve stability of the system and also show that the Max-Weight scheduling policy achieves the stability of the system.
We begin by obtaining conditions on that are required to achieve the stability of the system. From (6), we can write

Q( + 1) = Q( ) - D( ) + A( ).

(16)

=1

=1

=1

=1

Hence, we obtain

Q( + 1) = Q(1) - D( ) + A( ).

(17)

=1

=1

Here, =1 ( ) denotes the cumulative number of type served requests up to time-slot . Simi-
larly, =1 ( ) denotes the cumulative number of arrived requests of type up to time-slot . We can also write

D( ) =

( ) and

( )= ,

(18)

=1

D

D

where ( ) defined as

( )=

{D( )= },

(19)

=1

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

9

denotes the cumulative number of times the vector is served up to time-slot . In the following theorem, we show a relationship between and if the system is stable under a scheduling policy.
Let PD be the set of probability distributions on the set D defined as

PD {a = { ,  D} :  R+,

= 1},

(20)

D

where, R+ denotes the set of non-negative real numbers.

Theorem 1. For the arrival rate matrix and under the assumption E[Q(1)] < , if the system is stable under a scheduling policy then there exists c = (  ,  D)  PD such that

=

,

(21)

D
where  denotes the probability with which is served in a time-slot at equilibrium.

PROOF. The proof is given in Appendix A.

The probability distribution c is defined in terms of the stationary distribution of Q( ) and the distribution of T( ).
A vector is served in a time-slot for some set of values of Q( ), T( ), and W( ). Let the random variables with =  correspond to the variables with stationary distributions. Then from the definition of D( ), (21) is equivalent to the following equation

=

P(T() = a)P(Q()  0)

a  {0,1 }

×

P(Q() = |Q()  0) P W() = |Q() = b, T() = a u(b, a, ), (22)

bZ+ ,b0

M

where Z+ denotes the set of non-negative integers. From (22), if the system is stable, then we obtain the following result.

Corollary 1. If there exists a scheduling policy that stabilizes the system, then

where (b, a, matching is for all a.

=

P(T() = a)

(b, a, )u(b, a, ),

(23)

a  {0,1 }

bZ+ ,b0 M

) denotes the stationary probability that the vector of queue sizes is b and the selected conditioned on the event that T( ) is equal to a, and bZ+ ,b0 M (b, a, ) < 1

PROOF. Since the system is stable, there exists a non-zero probability that the stationary queue sizes of requests satisfies () = 0. As a result, bZ+ ,b0 M (b, a, ) < 1.
Next, we use Corollary 1 to conditions on for achieving stability of the network. Define  to be



  :  v = { (b, a, )  R+} such that

=

P(T() = a)

(b, a, )u(b, a, )

a  {0,1 }

bZ+ ,b0 M

and

(b, a, ) < 1 . (24)

bZ+ ,b0 M

, Vol. 1, No. 1, Article . Publication date: June 2021.

10

Thirupathaiah Vasantam and Don Towsley

Theorem 2. If   , then no scheduling policy stabilizes the system.
PROOF. Suppose there exists a scheduling policy that stabilizes the system. From Corollary 1, using the stationary distribution of the system, we obtain (23). This is a contradiction. Hence, no policy can stabilize the system if   .
It is of interest to check whether  =  or not. In the next example, we present a   that does not belong to  . Hence,   .
EXAMPLE 2. Consider a single switch that creates end-to-end entanglements for user-pairs with = 4, = 6, = 1 for 1   , and = 1 for 1   . The set of user-pairs are: 1 = {1, 2}, 2 = {1, 3}, 3 = {1, 4}, 4 = {2, 3}, 5 = {2, 4}, and 6 = {3, 4}. The arrival rate vector is = [0.3 0.3 0.3 0.2 0.45 0.2]. It can be verified that  . A partitioning of is given by
= 0.2 1 0 0 0 0 1 + 0.2 0 0 1 1 0 0 + 0.3 0 1 0 0 1 0
+ 0.1 1 0 0 0 0 0 + 0.1 0 0 1 0 0 0 + 0.15 0 0 0 0 1 0 . (25)
In the above partition, each vector on the right side of (25) corresponds to a matching in M. The sum of the coefficients in the partition of given in (25) is equal to 0.2+0.2+0.3+0.1+0.1+0.15 = 1.05. Furthermore, it is not possible to partition such that the sum of coefficients in the partition is less than one. As a result, we conclude that   . Hence, if the requests arrive in the system such that the average number of arrived requests per time-slot is , then the switch is unstable under any scheduling policy.
Next, we establish a preliminary result before presenting the main result on the stability of the network under the Max-Weight scheduling policy. Let c · d be the inner product of two vectors c and d.
Lemma 1. If   , then

· Q( ) -

P(T( ) = a) max

(Q( ), a, )) ( ) < - Q( ) ,

(26)

a  {0,1 }

M =1

where Q( ) = =1 2( ).

PROOF. Since   , there exists v = { (b, a, )  R+} such that

=

P(T( ) = a)

(b, a, )u(b, a, ).

(27)

a  {0,1 }

bZ+ ,b0 M

Hence, we can write

· Q( ) -

P(T( ) = a) max

(Q( ), a, )) ( )

a  {0,1 }

M =1

=

P(T( ) = a)

(b, a, ) (b, a, ) ( )

a  {0,1 }

bZ+ ,b0 M

=1

-

P(T( ) = a) max

(Q( ), a, )) ( ) . (28)

a  {0,1 }

M =1

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

11

We use the following bound to simplify the above equation

(b, a, ) ( ) = { >0} { >0} { >0,  } ( )

 { >0} { >0,  } ( )

= { >0} { ( )>0} { >0,  } ( )

= (Q( ), a, ) ( )

(29)

By substituting (29) in (28), we obtain

· Q( ) -

P(T( ) = a) max

(Q( ), a, )) ( )

a  {0,1 }

M =1

=

P(T( ) = a)

(b, a, ) (Q( ), a, ) ( )

a  {0,1 }

bZ+ ,b0 M

=1

-

P(T( ) = a) max

(Q( ), a, )) ( ) . (30)

a  {0,1 }

M =1

We can write the above equation as

· Q( ) -

P(T( ) = a) max

(Q( ), a, )) ( )

a  {0,1 }

M =1

=

P(T() = a)

(b, a, )

a  {0,1 }

bZ+ ,b0 M

×

(Q( ), a, ) ( ) - max (Q( ), a, ) ( )

=1

M =1

-

P(T( ) = a) 1 -

(b, a, ) max

(Q( ), a, )) ( ) . (31)

a  {0,1 }

bZ+ ,b0 M

M =1

Since the first term on the right side of the above equation is negative, we obtain

· Q( ) -

P(T( ) = a) max

(Q( ), a, )) ( )

a  {0,1 }

M =1

-

P(T( ) = a) 1 -

(b, a, ) max

(Q( ), a, )) ( )

a  {0,1 }

bZ+ ,b0 M

M =1

-

P(T( ) = a) max

(Q( ), a, )) ( ) ,

(32)

a  {0,1 }

M =1

where = mina 1 - bZ+ ,b0 M (b, a, ) > 0. Suppose that  = arg max ( ). Then we can write (32) as

· Q( ) -

P(T( ) = a) max

(Q( ), a, ) ( )

a  {0,1 }

M =1

, Vol. 1, No. 1, Article . Publication date: June 2021.

12

Thirupathaiah Vasantam and Don Towsley

-

P(T( ) = a) max (  (Q( ), a, )  ( ))

M

a  {0,1 }

 - max P(T( ) = a) max (  (Q( ), a, )  ( ))

a  {0,1 }

M

 - max max P(T( ) = a) (  (Q( ), a, ))  ( )
a{0,1} M

=-

max max P(T( ) = a)
a{0,1} M

 {  >0} { >0,   }

 ( ) {  ( )>0}

 - min max max P(T( ) = a)
a{0,1} M

{ >0} { >0,  }

 ( ) {  ( )>0}

-



Q( 

)

,

(33)

where  = min maxa{0,1} max M P(T( ) = a) { >0} { >0,  } and we assume  ( ) > 0 in the last equation. Finally, we conclude the result by choosing =   .

We establish the stability of (Q( ),  0) using a Lyapunov stability theorem [16]. We use the real valued Lyapunov function ((Q( ))) = =1 2( ) to show

E( (Q( + 1)) - (Q( ))|Q( )) < -  Q( ) ,

(34)

for sufficiently large Q( ) , where  > 0.

Theorem 3. If   and E[ =1 2 ( )] < , the Max-Weight scheduling policy stabilizes the quantum network.

PROOF. We can write

(Q( )) = Q( ) · Q( ).

(35)

Furthermore, we can write

(Q( + 1)) - (Q( )) = Q( + 1) · Q( + 1) - Q( ) · Q( )
= (Q( + 1) - Q( )) · (Q( + 1) - Q( )) + 2(Q( + 1) - Q( )) · Q( ) (36)

Hence, we obtain

E [ (Q( + 1)) - (Q( ))|Q( ), T( )] = E [(Q( + 1) - Q( )) · (Q( + 1) - Q( ))|Q( ), T( )] + 2E [(Q( + 1) - Q( )) · Q( )|Q( ), T( )] (37)
The first term in the right side of the above equation can be bounded by

E [(Q( + 1) - Q( )) · (Q( + 1) - Q( ))|Q( ), T( )]  E ( ( ) + 1)2
=1

=E

2( ) + + 2

. (38)

=1

=1

Next we simplify the second term in the right side of (37). We can write

E [(Q( + 1) - Q( )) · Q( )|Q( ), T( )]

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

13

= E [(A( ) · Q( )|Q( ), T( )] - E [(D( ) · Q( )|Q( ), T( )]

= · Q( ) - max u(Q( ), T( ), ) · Q( ).

(39)

M

We now obtain the following equation by substituting equations (38) and (39) in (37)

E [ (Q( + 1)) - (Q( ))|Q( ), T( )]  E

2( ) + + 2

=1

=1

+ 2( · Q( ) - max u(Q( ), T( ), ) · Q( )). (40)
M

Next we take expectation over T( ) in the above equation to obtain

E [ (Q( + 1)) - (Q( ))|Q( )]  E

2( ) + + 2

=1

=1

+ 2( · Q( ) -

P(T( ) = a) max u(Q( ), a, ) · Q( )). (41)

M

a  {0,1 }

Using Lemma 1, we get

E [ (Q( + 1)) - (Q( ))|Q( )]  E

2( ) + + 2

- 2 Q( ) . (42)

=1

=1

Finally, if Q( )  2(E[ =1 2 ( )]+ +2 =1 ) , we get

E [ (Q( + 1)) - (Q( ))|Q( )]  - Q( ) .

(43)

2

This completes the proof.

5 NUMERICAL RESULTS
In this section, we provide numerical results on the analysis of quantum networks. We study the impact of the Max-Weight scheduling policy on queue sizes of requests. For numerical results, we assume that one type request arrives with probability and no type request arrives with probability 1 - in each time-slot.
First, we consider a single switch with four links ( = 4) that aims to create bipartite entanglements for user-pairs. There are six types of requests arriving in the system serving user-pairs
1 = {1, 2}, 2 = {1, 3}, 3 = {1, 4}, 4 = {2, 3}, 5 = {2, 4}, and 6 = {3, 4}. The arrival rates of requests of different types are: 1 = 0.3, 2 = 0.3, 3 = 0.3, 4 = 0.3, 5 = 0.45, and 6 = 0.2. It can be verified that   and the corresponding partition of is given by

= 0.2 1 0 0 0 0 1 + 0.2 0 0 1 1 0 0 + 0.3 0 1 0 0 1 0

+ 0.1 1 0 0 0 0 0 + 0.1 0 0 1 0 0 0 + 0.15 0 0 0 0 1 0 . (44)

Hence, the switch should be unstable under any scheduling policy.

In Figures 3 and 4, we simulate the switch under the assumption that it uses our Max-Weight

scheduling policy. In Figure 3, we plot the time evolution of average queue sizes of requests denoted

by ( ) as a function of , where

( )=

=1

() .

(45)

It is clear that the average queue sizes of requests increase monotonically with , imply that the

, Vol. 1, No. 1, Article . Publication date: June 2021.

14

Thirupathaiah Vasantam and Don Towsley

9000

Average queue sizes

8000 7000 6000 5000 4000

3000 2000 1000

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 3. Time evolution of average queue sizes of requests in an unstable switch

switch is unstable.
Next, we simulate a stable switch with the assumption that the set of arrival rates are: 1 = 0.3, 2 = 0.3, 3 = 0.2, 4 = 0.3, 5 = 0.45, and 6 = 0.2. It can be verified that   and the corresponding partition of is given by

= 0.2 1 0 0 0 0 1 + 0.2 0 0 1 1 0 0 + 0.3 0 1 0 0 1 0
+ 0.1 1 0 0 0 0 0 + 0.15 0 0 0 0 1 0 . (46)
Hence, the switch should be stable under our Max-Weight scheduling policy. In Figure 4, we plot the average queue sizes of requests ( ) as a function of . We observe that the average queue sizes of requests are finite even at large values of . Hence, the switch is stable.
Now we simulate the quantum network shown in Figure 2. Suppose that there are two types of requests with 1 = {1, 2, 3}, 2 = {3, 4, 5}, 1 = { 1, 2, 3, 6}, and 2 = { 3, 4, 5, 7}. Note that the link 3 is used by both types of requests, hence, only one type of request can be served in each time-slot. We will compare the performance of the Max-Weight scheduling policy with that of the policy referred to as Policy 2 that chooses the type of the request in each time-slot as the type with maximum queue sizes and ties are broken uniformly at random.
For Figures 5 and 6, we choose the arrival request rates as = [0.095 0.165], the link-level entanglement generation probabilities are p = [0.7 0.8 0.6 0.9 0.9 0.9 0.8], and the measurement success probabilities are q = [0.75 0.8]. We plot the time evolution of average queue sizes of requests ( ) as a function of . We also plot E[ ()] as a function of , where

E[ ()] = lim 1

( ).

(47)



=1

In our numerical results, we choose = 106. The Figure 5 corresponds to the Max-Weight scheduling policy and the Figure 6 corresponds to Policy 2. It is clear that the stationary average queue size E[ ()] under the Max-Weight policy is smaller than the corresponding stationary average queue size E[ ()] under Policy 2.

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

15

14

12

10

Average queue sizes

8

6

4

2

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 4. Time evolution of average queue sizes of requests in a stable switch

12 S(n) E[S( )]
10

Average queue sizes

8

6

4

2

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 5. Time evolution of average queue sizes of requests under the Max-Weight scheduling with = [0.095 0.165]

We now repeat the experiments by choosing the same parameters except now we choose = [0.105 0.175]. The Figure 7 corresponds to the Max-Weight scheduling policy and the Figure 8 corresponds to Policy 2. It is clear that the network is stable under the Max-Weight scheduling policy and it is unstable under Policy 2 as the average queue sizes increase monotonically with . This example shows that we should design a scheduling policy by considering dynamic properties of quantum networks into account to have good efficiency.
, Vol. 1, No. 1, Article . Publication date: June 2021.

16

Thirupathaiah Vasantam and Don Towsley

60 S(n) E[S( )]
50

Average queue sizes

40

30

20

10

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 6. Time evolution of average queue sizes of requests under Policy 2 with = [0.095 0.165]

15 S(n) E[S( )]
10

Average queue sizes

5

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 7. Time evolution of average queue sizes of requests under the Max-Weight scheduling with = [0.105 0.175]

6 CONCLUSIONS In this paper, we studied entanglement distribution on quantum networks that aim to distribute entanglements for different sets of users. First, we investigated stability properties of quantum networks by deriving necessary conditions on request arrival rates for achieving stability of the network. By exploiting the fact that the generation of link-level entanglements and measurement operations are successful with certain probabilities, we proposed a Max-Weight scheduling policy and were able to show that the proposed policy stabilizes the network for all feasible arrival rates.
, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

17

4000 3500

S(n) E[S( )]

3000

Average queue sizes

2500

2000

1500

1000

500

0

1

2

3

4

5

6

7

8

9 10

Time-slot

105

Fig. 8. Time evolution of average queue sizes of requests under Policy 2 with = [0.105 0.175]

A major drawback of our policy is that it has large implementation cost due to the fact that we need to search over all possible matchings to find the best matching in each time-slot. In the future, it is of interest to find other low complex scheduling policies that can stabilize the network for all feasible arrival rates. We would also like to investigate the model in which links can create multiple entanglements in each time-slot. This model will have larger capacity regions compared to the model addressed in this paper. Finally, in this paper, we assumed that each type of requests can be served by using a single set of links. We plan to extend our analysis to the setting where each type of requests can be served by several sets of links.
ACKNOWLEDGMENTS
This work was supported by the National Science Foundation (NSF) under Grants CNS-195744 and ERC-1941583.
REFERENCES
[1] Seiji Armstrong, Jean-François Morizur, Jiri Janousek, Boris Hage, Nicolas Treps, Ping Koy Lam, and HansA. Bachor. 2012. Programmable multimode quantum networks. Nature Communications 3, 1 (Jan 2012). https://doi.org/10.1038/ncomms2033
[2] C. H. Bennett and G. Brassard. 2014. Quantum cryptography: Public key distribution and coin tossing. Theor. Comput. Sci. 560 (2014), 7­11.
[3] M. K. Bhaskar, R. Riedinger, B. Machielse, D. S. Levonian, C. T. Nguyen, E. N. Knall, H. Park, D. Englund, M. Loncar, D. D. Sukachev, and et al. 2020. Experimental demonstration of memory-enhanced quantum communication. Nature 580, 7801 (Mar 2020), 60­64. https://doi.org/10.1038/s41586-020-2103-5
[4] Anne Broadbent, Joseph Fitzsimons, and Elham Kashefi. 2009. Universal Blind Quantum Computation. In Proceedings of the 50th Annual IEEE Symposium on Foundations of Computer Science (FOCS '09) (Annual Symposium on Foundations of Computer Science). Institute of Electrical and Electronics Engineers (IEEE), United States, 517­526.
[5] Emily F. Burmeister, John P. Mack, Henrik N. Poulsen, Jonathan Klamkin, Larry A. Coldren, Daniel J. Blumenthal, and John E. Bowers. 2008. SOA gate array recirculating buffer with fiber delay loop. Opt. Express 16, 12 (Jun 2008), 8451­8456. https://doi.org/10.1364/OE.16.008451
[6] Axel Dahlberg, Matthew Skrzypczyk, Tim Coopmans, Leon Wubben, Filip Rozpedek, Matteo Pompili, Arian Stolk, Przemyslaw Pawelczak, Robert Knegjens, Julio de Oliveira Filho, and et al. 2019. A link layer protocol for quantum networks. Proceedings of the ACM Special Interest Group on Data Communication (Aug 2019).
, Vol. 1, No. 1, Article . Publication date: June 2021.

18

Thirupathaiah Vasantam and Don Towsley

https://doi.org/10.1145/3341302.3342070

[7] Artur K. Ekert. 1991. Quantum cryptography based on Bell's theorem. Phys. Rev. Lett. 67 (Aug 1991), 661­663. Issue

6.

[8] Zachary Eldredge, Michael Foss-Feig, Jonathan A. Gross, S. L. Rolston, and Alexey V. Gorshkov. 2018. Optimal and

secure measurement protocols for quantum sensor networks. Phys. Rev. A 97 (Apr 2018), 042337. Issue 4.

[9] Vittorio Giovannetti, Seth Lloyd, and Lorenzo Maccone. 2011. Advances in quantum metrology. Nature Photonics 5,

4 (mar 2011), 222­229. https://doi.org/10.1038/nphoton.2011.35

[10] Matthew A. Hall, Joseph B. Altepeter, and Prem Kumar. 2011. Ultrafast Switching of Photonic Entanglement. Phys.

Rev. Lett. 106 (Feb 2011), 053901. Issue 5. https://doi.org/10.1103/PhysRevLett.106.053901

[11] I. Herbauts, B. Blauensteiner, A. Poppe, T. Jennewein, and H. Hübel. 2013. Demonstration of active routing of entangle-

ment in a multi-user network. Opt. Express 21, 23 (Nov 2013), 29013­29024. https://doi.org/10.1364/OE.21.029013

[12] Yuan Lee, Eric Bersin, Axel Dahlberg, Stephanie Wehner, and Dirk Englund. 2020. A Quantum Router Architecture

for High-Fidelity Entanglement Flows in Quantum Networks. arXiv:2005.01852 [quant-ph]

[13] Boxi Li, Tim Coopmans, and David Elkouss. 2020. Efficient Optimization of Cut-offs in Quantum Repeater Chains.

In Proceedings - IEEE International Conference on Quantum Computing and Engineering, QCE 2020 (Proceedings

- IEEE International Conference on Quantum Computing and Engineering, QCE 2020), Hausi A. Muller, Greg Byrd,

Candace Culhane, Erik DeBenedictis, and Travis Humble (Eds.). Institute of Electrical and Electronics Engineers

(IEEE), United States, 158­168. https://doi.org/10.1109/QCE49297.2020.00029 2020 IEEE International Conference

on Quantum Computing and Engineering, QCE 2020 ; Conference date: 12-10-2020 Through 16-10-2020.

[14] Ruoyu Li, Luca Petit, David P. Franke, Juan Pablo Dehollain, Jonas Helsen, Mark Steudtner, Nicole K. Thomas,

Stephanie Wehner, Lieven M.K. Vandersypen, and Menno Veldhorst. 2018. A crossbar network for silicon quantum

dot qubits. Science Advances 4, 7 (July 2018). https://doi.org/10.1126/sciadv.aar3960

[15] N. McKeown, A. Mekkittikul, V. Anantharam, and J. Walrand. 1999. Achieving 100% throughput in an input-queued

switch. IEEE Transactions on Communications 47, 8 (1999), 1260­1267.

[16] Sean Meyn, Richard L. Tweedie, and Peter W. Glynn. 2009. Markov Chains and Stochastic Stability (2 ed.). Cambridge

University Press. https://doi.org/10.1017/CBO9780511626630

[17] Philippe Nain, Gayane Vardoyan, Saikat Guha, and Don Towsley. 2020. On the Analysis of a Multipartite En-

tanglement Distribution Switch. Proc. ACM Meas. Anal. Comput. Syst. 4, 2, Article 23 (June 2020), 39 pages.

https://doi.org/10.1145/3392141

[18] Michael A. Nielsen and Isaac L. Chuang. 2000. Quantum Computation and Quantum Information. Cambridge Univer-

sity Press.

[19] Mihir Pant, Hari Krovi, Don Towsley, Leandros Tassiulas, Liang Jiang, Prithwish Basu, Dirk Englund, and Saikat

Guha. 2019. Routing entanglement in the quantum internet. npj Quantum Information 5, 1 (1 Dec. 2019).

https://doi.org/10.1038/s41534-019-0139-x

[20] Stefano Pirandola. 2019. End-to-end capacities of a quantum communication network. Communications Physics 2, 1

(May 2019). https://doi.org/10.1038/s42005-019-0147-3

[21] M. Sasaki, M. Fujiwara, H. Ishizuka, W. Klaus, K. Wakui, M. Takeoka, S. Miki, T. Yamashita, Z. Wang, A. Tanaka, K.

Yoshino, Y. Nambu, S. Takahashi, A. Tajima, A. Tomita, T. Domeki, T. Hasegawa, Y. Sakai, H. Kobayashi, T. Asai, K.

Shimizu, T. Tokura, T. Tsurumaru, M. Matsui, T. Honjo, K. Tamaki, H. Takesue, Y. Tokura, J. F. Dynes, A. R. Dixon,

A. W. Sharpe, Z. L. Yuan, A. J. Shields, S. Uchikoga, M. Legré, S. Robyr, P. Trinkler, L. Monat, J. B. Page, G. Ribordy,

A. Poppe, A. Allacher, O. Maurhart, T. Länger, M. Peev, and A. Zeilinger. 2011. Field test of quantum key distribu-

tion in the Tokyo QKD Network. Optics Express 19, 11 (May 2011), 10387. https://doi.org/10.1364/OE.19.010387

arXiv:1103.3566 [quant-ph]

[22] E. Shchukin, F. Schmidt, and P. van Loock. 2019. Waiting time in quantum repeaters with probabilistic entanglement

swapping. Phys. Rev. A 100 (Sep 2019), 032322. Issue 3. https://doi.org/10.1103/PhysRevA.100.032322

[23] L. Tassiulas. 1997. Scheduling and performance limits of networks with constantly changing topology. IEEE Transac-

tions on Information Theory 43, 3 (1997), 1067­1073. https://doi.org/10.1109/18.568722

[24] L. Tassiulas and A. Ephremides. 1990. Stability properties of constrained queueing systems and scheduling policies

for maximum throughput in multihop radio networks. In 29th IEEE Conference on Decision and Control. 2130­2132

vol.4. https://doi.org/10.1109/CDC.1990.204000

[25] Rodney Van Meter. 2014.

Quantum Networking. Vol. 9781848215375.

Wiley Blackwell.

https://doi.org/10.1002/9781118648919

[26] Gayane Vardoyan, Saikat Guha, Philippe Nain, and Don Towsley. 2020. On the Capacity Region of Bipartite and Tri-

partite Entanglement Switching. In Performance 2020 - 38th IFIP International Symposium on Computer Performance,

Modeling, Measurements and Evaluation. Milan, Italy, 1­6. https://hal.inria.fr/hal-02010865

[27] Gayane Vardoyan, Saikat Guha, Philippe Nain, and Don Towsley. 2021. On the Stochastic Analysis of a

Quantum Entanglement Distribution Switch. IEEE Transactions on Quantum Engineering 2 (2021), 1­16.

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

19

https://doi.org/10.1109/TQE.2021.3058058 [28] Yi Xia, Wei Li, William Clark, Darlene Hart, Quntao Zhuang, and Zheshen Zhang. 2020. Demonstration of a
Reconfigurable Entangled Radiofrequency-Photonic Sensor Network. Phys. Rev. Lett. 124, 15 (2020), 150502. https://doi.org/10.1103/PhysRevLett.124.150502 arXiv:1910.08825 [quant-ph] [29] Juan Yin, Yuan Cao, Yu-Huai Li, Sheng-Kai Liao, Liang Zhang, Ji-Gang Ren, Wen-Qi Cai, Wei-Yue Liu, Bo Li, Hui Dai, Guang-Bing Li, Qi-Ming Lu, Yun-Hong Gong, Yu Xu, Shuang-Lin Li, Feng-Zhi Li, Ya-Yun Yin, ZiQing Jiang, Ming Li, Jian-Jun Jia, Ge Ren, Dong He, Yi-Lin Zhou, Xiao-Xiang Zhang, Na Wang, Xiang Chang, Zhen-Cai Zhu, Nai-Le Liu, Yu-Ao Chen, Chao-Yang Lu, Rong Shu, Cheng-Zhi Peng, Jian-Yu Wang, and Jian-Wei Pan. 2017. Satellite-based entanglement distribution over 1200 kilometers. Science 356, 6343 (2017), 1140­1144. https://doi.org/10.1126/science.aan3211 arXiv:https://science.sciencemag.org/content/356/6343/1140.full.pdf

A PROOF OF THEOREM 1
The proof uses the existence of the stationary distribution under a scheduling policy. First, we begin with the simple case of = 1 for 1   and = 1 for 1   .

A.1 For = 1 (1   ) and = 1 (1   ) :
In this section, we assume that every link generates an entanglement in each time-slot and the entanglement measurement operations are always successful. As a consequence, the number of served requests of type in time-slot is given by

( ) = { ( )>0} { ( )>0}.

(48)

Furthermore, we have

Q( + 1) = Q(1) - D( ) + A( ).

(49)

=1

=1

We can also write

where

D( ) =

( ) and

( )= ,

(50)

=1

D

D

( ) denotes the cumulative number of times the vector is served up to time-slot . Hence,

Q( + 1) = Q(1) - =1 D( ) + =1 A( )

= Q(1) -

() +

=1 A(

) .

(51)

D

Since E [Q(1)] < , we obtain

lim Q(1) = 0.

(52)



The elements of the sequence { ( )} are independent and identically distributed (iid) random

variables, hence, we have

lim =1 A( ) = .

(53)



Since the system is assumed to be stable, we have

lim Q( + 1) = 0.

(54)



Therefore, we get

lim =1 D( ) = .

(55)



, Vol. 1, No. 1, Article . Publication date: June 2021.

20

Thirupathaiah Vasantam and Don Towsley

The above equation shows that the rate of departure of requests at equilibrium coincides with the arrival rate of requests . Hence, we obtain

lim ( ) = .

(56)



D

It remains to show that the limit lim  ( ) exists. By definition, we have

( )=

{D( )= }.

(57)

=1

Consider the Markov chain (Q( ), Y( )) where Y( ) is a random variable that is used to break ties if multiple matchings can be chosen according to the Max-Weight scheduling policy. Let C be the set of states of (Q( ), Y( )) for which the switch serves the matching in time-slot . Then we write

( )=

{Q( )=q,Y( )= }.

(58)

(q, ) C =1

Then it follows that the following limit exists due to the stability of the system

lim

(

) =

,



where  denotes the probability with which the matching

Since we have

( ) = 1.

D
We conclude that D  = 1.

(59) is served in a time-slot at equilibrium.
(60)

A.2 For  1 (1   ) and  1 (1   ) :
A matching W( ) is selected in time-slot according to the Max-Weight scheduling as in (4). The number of type requests served in time-slot is given by

( ) = ( ) { ( )>0} { ( )>0,  } { ( )>0} .

(61)

Since E [Q(1)] <  and the system is stable, the equations (52), (53), and (54) are valid. As a result, we get

lim =1 D( ) = .

(62)



The above equation shows that the rate of departure of requests at equilibrium coincides with the

arrival rate of requests . Hence, we obtain

lim ( ) = .

(63)



D

It remains to show that the limit lim  ( ) exists. By definition, we have

( )=

{D( )= }.

(64)

=1

Consider the Markov chain (Q( ), T( ), Y( ), Z( )) where Z( ) = ( ( )), where the random variable Y( ) is used to break ties if multiple matchings can be chosen according to the Max-Weight

, Vol. 1, No. 1, Article . Publication date: June 2021.

Stability Analysis of a Quantum Network with Max-Weight Scheduling

21

scheduling policy for given Q( ) and T( ). Let C be the set of states of (Q( ), T( ), Y( ), Z( )) for which the systems serves the matching in time-slot . Then we write

( )=

{Q( )=q,T( )=t,Y( )= ,Z( )=z }.

(q,t, ,z) C =1

(65)

Then it follows that since the system is stable

lim

(

) =

,

(66)



where  denotes the probability with which the vector is served in a time-slot at equilibrium.

Further, we have

=

.

(67)

D
From (67), we have

=



D

=

.

D, =1

(68)

Hence, we obtain



=

=



D



=

( ) ,

(69)

D

where ( ) =

 . We can interpret  ( ) as the stationary probability with which is



served in a time-slot conditioned on the event that all the links have qubits and all the entangle-

ment measurement operations are successful.

, Vol. 1, No. 1, Article . Publication date: June 2021.

This figure "Switch_network.jpg" is available in "jpg" format from: http://arxiv.org/ps/2106.00831v1

This figure "switch1.jpg" is available in "jpg" format from: http://arxiv.org/ps/2106.00831v1

