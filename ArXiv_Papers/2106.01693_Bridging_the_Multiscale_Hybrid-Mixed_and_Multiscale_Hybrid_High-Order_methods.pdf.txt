arXiv:2106.01693v1 [math.NA] 3 Jun 2021

BRIDGING THE MULTISCALE HYBRID-MIXED AND MULTISCALE
HYBRID HIGH-ORDER METHODS
THE´ OPHILE CHAUMONT-FRELET, ALEXANDRE ERN, SIMON LEMAIRE, AND FRE´ DE´ RIC VALENTIN
Abstract. We establish the equivalence between the Multiscale Hybrid-Mixed (MHM) and the Multiscale Hybrid High-Order (MsHHO) methods for a variable diffusion problem with piecewise polynomial source terms. Under the idealized assumption that the local problems defining the multiscale basis functions are exactly solved, we prove that the equivalence holds for general polytopal (coarse) meshes and arbitrary approximation orders. Also, we leverage the interchange of properties to perform a unified convergence analysis, as well as to improve on both methods.
1. Introduction
The tremendous development of massively parallel architectures in the last decade has led to a revision of what is expected from computational simulators, which must embed asynchronous and communication-avoiding algorithms. In such a scenario where precision and robustness remain fundamental properties, but algorithms must take full advantage of the new architectures, numerical methods built upon the "divide-and-conquer" philosophy fulfill simulator imperatives better than standard methods operating in a monolithic fashion on the different scales of the problem at hand. Among the vast literature on the subject, driven by domain decomposition methodologies (see, e.g., [40] for a survey), multiscale numerical methods emerge as an attractive option to efficiently handle problems with highly heterogeneous coefficients, as well as multi-query scenarios in which the problem solution must be computed for a large number of source terms. These scenarios may arise when considering highly oscillatory, nonlinear, time-dependent models, or within optimization algorithms when solving problems featuring PDE-based constraints, or in models including stochastic processes, to cite a few.
The development of multiscale methods started with the seminal work [6]. Important advances were then provided in [31, 32] (cf. also [8, 10], and the unifying viewpoint of [9]) and in [28, 29], laying the ground, respectively, for the Variational Multiscale method, and for the Multiscale Finite Element Method (MsFEM). Overall, the common idea behind these multiscale methods is to consider basis functions especially designed so as to upscale to an overlying coarse mesh the sub-mesh variations of the model. Particularly appealing is the fact that the multiscale basis functions are defined by entirely independent problems. From this viewpoint, multiscale numerical methods may also be seen as a (non-iterative) domain decomposition technique [24]. Since the pioneering works on multiscale methods, a large number of improvements and new approaches have been proposed. In the MsFEM context (see [21] for a survey), one can cite the oversampling technique of [22], as well as the Petrov­Galerkin variant of [30] (see also [3]), the high-order method of [2], or the multipoint flux mixed finite element method of [42]. More recent research directions focus on reducing and possibly eliminating the cell resonance error. In that vein, one can cite the Generalized MsFEM [20], or the Local Orthogonal Decomposition approach [27, 36]. Based on a quite different paradigm, one can also cite the Heterogeneous Multiscale Method [19, 1].
() Inria, Univ. Co^te d'Azur, CNRS, UMR 7351 - Laboratoire J. A. Dieudonn´e, F-06000 Nice, France () CERMICS, E´cole des Ponts, F-77455 Marne-la-Vall´ee Cedex 2 & Inria Paris, F-75589 Paris, France () Inria, Univ. Lille, CNRS, UMR 8524 - Laboratoire Paul Painlev´e, F-59000 Lille, France () LNCC, Petro´polis - RJ, Brazil & Inria, F-06000 Nice, France E-mail addresses: () theophile.chaumont@inria.fr, () alexandre.ern@enpc.fr, () simon.lemaire@inria.fr, () valentin@lncc.br.
1

2

BRIDGING THE MHM AND MSHHO METHODS

Hybridization has also been used recently in the context of (multiscale) Discontinuous Galerkin methods, leading to the multiscale Hybridizable Discontinuous Galerkin method of [23]; cf. also the Weak Galerkin method of [37], devised in the spirit of the Generalized MsFEM.
Recently, two families of hybrid multiscale numerical methods that are applicable on general meshes have been proposed, namely the Multiscale Hybrid-Mixed (MHM) and the Multiscale Hybrid High-Order (MsHHO) methods. The MHM method has been first introduced in [25], and further analyzed in [4, 38, 7] (see also [26] for an abstract setting), whereas the MsHHO method has been proposed in [12, 13], as an extension of the HHO method first introduced in [16, 15] (cf. also [17]). The MHM method relates to the MsFEM proposed in [11], as well as to the subgrid upscaling method of [5] (see [26, Section 5.1.2] for further details). The MsHHO method generalizes to arbitrary polynomial orders the low-order nonconforming multiscale methods of [33, 34]. Note in passing that similar ideas have also been developed in a conforming framework in the context of BEM-based FEM [14, 41]. The MHM and MsHHO methods substantially differ in their construction. Picking the Poisson equation as an example, the MHM method hinges on the primal hybrid formulation analyzed in [39]. As a consequence, whereas the local problems are defined as coercive Neumann problems, the global upscaled linear system is of saddle-point type, involving face unknowns that are the normal fluxes through the mesh faces (also the Neumann data for the local problems, up to the sign), plus one degree of freedom per mesh cell that enforces a local balance between the normal fluxes and the source term. Notice that the (global) saddlepoint structure of the MHM method can be equivalently replaced by a sequence of positive-definite linear systems as shown recently in [35]. On the other hand, the MsHHO method is directly built upon the primal formulation of the problem. As a consequence, the local (Neumann) problems are defined as constrained minimization problems, and as such exhibit a saddle-point structure. At the opposite, the global upscaled linear system is coercive, and only involves face unknowns that are the traces of the solution at interfaces. Notice that, as opposed to the MHM method, the MsHHO method also uses cell unknowns (that are locally eliminable from the global upscaled linear system), which are associated with basis functions solving local problems with nonzero source terms. As such, the MsHHO method is naturally suited to deal with multi-query scenarios.
In this work, we revisit the MHM and MsHHO methods and we prove an equivalence result between their solutions. Notice that such a relationship is not straightforward since, at first glance, the two methods exhibit structures that are genuinely different. Nonetheless, we demonstrate that such an equivalence holds under the assumption that the source term of the continuous problem is piecewise polynomial (cf. Theorem 5.1). For this equivalence to hold, we make the idealized assumption that the local problems defining the multiscale basis functions are exactly solved. The corresponding methods are then referred to as one-level. Leveraging this equivalence result, the present work also contributes to derive, in a unified fashion, an energy-norm error estimate that is valid for both methods (cf. Theorem 6.3). More specifically,
· in the MHM framework, this result is a refined version (especially in the tracking of the dependency with respect to the diffusion coefficient) of the results in [4];
· in the MsHHO framework, this result is new and is complementary to the homogenizationbased error estimate derived in [12].
We also explore these stimulating results to transfer properties proved for one method to the other, and to reveal how the interplay between the methods can guide advances for both. Notably, we show that
· the MHM method can be adapted to deal with multi-query scenarios (cf. Section 7.2.1); · the MsHHO method can be recast as a purely face-based method, in the sense that it can
be alternatively defined without using cell unknowns (cf. Remark 7.5).
The outline of the article is as follows. Section 2 introduces the model problem, the partition, the notation and a number of useful tools. We present the MHM method in Section 3, and the MsHHO method in Section 4. The equivalence result is stated in Section 5, along with some further properties and remarks. The energy-norm error estimate is proved in Section 6. The solution strategies for both methods are discussed in Section 7, leveraging the equivalence result

BRIDGING THE MHM AND MSHHO METHODS

3

at hand to propose enhancements for both methods. Finally, some conclusions are drawn in Section 8.

2. Setting

In this section, we present the setting, introduce the partition, and define useful broken spaces on this partition.

2.1. Model problem. We consider an open polytopal domain   Rd, d = 2 or 3, with boundary . Given f :   R, we seek a function u :   R such that

(2.1)

- · (Au) = f in  , u = 0 on  .

We assume that the diffusion coefficient A  L(; Rd×d) is symmetric and uniformly elliptic,

and that the source term f is in L2(). Problem (2.1) can be equivalently recast into the following

weak form: find u  H01() such that

(2.2)

(Au, v) = (f, v) for all v  H01() ,

where (·, ·)D denotes the L2(D; R),   {1, d}, inner product for any measurable set D  . It is well-established that Problem (2.2) admits a unique solution.

2.2. Partition. The domain  is partitioned into a (coarse) mesh TH that consists of polytopal (open) cells K with diameter HK , and we set H := maxKTH HK . In practice, both the MHM and MsHHO methods consider a fine submesh (characterized by a mesh-size h  H) to compute

the local basis functions, but this finer mesh is not needed in the present discussion since we will

assume that the local problems defining the basis functions are exactly solved. We collect the

mesh faces F of TH in the set FH , and split this set into the subset of internal faces (or interfaces) FHint and the subset of boundary faces FHbnd. The mesh faces are defined to be planar, i.e., every mesh face F  FH is supported by an affine hyperplane HF (recall that the mesh cells have planar faces since they are polytopes). For a face F  FHint, we have

(2.3)

F = K+  K-  HF ,

for two cells K±  TH , whereas for a boundary face F  FHbnd, we have

(2.4)

F = K    HF ,

for a cell K  TH . For simplicity, the definitions (2.3) and (2.4) do not allow, respectively, for the case of several coplanar faces that would be shared by the same two cells, or for the case of
several coplanar boundary faces in a boundary cell, but of course these cases could be seamlessly handled. We denote by TH the skeleton of the mesh TH , defined by TH := KTH K. Given K  TH , we denote by FK the set of its faces, and by nK the unit outward normal vector to its boundary (whose restriction to the face F  FK is the constant vector denoted by nK,F ). We associate with each face F  FH a unit normal vector nF whose orientation is fixed, with the convention that nF := n|F if F  FHbnd, where n is the unit outward normal vector to .

2.3. Infinite-dimensional broken spaces. We first define the broken space of piecewise smooth

functions on TH :

(2.5)

H1(TH ) := v  L2() : vK  H1(K) K  TH ,

where we let vD := v|D. For any v  H1(TH ), we define the jump v F of v across F  FH by

(2.6)

v F := vK+|F (nK+,F · nF ) + vK-|F (nK-,F · nF )

if F  K+  K- is an interface, and simply by

(2.7)

v F := vK|F

if F  K   is a boundary face. We also define the broken gradient operator H : H1(TH )  L2(; Rd) such that, for any v  H1(TH ),

(2.8)

(H v)|K := vK for all K  TH .

4

BRIDGING THE MHM AND MSHHO METHODS

We next introduce the space of piecewise smooth functions on TH whose broken (weighted) flux belongs to H(div, ):

(2.9)

V(TH ; div, ) := v  H1(TH ) : AH v  H(div, ) .

Notice that V(TH ; div, )  H1(). We now define the two "skeletal" spaces

(2.10)

0(TH ) := z := (zK )KTH 

H 1/2 ( K )

K TH

 w(z)  H01() s.t. zK = wK (z)|K K  TH

,

and (2.11)

(TH ) := µ := (µK )KTH 

H -1/2 ( K )

K TH

 (µ)  H(div, ) s.t. µK = K (µ)|K · nK K  TH

.

Letting ·, · K stand for the duality pairing between H-1/2(K) and H1/2(K), we define the following pairing, for all µ  KTH H-1/2(K) and all z  KTH H1/2(K),

(2.12)

µ, z TH :=

µK , zK K ,

K TH

so that for all µ  (TH ) and all z  0(TH ), recalling that (µ)  H(div, ) and w(z)  H01(), we have

(2.13)

µ, z TH =

( · (µ), w(z))K + ((µ), w(z))K = 0 .

K TH

2.4. Finite-dimensional broken spaces. Let q  N denote a given polynomial degree. The space of piecewise (d-variate) polynomial functions on TH of total degree up to q is denoted by

(2.14)

Pq(TH ) := v  L2() : vK  Pq(K) K  TH ,

whereas the space of piecewise ((d - 1)-variate) polynomial functions on FH of total degree up to q is denoted by

(2.15)

Pq(FH ) := v  L2

F : vF  Pq(F ) F  FH ,

F FH

and its subset incorporating homogeneous boundary conditions by

(2.16)

Pq0(FH ) := v  Pq(FH ) : vF = 0 F  FHbnd .

For all K  TH , we also define the local space of piecewise ((d - 1)-variate) polynomial functions on FK of total degree up to q as follows:

(2.17)

Pq(FK ) := v  L2(K) : vF  Pq(F ) F  FK .

We consider the following finite-dimensional subspace of (TH ):

(2.18)

q(TH ) := {µ  (TH ) : µK  Pq(FK ) K  TH } (TH) .

Notice that for every interface F  FHint with F  K+  K-, as a consequence of (2.13), we have µK+|F + µK-|F = 0 for all µ  q(TH ). We also define, for any integer m  0, the spaces
(2.19) U m,q(K) := v  H1(K) :  · (Av)  Pm(K), Av|K · nK  Pq(FK ) , K  TH ,

U m,q(TH ) := v  H1(TH ) : vK  U m,q(K) K  TH .

To alleviate the notation, we shall drop the superscript m when considering m = q - 1 for q  1, and write U q(K) and U q(TH ) in place of U q-1,q(K) and U q-1,q(TH ), respectively.
We finally introduce the space of "discretely H01()" functions on TH :

(2.20)

H01,q(TH ) := v  H1(TH ) : ( v F , p)F = 0  p  Pq(F ), F  FH .

BRIDGING THE MHM AND MSHHO METHODS

5

Equivalently, we have

(2.21)

H01,q(TH ) = v  H1(TH ) : µ, v TH = 0 µ  q(TH ) .

3. The MHM method

Let us first set (3.1)

H1(K) := v  H1(K) : (v, 1)K = 0 , K  TH , H1(TH ) := v  H1(TH ) : (vK , 1)K = 0 K  TH .

For integers m, q  N, we also define the subspaces U m,q(K) := {v  U m,q(K) : (v, 1)K = 0} for all K  TH and U m,q(TH ) := {v  U m,q(TH ) : (vK , 1)K = 0 K  TH }.
Let K  TH , and consider the two local operators

(3.2)

TKn

:

H

-

1 2

(

K

)



H 1 (K )

,

TKs : L2(K)  H1(K) .

For

all

µK



H

-

1 2

(

K

)

and

all

gK



L2(K ),

TKn (µK )

and

TKs (gK )

are

the

unique

elements

in

H1(K) such that

(3.3)

(ATKn (µK ), v)K = µK , v K , (ATKs (gK ), v)K = (gK, v)K ,

v  H1(K) .

The superscripts in the operators indicate that TKn lifts a (Neumann) normal flux and TKs lifts a source term. Elementary arguments show that

(3.4a)

-



·

(ATKn (µK

))

=

-

1 |K

|

µK , 1

K

in

K,

ATKn (µK ) · nK = µK on K ,

(3.4b)

-



·

(ATKs (gK ))

=

gK

-

1 |K

|

(gK

,

1)K

in

K

,

ATKs (gK ) · nK = 0 on K .

It is convenient to define the following global versions of the above lifting operators:

(3.5)

T n : (TH )  H1(TH ) ,

For all µ  (TH ) and all g  L2(), we set

(3.6)

T n(µ)|K := TKn (µK ) ,

Equivalently, we have

T s : L2()  H1(TH ) . T s(g)|K := TKs (gK ) .

(3.7)

(AH T n(µ), H v) = µ, v TH , (AH T s(g), H v) = (g, v) ,

v  H1(TH ) ,

which results from summing (3.3) cell-wise. We remark that the solution u  H01() to Problem (2.2) satisfies

(3.8)

u = u0 + T n() + T s(f ) ,

where (u0, )  P0(TH ) × (TH ) solve

(3.9a) (3.9b)

, v0 TH = -(f, v0)

v0  P0(TH ) ,

µ, u0 TH + µ, T n() TH = - µ, T s(f ) TH µ  (TH ) .

Notice that, owing to (3.7) and to the fact that A is symmetric, we have µ, T s(f ) TH = (f, T n(µ)).
Let k  N be a given polynomial degree. The MHM method [4] reads as follows: Find (u0H , H )  P0(TH ) × k(TH ) such that

(3.10a)

H , vH0 TH = -(f, vH0 )

vH0  P0(TH ) ,

(3.10b)

µH , u0H TH + µH , T n(H ) TH = - µH , T s(f ) TH µH  k(TH ) ,

and the MHM solution is then defined by

(3.11)

umHhm := u0H + T n(H ) + T s(f ) .

6

BRIDGING THE MHM AND MSHHO METHODS

The well-posedness of Problem (3.10) is established in [4, Theorem 3.2]. Notice that we also have, on the discrete level, µH , T s(f ) TH = (f, T n(µH )).
Lemma 3.1 (Characterization of the MHM solution (3.11)). Let umHhm be defined by (3.11). Then, (i) (AH umHhm |K )·nK  Pk(FK ) for all K  TH and umHhm  H01,k(TH ); (ii) umHhm  V(TH ; div, ) and - · (AH umHhm) = f in .

Proof. By (3.11) and (3.4), we infer that for all K  TH ,

(3.12) AH umHhm |K · nK = ATKn (H|K ) · nK + ATKs (fK ) · nK = H|K  Pk(FK ) .

That umHhm  H01,k(TH ) follows from the characterization (2.21) of H01,k(TH ) and (3.10b). Now, to prove that umHhm  V(TH ; div, ), we need to show that AH umHhm  H(div, ). Owing to (3.4), we infer that for all K  TH , we have

(3.13)

 · (AH umHhm)|K =  · (ATKn (H|K )) +  · (ATKs (fK ))

=

1 |K |

K , 1

K

- fK

+

1 |K

|

(fK

,

1)K

= -fK

 L2(K) ,

where the last equality follows from (3.10a). This shows that AH umHhm |K  H(div, K) for all K  TH . Moreover, (3.12) shows that AH umHhm |K · nK can be localized to each face of K and since for every interface F  K+K-, K+|F +K-|F = 0, we infer that AH umHhm F ·nF = 0 on F . It results that AH umHhm  H(div, ). Finally, - · (AH umHhm) = f in  follows from (3.13) since K  TH is arbitrary.

Let us take a closer look at the MHM method (3.10)-(3.11). First, we observe that since
T n(H )  U 0,k(TH ), this function is computable from a finite-dimensional calculation. The same holds for the right-hand side of (3.10b) since µH , T s(f ) TH = (f, T n(µH )). However, the situation is different in (3.11) for T s(f ). One needs indeed to define, so as to fully explicit

the (one-level) method, an approximation of this function that is also computable from a finite-

dimensional calculation. For this reason, the original MHM method defined by (3.10)-(3.11) can

be viewed as semi-explicit, whereas a fully explicit version of it is obtained after approximating T s(f ). Among various possibilities, perhaps the simplest one is to choose an integer m  0, project f  L2() onto the finite-dimensional subspace Pm(TH ), and compute T s(m H (f )), where m H is the L2-orthogonal projector onto Pm(TH ). This leads to the fully explicit MHM solution

(3.14)

umHhm := u0H + T n(H ) + T s(m H (f )) ,

where (u0H , H )  P0(TH ) × k(TH ) now solve

(3.15a)

H , vH0 TH = -(f, vH0 )

vH0  P0(TH ) ,

(3.15b)

µH , u0H TH + µH , T n(H ) TH = -(m H (f ), T n(µH )) µH  k(TH ) .

We notice in particular that in (3.14) we have T n(H )  U 0,k(TH )  U m,k(TH ) and T s(m H (f ))  U m,0(TH )  U m,k(TH ). Thus, all the quantities involved in (3.14)-(3.15) are members of the space Um,k(TH ). We refer to Remark 5.3 for an example of an alternative definition for the fully explicit method. In what follows, we exclusively focus on (the semi-explicit method (3.10)-(3.11)

and on) the fully explicit method defined by (3.14)-(3.15). Adapting the arguments of the proof

of Lemma 3.1 leads to the following result.

Lemma 3.2 (Characterization of the MHM solution (3.14)). Let umHhm be defined by (3.14). Then, (i) umHhm  U m,k(TH )  H01,k(TH ); (ii) umHhm  V(TH ; div, ) and - · (AH umHhm) = m H (f ) in .

4. The MsHHO method

Let again k  N be a given polynomial degree, and let m  0 be an integer. The MsHHO method hinges on the following set of discrete unknowns:

(4.1)

UHm,k := Pm(TH ) × Pk(FH ) ,

which is composed of cell and face degrees of freedom (one can also consider the case m = -1, so that the method is based on face unknowns only; cf. Remark 5.4). The standard MsHHO method,

BRIDGING THE MHM AND MSHHO METHODS

7

referred to as mixed-order MsHHO method in [12], corresponds to the case m = k - 1 for k  1. For all K  TH , we let vK := (vK , vFK )  UKm,k := Pm(K) × Pk(FK ) denote the local counterpart of vH := (vTH , vFH )  UHm,k. For all F  FH , vF  Pk(F ) is defined by vF := vFH|F . Notice that vF = vFK+ |F = vFK- |F if F  K+  K- is an interface, and vF = vFK|F if F  K   is a boundary face.
The MsHHO method is based on the following local reconstruction operator: For all K  TH and all vK  UKm,k, there exists a unique function rK (vK )  U m,k(K) (recall that U m,k(K) is defined in (2.19)) such that

(4.2a) (4.2b)

(ArK (vK ), w)K = -(vK ,  · (Aw))K + (vFK , Aw · nK )K w  U m,k(K) , (rK (vK ), 1)K = (vFK , 1)K .

Notice that the usual choice of closure relation for rK (vK ) is (rK (vK ), 1)K = (vK , 1)K . The operator rK is the (local) reconstruction operator associated with the finite element

(4.3)

K, U m,k(K), K ,

with the set of degrees of freedom K : U m,k(K)  UKm,k such that K (v) := m K (v), kFK (v) for all v  U m,k(K), where m K and kFK are the L2-orthogonal projectors onto, respectively, Pm(K) and Pk(FK ). For further use, we also define kF to be the L2-orthogonal projector onto Pk(F ) for all F  FH . Importantly, the reconstruction operator rK satisfies K (rK (vK )) = vK for all vK  UKm,k, i.e.,

(4.4a)

(rK (vK ), q)K = (vK , q)K q  Pm(K) ,

(4.4b)

(rK (vK ), q)K = (vFK , q)K q  Pk(FK ) .

In the MsHHO method, the essential boundary conditions can be enforced strongly by considering the subspace

(4.5)

UHm,,0k := Pm(TH ) × Pk0 (FH ) .

The MsHHO method for Problem (2.2) reads as follows: Find uH  UHm,,0k such that

(4.6)

(ArK (uK ), rK (vK ))K =

(fK , vK )K  vH  UHm,,0k .

K TH

K TH

The approximate MsHHO solution uhHho  U m,k(TH ) is then defined by:

(4.7)

uhHh|oK := rK (uK ) K  TH .

The existence and uniqueness of uH  UHm,,0k solution to (4.6) is established in [12, Lemma 5.3] in the case m = k - 1 for k  1, but the arguments directly extend to a generic m  N. Moreover, it is easy to see that the function uhHho defined in (4.7) actually sits in H01,k(TH ). Indeed, owing to (4.4b), for any interface F  FHint such that F  K+  K-, one has for all q  Pk(F ),
( uhHho F , q)F = (rK+ (uK+ ) (nK+,F · nF ), q)F + (rK- (uK- ) (nK-,F · nF ), q)F
= (uFK+ (nK+,F · nF ), q)F + (uFK- (nK-,F · nF ), q)F
= (uF (nK+,F · nF ), q)F + (uF (nK-,F · nF ), q)F = 0 .

For boundary faces, one uses again (4.4b) along with the fact that uH  UHm,,0k. A crucial observation made in [12, Remark 5.4] is that the MsHHO method can be equivalently reformulated as follows: Find uhHho  U m,k(TH )  H01,k(TH ) such that

(4.8)

(AH uhHho, H vH ) = (m H (f ), vH )  vH  U m,k(TH )  H01,k(TH ) ,

where, for any K  TH , m H (f )|K := m K (fK ).

Lemma 4.1 (Characterization of the MsHHO solution). Let uhHho solve (4.8). Then, (i) uhHho  U m,k(TH )  H01,k(TH ); (ii) uhHho  V(TH ; div, ) and - · (AH uhHho) = m H (f ) in .

8

BRIDGING THE MHM AND MSHHO METHODS

Proof. We have already shown above that uhHho  U m,k(TH )  H01,k(TH ). Let us now show that AH uhHho  H(div, ). Since uhHho  U m,k(TH ), we already know that  · (AH uhHho)|K  Pm(K)  L2(K) and AH uhHho |K · nK  Pk(FK ) for all K  TH . Moreover, owing to (4.6), (4.7), and the definition (4.2), we infer that

(4.9) -

( · (AH uhHho), vK )K +

( AH uhHho F · nF , vF )F =

(m K (fK ), vK )K ,

K TH

F FHint

K TH

for all vK  Pm(K) and all K  TH , and for all vF  Pk(F ) and all F  FHint (notice that we have used that vF = 0 for all F  FHbnd for vH  UHm,,0k). This readily implies that

- · (AH uhHho)|K = m K (fK ) for all K  TH ,

and that AH uhHho F · nF = 0 for all F  FHint .
It follows that AH uhHho  H(div, ) and that - · (AH uhHho) = m H (f ) in .

5. Main equivalence result and further comments

The following result, which is a consequence of Lemma 3.1, Lemma 3.2, and Lemma 4.1, summarizes our main result on the equivalence between the MHM and MsHHO methods.

Theorem 5.1 (Equivalence between MHM and MsHHO). Let m, k  N. The following holds true: (i) Let umHhm be the (original, semi-explicit) MHM solution defined by (3.11) using k  0. Let uhHho be the MsHHO solution solving (4.8) using m, k  0. Then, umHhm = uhHho if f  Pm(TH ). (ii) Let umHhm be the (fully explicit) MHM solution defined by (3.14) using m, k  0. Let uhHho be the MsHHO solution solving (4.8) using m, k  0. Then, umHhm = uhHho for all f  L2().
We now collect several remarks providing further insight into the above equivalence result.

Remark 5.2 (Comparison of heuristic viewpoints). Using the infinite-dimensional spaces introduced in Section 2.3, it is possible to sketch the two complementary visions behind the MHM and MsHHO methods. In the MHM method, the general thread is to search for the exact solution among the members of the affine functional space

{u  V(TH ; div, ) : - · (AH u) = f in } ,

and to enforce that u  H01() by requiring that

µ, u TH = 0 for all µ  (TH ) .

In the MsHHO method, the general thread is to search for the exact solution among the members of the affine functional space

u  H01() : - · (AuK ) = fK in K  K  TH ,

and to enforce that u  V(TH ; div, ) by requiring that

Au · n, z TH = 0 for all z  0(TH ) .

Remark 5.3 (Modification of the right-hand side). It is observed in [12, Remark 5.8] that a

variant of the MsHHO method is obtained by searching uhHho  U m,k(TH )  H01,k(TH ) such that

(5.1)

(AH uhHho, H vH ) = (f, vH )  vH  U m,k(TH )  H01,k(TH ) .

One advantage of (5.1) is that the source term f is now seen through its L2-orthogonal projection

onto U m,k(TH ) instead of its projection onto the smaller space Pm(TH ) as in (4.8). However,
if uhHho solves (5.1), AH uhHho slightly departs from H(div, ), i.e., we no longer have uhHho  V(TH ; div, ) as for the solution to (4.8). This modified MsHHO solution can be bridged to the fully explicit MHM solution obtained by approximating the lifting T s by the operator THs : L2()  U m,k(TH ) such that, for all g  L2(), THs (g)  U m,k(TH ) solves

(AH THs (g), H v) = (g, v),

v  U m,k(TH ) .

BRIDGING THE MHM AND MSHHO METHODS

9

Indeed, the modified MsHHO solution solving (5.1) coincides with the fully explicit MHM solution

umHhm := u0H + T n(H ) + THs (f ) , where (u0H , H )  P0(TH ) × k(TH ) now solve
H , vH0 TH = -(f, vH0 ) µH , u0H TH + µH , T n(H ) TH = - µH , THs (f ) Th

vH0  P0(TH ) , µH  k(TH ) .

Remark 5.4 (Variant with no cell unknowns (case m = -1)). It is possible to consider the case
m = -1 in the above MHM and MsHHO settings, leading to a MsHHO formulation without cell unknowns. The spaces U m,q(K) and U m,q(TH ) can still be defined by (2.19) when m = -1, with the convention that P-1(K) := {0}. The fully explicit MHM method is still defined as in Section 3. An important modification in the analysis is that the last statement in Lemma 3.2 now becomes - · (AH umHhm) = 0H (f ) in . Notice also that (3.14) becomes umHhm = u0H + T n(H ) and that the right-hand side of (3.15b) is zero. Actually, since T s(cH ) = 0 for any cH  P0(TH ) owing to (3.4b), we infer that the (fully explicit) MHM method for m = -1 coincides with the (fully
explicit) MHM method for m = 0. Concerning the MsHHO method, the variant (5.1) has to be
adopted in the case m = -1. Finally, we observe that in the case m = -1, the MHM and MsHHO solutions do not coincide.

6. Unified convergence analysis
We derive, in a unified fashion, an energy-norm error estimate that is valid for both the (fully explicit) MHM and MsHHO methods.

6.1. Setting. Let TH be a given (coarse) polytopal mesh of the domain  in the sense of Section 2.2. Since we are interested in deriving a quantitative estimate on the discretization error
for the MHM/MsHHO methods, we need to define a measure of regularity for the mesh at hand.
To do so, and as classical in the HHO context, we assume that the mesh TH admits a matching simplicial submesh SH , and that there exists some real parameter 0 < H < 1 such that, for all K  TH , and all T  SH such that T  K, (i) H HT  RT where RT denotes the inradius of the simplex T , and (ii) H HK  HT . The parameter H measures the regularity of the mesh TH . When studying a convergence process in which the meshes of some given sequence (TH )HH are successively refined, we shall assume that the mesh sequence (TH )HH is uniformly regular, in the sense that there exists 0 <  < 1 such that, for all H  H,   H . Standard local Poincar´e­Steklov and (continuous) trace and inverse inequalities, as well as (optimal) approximation properties for local L2-orthogonal projectors, then hold on each cell K  TH for any H  H, with multiplicative constants only depending on . In what follows, we use the symbol to denote
an inequality that is valid up to a multiplicative constant only depending on the discretization
through the parameter .
In order to track the dependency of the error estimates with respect to the diffusion coefficient,
for any K  TH , we denote by a,K > 0 the local smallest eigenvalue of the coefficient A in the cell K, in such a way that A(x) ·   a,K||2 for all   Rd and almost every x  K.
Finally, given any measurable set D  , and any integer s  0, we respectively denote by | · |s,D and · s,D the standard seminorm and norm in Hs(D; R), for   {1, d}. We also define Hs(TH ; R) as the space of piecewise R-valued Hs functions on the partition TH , with the convention that Hs(TH ; R) is simply noted Hs(TH ).

6.2. Local approximation. Let m, k  N be given. Let K  TH , and recall the definition (2.19) of the space U m,k(K).

Lemma 6.1 (Approximation in Um,k(K)). Let v  H1(K), and set g := - · (Av) in K. Assume that g  Hm+1(K) and that Av  Hk+1(K; Rd). There exists Km,k(v)  U m,k(K) such that

(6.1)

A1/2 v - Km,k(v) 0,K a-,K1/2 HKm+2|g|m+1,K + HKk+1|Av|k+1,K .

10

BRIDGING THE MHM AND MSHHO METHODS

Proof. Define Km,k(v)  U m,k(K) such that

(6.2) -  · (AKm,k(v)) = m K (g) in K,

AKm,k(v) · nK = kFK (Av · nK ) on K.

Since g = - · (Av), we easily check that (m K (g), 1)K + (kFK (Av · nK ), 1)K = 0; hence, the data of the Neumann problem (6.2) are compatible, and Km,k(v) is well-defined (up to an additive constant). Multiplying (6.2) by w  H1(K), integrating by parts, and using the compatibility of the data, yields

(6.3)

(AKm,k(v), w)K = (m K (g), w)K + (kFK (Av · nK ), w)K = (m K (g), w - 0K (w))K + (kFK (Av · nK ), w - 0K (w))K .

By definition of g, we also have

(6.4)

(Av, w)K = (g, w)K + (Av · nK , w)K = (g, w - 0K (w))K + (Av · nK , w - 0K (w))K .

Subtracting (6.3) to (6.4), we obtain, for any w  H1(K),

(6.5) (A v - Km,k(v) , w)K = (g - m K (g), w - 0K (w))K + (Av · nK - kFK (Av · nK ), w - 0K (w))K .
Applying the Cauchy­Schwarz inequality together with a local Poincar´e­Steklov inequality for the first term in the right-hand side of (6.5), and the Cauchy­Schwarz inequality combined with a (continuous) trace inequality and a local Poincar´e­Steklov inequality for the second, we infer

(6.6) (A v - Km,k(v) , w)K

g - m K (g) 0,K HK |w|1,K + Av - kFK (Av) 0,K HK1/2|w|1,K ,

where we have also used the fact that kFK (Av · nK ) = kFK (Av) · nK since the mesh faces are planar, combined with the fact that nK is unitary, to handle the boundary term. By definition of L2-orthogonal projectors, we have

(6.7)

Av - kFK (Av)

0,K

= min
pPk(FK ;Rd)

Av - p 0,K 

Av - kK (Av) 0,K.

By standard approximation properties of L2-orthogonal projectors, we finally obtain from (6.6) and (6.7),

sup (A
wH 1 (K )\{0}

v - Km,k(v) |w|1,K

, w)K

HKm+2|g|m+1,K + HKk+1|Av|k+1,K .

The conclusion follows choosing w = v - Km,k(v), and since |w|21,K  a-,K1

A1/2 w

2 0,K

.

Remark 6.2 (Case m = -1). Recall that P-1(K) := {0}. The result of Lemma 6.1 remains valid as it is in the case m = -1 (for g  L2(K)). The proof needs just be slightly adapted with respect to the general case m  0. The interpolant -1,k(v)  U -1,k(K) is defined as follows:

- · (AK-1,k(v)) = 0 in K,

AK-1,k(v) · nK

=

kFK (Av

· nK) +

1 |K

|

(g,

1)K

on K.

The identity (6.5) becomes

(A

v - K-1,k(v)

, w)K

= (g, w - 0K (w))K

-

1 |K

|

(g

,

1)K

(w

-

0K

(w),

1)K

+ (Av · nK - kFK (Av · nK ), w - 0K (w))K .

The

conclusion

then

follows

from

the

same

arguments,

using

in

addition

that

|K| |K|

HK under

our mesh regularity assumptions to handle the second term in the first line of the right-hand side.

BRIDGING THE MHM AND MSHHO METHODS

11

6.3. Energy-norm error estimate. Let m, k  N be given. We introduce, for any K  TH , the (local, canonical) interpolation operator IK : H1(K)  Um,k(K) associated with the finite
element (4.3) such that IK := rK  K. Using the definition (4.2) of the reconstruction operator, as well as the definition of the reduction operator K , we infer that, for any v  H1(K),

(6.8a)

(AIK (v), w)K = (Av, w)K w  U m,k(K) ,

(6.8b)

(IK (v), 1)K = (v, 1)K .

Hence, IK (v)  U m,k(K) is the (A-weighted) elliptic projection of v  H1(K) onto U m,k(K). As such, we have

(6.9)

A1/2 v - IK (v) 0,K = min

A1/2 v - w) 0,K .

wU m,k(K)

Theorem 6.3 (Energy-norm error estimate). Recall that u  H01() is the unique solution to (2.2). Let uH  U m,k(TH )  H01,k(TH ) denote either the (fully explicit) MHM solution (3.14) to Problem (3.15), or the MsHHO solution (4.7) to Problem (4.6). Assume that f  Hm+1(TH ) and that Au  Hk+1(TH ; Rd). Then, we have

1/2

(6.10) A1/2H u - uH 0,

a-,K1 HK2(m+2)|f |2m+1,K + HK2(k+1)|Au|2k+1,K

.

K TH

Proof. First, by Theorem 5.1, we know that the fully explicit MHM and MsHHO solutions coincide for all f  L2(). We here consider the characterization (4.8) of uH. Let IH : H1(TH )  U m,k(TH ) denote the global interpolation operator such that, for all v  H1(TH ), IH (v)|K :=
IK (vK ) for all K  TH . Remark that, since u  H01(), IH (u)  U m,k(TH )  H01,k(TH ). By the triangle inequality, we split the discretization error as follows:

(6.11)

A1/2H u - uH 0,  A1/2H u - IH (u) 0, + A1/2H IH (u) - uH 0,.

The first term in the right-hand side of (6.11) is an approximation error, and is estimated using the optimality property (6.9) combined with the local approximation properties in Um,k(TH ) of Lemma 6.1. Letting, for all v  H1(TH ), Hm,k(v)  U m,k(TH ) be the global interpolate such that Hm,k(v)|K = Km,k(vK ) for all K  TH , we infer

A1/2H u - IH (u) 0, =

min

A1/2H u - wH 0,

wH U m,k(TH )

(6.12)

 A1/2H u - Hm,k(u) 0,

1/2

a-,K1 HK2(m+2)|f |2m+1,K + HK2(k+1)|Au|2k+1,K

.

K TH

The second term in the right-hand side of (6.11) is the consistency error of the method, which satisfies, since IH (u) - uH  U0m,k(TH ) := U m,k(TH )  H01,k(TH ),

(6.13)

A1/2H IH (u) - uH

0, =

max

(AH IH (u) - uH , H vH ).

vH U0m,k(TH ),

A1/2H vH 0,=1

Let vH  U0m,k(TH ) such that A1/2H vH 0, = 1. Since uH solves (4.8), we infer

(6.14) (AH IH (u) - uH , H vH ) = (AH IH (u), H vH ) - (m H (f ), vH )
= (AH IH (u), H vH ) + ( · (Au), vH ) + (f - m H (f ), vH )

= (AH IH (u) - u , H vH ) +

(AuK · nK,F , vK )F

+ (f - m H (f ), vH )

KTH F FK

=

(Au · nF , vH F )F + (f - m H (f ), vH ) =: T1 + T2 ,

F FH

12

BRIDGING THE MHM AND MSHHO METHODS

where we have added/subtracted (f, vH ) and used that f = - · (Au) in  to pass from the first to the second line, we have performed cell-by-cell integration by parts to pass from the second
to the third line, and finally used the local orthogonality property (6.8a) as well as the fact that Au F ·nF = 0 for all F  FHint as a consequence of the fact that Au  H(div, )H1(TH ; Rd) to pass from the third to the fourth line. To estimate T1, we remark that, since vH  H01,k(TH ), kF ( vH F ) = 0 for all F  FH . We thus have

T1 =

(Au · nF - kF (Au · nF ), vH - 0F (vH ) F )F

F FH

=

( AuK - kF (AuK ) · nK,F , vK - 0F (vK ))F .

KTH F FK

By two successive applications of the Cauchy­Schwarz inequality, we infer

1/2

1/2

T1 

a-,K1 HK

AuK - kFK (AuK)

2 0,K

K TH

a,K HK-1

vK - 0FK (vK )

2 0,K

.

K TH

The first factor in the right-hand side is estimated using (6.7) and standard approximation properties of L2-orthogonal projectors. The second factor is estimated by adding/subtracting 0K (vK ), using a triangle inequality combined with the L2(K)-stability of 0FK , and concluding by the use of a (continuous) trace inequality combined with a local Poincar´e­Steklov inequality. We obtain

1/2

1/2

T1

a-,K1 HK2(k+1)|Au|2k+1,K

a,K |vK |21,K

.

K TH

K TH

Recalling that

A1/2H vH 0, = 1, and since a,K |vK |21,K 

A1/2vK

2 0,K

,

we

finally

infer

that

(6.15)

1/2

T1

a-,K1 HK2(k+1)|Au|2k+1,K

.

K TH

The term T2 is, in turn, easily estimated upon writing

T2 = (f - m H (f ), vH - 0H (vH )),

and invoking the Cauchy­Schwarz inequality, a local Poincar´e­Steklov inequality, and standard approximation properties of L2-orthogonal projectors to conclude. We obtain

(6.16)

1/2

1/2

T2

a-,K1 HK2(m+2)|f |2m+1,K

K TH

a,K |vK |21,K
K TH

1/2

a-,K1 HK2(m+2)|f |2m+1,K

,

K TH

where we used again that A1/2H vH 0, = 1 to pass from the first to the second line. Finally, plugging (6.15)-(6.16)-(6.14)-(6.13) and (6.12) into (6.11) proves (6.10).

Remark 6.4 (Case m = -1). We know from Remark 5.4 that the (fully explicit) MHM method for m = -1 coincides with the (fully explicit) MHM method for m = 0. As far as the MsHHO method is concerned, in the case m = -1, one adopts the variant (5.1) of the method, and the a priori estimate of Theorem 6.3 remains valid as it is (for f  L2()). The proof actually simplifies with respect to the general case m  0, since the term T2 can be discarded. The conclusion follows from Lemma 6.1 and Remark 6.2.
Remark 6.5 (Case m = k - 1). In the case m = k - 1, the result (6.10) (see Remark 6.4 for the case k = 0 and m = -1) simplifies since |f |k,K  d |Au|k+1,K for all K  TH . Under the sole

BRIDGING THE MHM AND MSHHO METHODS

13

assumption that Au  Hk+1(TH ; Rd), we have

A1/2H u - uH 0,

1/2

a-,K1 HK2(k+1)|Au|2k+1,K

.

K TH

In the MHM setting, when k = 0 (then one can discard the contribution given by the operator T s), we obtain an optimal error estimate under the sole assumption on the source term that f  L2(),
which improves on [4, Corollary 4.2] where more regularity is needed.

Remark 6.6 (Link with previous results). In the MHM framework, the error estimate of Theorem 6.3 is a refined version of [4, Theorem 4.1] (for the original, semi-explicit MHM method), both in terms of regularity assumptions and in terms of tracking of the dependency of the multiplicative constants with respect to the diffusion coefficient. In the MsHHO framework, such an error estimate is new, and is complementary to the homogenization-based error estimate of [12, Theorem 5.6] (such a homogenization-based analysis is also available in the MHM setting; cf. [38]). The a priori estimate of [12, Theorem 5.6] is robust in highly oscillatory diffusion regimes but is suboptimal for mildly varying diffusion. The present result fills this gap.

7. Basis functions and solution strategies

We address the decomposition of the MHM and MsHHO solutions in terms of multiscale basis functions and highlight the impact of such a decomposition on the possible organization of the computations using an offline-online strategy. Let k  1 be a given integer. In what follows, to keep the presentation simple, we consider for a polynomial degree k on the faces the polynomial degree m := k - 1  0 in the cell, so that we can simply write U k(K) in lieu of U k-1,k(K) for all K  TH . The key observation is that there are two possible constructions of basis functions for the local space Uk(K). Both sets of basis functions are composed of cell-based and face-based functions. The construction of the two sets is however different. The first construction, referred to as primal set, will prove to be relevant for the MHM method, whereas the second construction, referred to as dual set, will prove to be relevant for the MsHHO method.

7.1. Basis functions.

7.1.1. Polynomial basis functions. Let q  N. We denote by nql the dimension of the vector space of l-variate polynomial functions of total degree up to q. For any cell K  TH , let {iq,K }1inqd be a basis of Pq(K), and for any face F  FH , let {jq,F }1jnqd-1 be a basis of Pq(F ). With the choice we have made of degree q := k - 1 in the cell and degree q := k on the faces, we henceforth
drop the corresponding superscripts in the polynomial basis functions to alleviate the notation. For convenience, we assume that 1K  1; this assumption will be useful in the MHM setting.

7.1.2. Primal basis functions. For K  TH , we locally construct the set of primal basis functions for U k(K). Regarding the cell-based basis functions, we set p1,K  1, and for all 2  i  ndk-1, we define pi ,K as the unique function in H1(K) solving the following well-posed Neumann problem:

(7.1)

- · (Api ,K) = iK - 0K (iK ) in K , Api ,K · nK = 0 on K .

Concerning the face-based basis functions, for all F  FK and all 1  j  nkd-1, we define pF,,Kj

as the unique function in H1(K) solving the following well-posed Neumann problem:



(7.2)

- · (ApF,,Kj )

=

-

1 |K

|

(jF

,

1)F

in

K,

 ApF,,Kj · nK,F = jF on F and ApF,,Kj · nK, = 0 on   FK \ {F } .

Then, for all v  Uk(K), setting

(i) - · (Av) := gK = gK,1 +

nkd-1 i=2

gK,iiK



Pk-1 (K )

(recall

that

1K



1) ,

14

BRIDGING THE MHM AND MSHHO METHODS

(ii) Av |K · nK := µFK  Pk(FK ) with µFK|F = (iii) 0K (v) := vK0  P0(K) ,
with (gK , 1)K + (µFK , 1)K = 0, we have

nkd-1 j=1

µF,j jF

for all

F

 FK ,

(7.3)

v = vK0 +

nkd-1

ndk-1

µF,j pF,,Kj +

gK,ipi ,K .

F FK j=1

i=2

A set of global basis functions for the space Uk(TH )  V(TH ; div, ) is given by

{pi ,K }KTH ,1inkd-1  {pj ,F }F FH ,1jnkd-1 ,

where for each K  TH ,

(7.4)

pi ,K |K = pi ,K and pi ,K |\K = 0 ,

for each interface F  K+  K-,

(7.5)

pj ,F |K± = (nK±,F · nF )Fp,,Kj ± and pj ,F |\K+K- = 0 ,

and for each boundary face F  K  ,

(7.6)

pj ,F |K = pF,,Kj and pj ,F |\K = 0 .

Remark 7.1 (Link to lifting operators). Recall the local lifting operators TKn , TKs and their global counterparts T n, T s introduced in Section 3. For all K  TH , one readily verifies that

(7.7)

pi ,K = TKs (iK ),

pF,,Kj = TKn (EFK (jF )),

where the first identity holds for all 2  i  ndk-1 and the second identity holds for all F  FK and all 1  j  nkd-1, where EFK denotes the zero-extension operator from F to K. For the global basis functions, we have

(7.8)

pi ,K = T s(EK (iK )),

pj ,F = T n(EFTH (jF )),

where EK denotes the zero-extension operator from K to , and EFTH (jF ) |K := EFK (jF (nK,F · nF )) if F  FK and EFTH (jF ) |K := 0 otherwise, for all K  TH .

Remark 7.2 (Energy minimization). Consider the local energy functional JK : H1(K)  R+

such

that





1 2

(A,

)K

.

Then,

one

can

characterize

pi ,K

for

all

2



i



ndk-1

as

follows:

(7.9)

pi ,K

=

arg min
H 1 (K )

JK () -

iK - 0K (iK ),  K

,

and one can characterize pF,,Kj for all F  FK and all 1  j  nkd-1 as follows:

(7.10)

pF,,Kj

=

arg min
H 1 (K )

JK ()

-

(jF , )F

+

1 |K

|

(jF

,

1)F

(,

1)K

,

where we recall that H1(K) := v  H1(K) : (v, 1)K = 0 .

7.1.3. Dual basis functions. For K  TH , we locally construct the set of dual basis functions for Uk(K). For this purpose, we rely on the fact that the triple (K, Uk(K), K) is a finite element (see (4.3)). For all 1  i  ndk-1, the cell-based basis functions id,K  U k(K) are obtained by requiring that

(7.11)

Kk-1(di ,K ) = iK , kFK (di ,K ) = 0 ,

that is, we have di ,K := rK ((iK , 0)). Moreover, for all F  FK and all 1  j  nkd-1, the face-based basis functions dF,,Kj  U k(K) are obtained by requiring that

(7.12)

Kk-1(dF,,Kj ) = 0, kF (dF,,Kj ) = jF , k(dF,,Kj ) = 0 for all   FK \ {F } ,

that is, we have dF,,Kj := rK ((0, EFK (jF ))). Then, for all v  U k(K), setting

(i) Kk-1(v) := vK =

nkd-1 i=1

vK,iiK



Pk-1 (K ),

BRIDGING THE MHM AND MSHHO METHODS

15

(ii) kFK (v) := vFK  Pk(FK ) with vFK|F = we have

nkd-1 j=1

vF,j jF

for all F

 FK,

(7.13)

nkd-1

v=

vK,idi ,K +

nkd-1
vF,j dF,,Kj .

i=1

F FK j=1

Notice that we also have v = rK (vK ) where vK := (vK , vFK )  UKk . A set of global basis functions for the space U k(TH )  H01,k(TH ) is given by

(7.14)

{di ,K }KTH ,1inkd-1  {dj ,F }F FHint,1jnkd-1 ,

where for each K  TH ,

(7.15)

di ,K |K = di ,K and di ,K |\K = 0 ,

and for each interface F  K+  K-,

(7.16)

dj ,F |K± = Fd,,Kj ± and dj ,F |\K+K- = 0 .

Remark 7.3 (Energy minimization). Recall the local energy functional JK defined in Remark 7.2. Then, one can characterize di ,K for all 1  i  ndk-1 as follows:

(7.17)

di ,K

:=

arg min
HiK

JK () ,

where HiK := v  HK : Kk-1(v) = iK is a nonempty, convex, closed subset of the Hilbert space HK := v  H1(K) : kFK (v) = 0 . This means that di ,K  H1(K) is obtained by solving the following saddle-point problem with dual unknowns iK  Pk-1(K) and µi K  Pk(FK ) such that (iK , 1)K + (µi K , 1)K = 0:

(7.18)

-  · (Adi ,K ) = iK in K , Adi ,K · nK = µi K on K , Kk-1(di ,K ) = iK , kFK (di ,K ) = 0 .

Similarly, one can characterize dF,,Kj for all F  FK and all 1  j  nkd-1 as follows:

(7.19)

dF,,Kj

:=

arg min
HFK,j

JK () ,

where HFK,j := v  HFK : kF (v) = jF is a nonempty, convex, closed subset of the Hilbert space HFK := v  H1(K) : Kk-1(v) = 0 and k(v) = 0    FK \ {F } . This means that dF,,Kj  H1(K) is obtained by solving the following saddle-point problem with dual unknowns FK,j  Pk-1(K) and µFK,j  Pk(FK ) such that (FK,j , 1)K + (µFK,j , 1)K = 0:

(7.20)

-  · (AdF,,Kj ) = FK,j in K, AdF,,Kj · nK = µFK,j on K , Kk-1(dF,,Kj ) = 0, kF (dF,,Kj ) = jF , k(dF,,Kj ) = 0 for all   FK \ {F } .

7.2. Offline-online strategy. In view of Section 7.1, primal basis functions, as they globally span Uk(TH )  V(TH ; div, ), appear to be naturally suited to the MHM framework. On the other hand, dual basis functions, as they globally span U k(TH )  H01,k(TH ), appear to be naturally suited to the MsHHO framework (cf. Remark 5.2). In this section, we detail how the MHM and
MsHHO computations can be optimally organized using an offline-online strategy. This type of
organization of the computations is particularly relevant in a multi-query context, in which the
solution has to be computed for a large amount of data, so that it is crucial to pre-process as
many data-independent quantities as possible in an offline stage, while keeping the size of the
online system to its minimum. We focus in the sequel on the situation where many instances of
the source term f are considered (we could also consider the case of multiple boundary data).

16

BRIDGING THE MHM AND MSHHO METHODS

7.2.1. The MHM case. By Remark 7.1, the (fully explicit) MHM solution umHhm  U k(TH )  V(TH ; div, ) defined by (3.14) with m := k - 1, where the pair (u0H , H )  P0(TH ) × k(TH ) solves (3.15), writes

(7.21)

umHhm =

u0K p1,K +

nkd-1
F,j pj ,F +

nkd-1
fK,ipi ,K ,

K TH

F FH j=1

KTH i=2

where u0K := u0H|K = 0K (umHhm) for any K  TH , F,j is defined, for any F  FH , as the jth
coefficient of H|F on the basis {jF }1jnkd-1 , and fK,i stands for the ith coefficient of Kk-1(fK ) on the basis {iK }1inkd-1 . This motivates the following offline-online decomposition of the computations:

Offline stage: For each K  TH :

(1) Compute the basis functions pi ,K from (7.1), for all i = 2, . . . , ndk-1; (2) Compute the basis functions pF,,Kj from (7.2), for all F  FK and all j = 1, . . . , nkd-1. Online stage:

(3)

Compute

the

vector

(fK,i

)i=1,...,nkd-1
K TH

by solving the local symmetric positive-definite (SPD)

systems

nkd-1
fK,i(iK , jK )K = (fK , jK )K ,

i=1

for all j = 1, . . . , ndk-1, and all K  TH ;

(4) Compute the vectors

u0K

K TH

and

(F,j

)j=1,...,nkd-1
F FH

by solving the

global saddle-point

problem

nkd-1
F,j (jF , 1)F = -(fK , 1)K ,

F FK j=1

for all K  TH , and (recall that p1,K  1 and that (pF,K,j , 1)K = 0)

u0K (jF , 1)F  +

nkd-1
F,j (jF , pj|,KF )F  = -

ndk-1
fK,i(iK , pF,K,j )K ,

KTF 

KTF  F FK j=1

KTF  i=2

for all j = 1, . . . , nkd-1, and all F   FH with TF  := {K+, K-} if F   FHint and TF  := {K} if F   FHbnd; (5) Form umHhm using (7.21).

Remark 7.4 (Mono-query case). In a mono-query scenario, in which the solution to the dis-
crete problem is only needed for one (or a few) source term(s), one can advantageously consider
an amended version of (7.21), where the last term in the decomposition is simply replaced by T s(Hk-1(f )). From a practical point of view, the step (1) above can be bypassed, and replaced by solving, inbetween steps (3) and (4), Problem (7.1) for all K  TH with right-hand side Kk-1(fK ) (in lieu of iK ), whose solution is precisely TKs (Kk-1(fK )).

7.2.2. The MsHHO case. The solution uhHho  U k(TH )  H01,k(TH ) to Problem (4.8) writes

(7.22)

uhHho =

nkd-1
uK,idi ,K +

nkd-1
uF,j dj ,F ,

KTH i=1

F FHint j=1

where uK,i is defined as the ith coefficient of uK := Kk-1(uhHho) on the basis {iK }1inkd-1 for any K  TH , and uF,j as the jth coefficient of uF := kF (uhHho) on the basis {jF }1jnkd-1 for any F  FHint (recall that kF (uhHho) = 0 for all F  FHbnd). This, combined with the equivalent

BRIDGING THE MHM AND MSHHO METHODS

17

formulation (4.9) of the MsHHO method, and Remark 7.3 (recall, in particular, the notation introduced therein), motivates the following offline-online decomposition of the computations:

Offline stage: For each K  TH :

(1) Compute the basis functions di ,K from (7.18), for all i = 1, . . . , ndk-1; (2) Compute the basis functions dF,,Kj from (7.20), for all F  FK and all j = 1, . . . , nkd-1; Define
· the ndk-1×ndk-1 matrix GKK, whose column 1  i  ndk-1 is formed by the ndk-1 coefficients of the decomposition of iK  Pk-1(K) on the basis {iK }1inkd-1 ;
· for each F  FK , the ndk-1 × nkd-1 matrix GKF , whose column 1  j  nkd-1 is formed by the ndk-1 coefficients of the decomposition of FK,j  Pk-1(K) on the basis {iK}1inkd-1 ;
· for each F  FK, the nkd-1 × ndk-1 matrix MF K , whose column 1  i  ndk-1 is formed by the nkd-1 coefficients of the decomposition of µi|KF  Pk(F ) on the basis {jF }1jnkd-1 ;
· for each F, F   FK, the nkd-1 × nkd-1 matrix MF F , whose column 1  j  nkd-1 is formed by the nkd-1 coefficients of the decomposition of µFK,j|F   Pk(F ) on the basis {jF  }1jnkd-1 ;
(3) Invert the matrix GKK .

Online stage:

(4)

Compute

the

vectors

(f K )KTH

:=

(fK,i

)i=1,...,nkd-1
K TH

by

solving

the

local

SPD

systems

nkd-1
fK,i(iK , jK )K = (fK , jK )K ,
i=1

for all j = 1, . . . , ndk-1, and all K  TH ;

(5)

Compute the

vectors (uF )F FHint

:=

(uF,j

)j=1,...,nkd-1
F FHint

by solving the global SPD problem

MF F - MF K [GKK ]-1GKF uF = -

MF K [GKK ]-1f K ,

KTF  F FK FHint

KTF 

for all F   FHint;

(6)

Reconstruct

locally

the

vectors

(uK )KTH

:=

(uK,i

)i=1,...,ndk-1
K TH

:

for

all

K

 TH ,

uK = [GKK ]-1 f K -

GKF uF ;

F FK FHint

(7) Form uhHho using (7.22).

Remark 7.5 (Purely face-based version). Using the (primal-dual) local set of basis functions for Uk(K), K  TH , introduced in [12, Section 4.1] (but not fully exploited therein), the MsHHO
method can be alternatively defined as a purely face-based method, i.e. without using cell unknowns.

To see this, let K  TH , and recall the local energy functional JK defined in Remark 7.2. Define Ki for all 1  i  ndk-1 as follows:

(7.23)

Ki

:=

arg min
HK

JK () - (iK , )K

,

where the space HK is defined in Remark 7.3. Equivalently, Ki  H1(K) is obtained by solving the following saddle-point problem with dual unknown µi K  Pk(FK ) such that (iK , 1)K + (µi K , 1)K = 0:

(7.24)

-  · (AKi ) = iK in K , kFK (Ki ) = 0 .

AKi · nK = µi K on K ,

18

BRIDGING THE MHM AND MSHHO METHODS

Similarly, define KF,j for all F  FK and all 1  j  nkd-1 as follows:

(7.25)

KF,j

:=

arg min
HFK,j

JK () ,

where HFK,j := v  HFK : kF (v) = jF as in Remark 7.3, but now we set HFK := v  H1(K) : k(v) = 0    FK \ {F } . Equivalently, KF,j  H1(K) is obtained by solving the following saddle-point problem with dual unknown µFK,j  Pk(FK ) such that (µFK,j , 1)K = 0:

(7.26)

-  · (AKF,j ) = 0 in K, AKF,j · nK = µFK,j on K , kF (KF,j ) = jF , k(KF,j ) = 0 for all   FK \ {F } .

For all v  Uk(K), setting

(i) - · (Av) := gK =

nkd-1 i=1

gK,iiK



Pk-1 (K ),

(ii) kFK (v) := vFK  Pk(FK ) with vFK|F =

nkd-1 j=1

vF,j jF

for

all

F

 FK ,

we then have

(7.27)

nkd-1

v=

gK,iKi +

nkd-1
vF,j KF,j .

i=1

F FK j=1

As we did for the dual set of basis functions in (7.14)­(7.15)­(7.16), we can easily construct a set of global basis functions {Ki }KTH,1inkd-1 {Fj }F FHint,1jnkd-1 for the space U k(TH )H01,k(TH ). The solution uhHho  U k(TH )  H01,k(TH ) to Problem (4.8) then writes

(7.28)

uhHho =

nkd-1
fK,iKi +

nkd-1
uF,jFj ,

KTH i=1

F FHint j=1

where fK,i is defined as the ith coefficient of Kk-1(fK ) on the basis {iK }1inkd-1 for any K  TH , and uF,j as the jth coefficient of uF := kF (uhHho) on the basis {jF }1jnkd-1 for any F  FHint. The new decomposition (7.28) leads to a simplification of the offline-online solution strategy. In the

offline stage, the static condensation step (3) can be bypassed. Also, the steps (1) and (2), which

consist in solving saddle-point problems of the form (7.24) and (7.26), are a bit less expensive than

before, as the number of Lagrange multipliers is decreased. In the online stage, the reconstruction

step (6) can be bypassed, and the global problem to solve in the step (5) simplifies to finding

(uF )F FHint

:=

(uF,j

)j=1,...,nkd-1
F FHint

such

that

(7.29)

MF F uF = -

MF K f K ,

KTF  F FK FHint

KTF 

for all F   FHint.

Remark 7.6 (Mono-query case). The purely face-based version of the MsHHO method is particu-
larly suited to the mono-query context. In that case, the step (1) can be bypassed, and replaced by solving, inbetween steps (4) and (5), Problem (7.24) for all K  TH with right-hand side Kk-1(fK ) (in lieu of iK ), whose solution is denoted KfK . Letting µfKK be the corresponding dual unknown, one must then replace in (7.29) the vector MF K f K by the vector µfKK,F   Rnkd-1 formed by the coefficients of the decomposition of µfKK|F   Pk(F ) on the basis {jF  }1jnkd-1 . The MsHHO solution in that context is finally given by

(7.30) in lieu of (7.28).

nkd-1

uhHho =

KfK +

uF,jFj ,

K TH

F FHint j=1

BRIDGING THE MHM AND MSHHO METHODS

19

7.2.3. Summary. The following table summarizes the main computational aspects, in a multiquery context, for both the (fully explicit) MHM and MsHHO methods based on Uk(TH ), k  1, in both the offline and online stages, so as to provide to the reader a one-glance comparison of the
two methods. For simplicity, we assume that all the mesh cells have the same number of faces,
denoted by n.

MHM offline local SPD systems

ndk-1 - 1 + nkd-1n problems per cell

online global saddle-point problem #TH + nkd-1#FH unknowns

MsHHO offline local saddle-point systems ndk-1 + nkd-1n problems per cell

online global SPD problem

nkd-1#FHint unknowns

Table 1. Comparison of MHM and MsHHO on the main computational aspects

The offline stage is of course performed once and for all, independently of the data (here, the source term). In practice, the approximation of the oscillatory basis functions solution to the local problems can be computationally costly, but the fact that all problems are local makes of the offline stage an embarassingly parallel task. The offline stage can hence naturally benefit from parallel architectures. In the online stage, the linear systems to solve (for the different data) only attach unknowns to the coarse mesh at hand, hence the computational burden remains limited.
Remark 7.7 (Other boundary conditions). The MHM and MsHHO methods easily adapt to the case of (nonhomogeneous) mixed Dirichlet­Neumann boundary conditions. If FHD  FHN forms a (disjoint) partition of FHbnd into, respectively, Dirichlet and Neumann boundary faces, then the size of the online linear systems in the MHM method becomes #TH + nkd-1#(FHint  FHD), whereas that for the MsHHO method becomes nkd-1#(FHint  FHN).
Remark 7.8 (Second-level discretization). We have shown that, under the idealized assumption that the local problems defining the multiscale basis functions are exactly solved, the MHM and MsHHO solutions satisfy AH uH  H(div, ). Since the local Neumann problems defining the multiscale basis functions feature polynomial data, we expect such a conformity to be inherited by the two-level method as soon as a mixed method is used to approximate the local second-level problems (on a fine submesh with mesh-size h  H). This is the approach pursued in [18], but not in [13] and [7] where a primal method is used instead.
Remark 7.9 (Strongly varying source terms). If one wants to be able to deal with strongly varying source terms in a multi-query context, a possibility is to replace the local space Pk-1(K) by a richer finite-dimensional space, for example Pk-1(Kh), where Kh denotes a mesh (of size h  h  H) of the coarse cell K (see also [35, Section 4] for a basis defined from element-wise generalized eigenvalue problems).
8. Conclusion
Although they originate from entirely different constructions, we have proved that the one-level (original) semi-explicit MHM and MsHHO methods provide the same numerical solution when the source term is piecewise polynomial on the (coarse) mesh, and this is also the case for the fully explicit MHM and MsHHO methods for any source term in L2(). As a byproduct, we have proposed a unified convergence analysis, as well as improved versions of the two methods. More precisely, we have introduced a version of the MHM method that is prompt to be used in a multi-query context, and a version of the MsHHO method that only uses face unknowns.
References
1. A. Abdulle, W. E, B. Engquist, and E. Vanden-Eijnden, The Heterogeneous Multiscale Method, Acta Numerica 21 (2012), 1­87.
2. G. Allaire and R. Brizzi, A multiscale finite element method for numerical homogenization, SIAM Multiscale Model. Simul. 4 (2005), no. 3, 790­812.

20

BRIDGING THE MHM AND MSHHO METHODS

3. R. Araya, G. R. Barrenechea, L. P. Franca, and F. Valentin, Stabilization arising from PGEM: a review and

further developments, Appl. Numer. Math. 59 (2009), no. 9, 2065­2081.

4. R. Araya, C. Harder, D. Paredes, and F. Valentin, Multiscale Hybrid-Mixed method, SIAM J. Numer. Anal. 51

(2013), no. 6, 3505­3531.

5. T. Arbogast and K. J. Boyd, Subgrid upscaling and mixed multiscale finite elements, SIAM J. Numer. Anal.

44 (2006), no. 3, 1150­1171.

6. I. Babuska and E. Osborn, Generalized finite element methods: Their performance and their relation to mixed

methods, SIAM J. Numer. Anal. 20 (1983), no. 3, 510­536.

7. G. R. Barrenechea, F. Jaillet, D. Paredes, and F. Valentin, The multiscale hybrid mixed method in general

polygonal meshes, Numer. Math. 145 (2020), 197­237.

8. F. Brezzi, M. O. Bristeau, L. P. Franca, M. Mallet, and G. Rog´e, A relationship between stabilized finite

element methods and the Galerkin method with bubble functions, Comput. Methods Appl. Mech. Engrg. 96

(1992), no. 1, 117­129.

9. F. Brezzi, L. P. Franca, T. J. R. Hughes, and A. Russo, b = g, Comput. Methods Appl. Mech. Engrg. 145

(1997), no. 3-4, 329­339.

10. F. Brezzi and A. Russo, Choosing bubbles for advection-diffusion problems, Math. Models Methods Appl. Sci.

4 (1994), no. 4, 571­587.

11. Z. Chen and T. Y. Hou, A mixed multiscale finite element method for elliptic problems with oscillating coeffi-

cients, Math. Comp. 72 (2002), no. 242, 541­576.

12. M. Cicuttin, A. Ern, and S. Lemaire, A Hybrid High-Order method for highly oscillatory elliptic problems,

Comput. Methods Appl. Math. 19 (2019), no. 4, 723­748.

13.

, On the implementation of a multiscale Hybrid High-Order method, Numerical Mathematics and

Advanced Applications--ENUMATH 2017, Lect. Notes Comput. Sci. Eng., vol. 126, Springer, Cham, 2019,

pp. 509­517.

14. D. Copeland, U. Langer, and D. Pusch, From the Boundary Element Domain Decomposition Methods to

Local Trefftz Finite Element Methods on Polyhedral Meshes, Domain Decomposition Methods in Science and

Engineering XVIII, Lect. Notes Comput. Sci. Eng., vol. 70, Springer, Berlin, 2009, pp. 315­322.

15. D. A. Di Pietro and A. Ern, A Hybrid High-Order locking-free method for linear elasticity on general meshes,

Comput. Methods Appl. Mech. Engrg. 283 (2015), 1­21.

16. D. A. Di Pietro, A. Ern, and S. Lemaire, An arbitrary-order and compact-stencil discretization of diffusion

on general meshes based on local reconstruction operators, Comput. Methods Appl. Math. 14 (2014), no. 4,

461­472.

17.

, A review of Hybrid High-Order methods: formulations, computational aspects, comparison with other

methods, Building Bridges: Connections and Challenges in Modern Approaches to Numerical Partial Differ-

ential Equations (G. R. Barrenechea, F. Brezzi, A. Cangiani, and E. H. Georgoulis, eds.), Lecture Notes in

Computational Science and Engineering, vol. 114, Springer, 2016, pp. 205­236.

18. O. Dura´n, P. R. B. Devloo, S. M. Gomes, and F. Valentin, A multiscale hybrid method for Darcy's problems

using mixed finite element local solvers, Comput. Methods Appl. Mech. Engrg. 354 (2019), 213­244.

19. W. E and B. Engquist, The Heterogeneous Multiscale Methods, Commun. Math. Sci. 1 (2003), no. 1, 87­132.

20. Y. Efendiev, J. Galvis, and T. Y. Hou, Generalized Multiscale Finite Element Methods (GMsFEM), J. Comput.

Phys. 251 (2013), 116­135.

21. Y. Efendiev and T. Y. Hou, Multiscale Finite Element Methods - Theory and Applications, Surveys and

Tutorials in the Applied Mathematical Sciences, vol. 4, Springer-Verlag, New York, 2009.

22. Y. Efendiev, T. Y. Hou, and X.-H. Wu, Convergence of a nonconforming multiscale finite element method,

SIAM J. Numer. Anal. 37 (2000), no. 3, 888­910.

23. Y. Efendiev, R. Lazarov, and K. Shi, A multiscale HDG method for second order elliptic equations. Part I:

Polynomial and homogenization-based multiscale spaces, SIAM J. Numer. Anal. 53 (2015), no. 1, 342­369.

24. R. Glowinski and M. F. Wheeler, Domain decomposition and mixed finite element methods for elliptic prob-

lems, First International Symposium on Domain Decomposition Methods for Partial Differential Equations

(Philadelphia) (R. Glowinski, G. H. Golub, G. A. Meurant, and J. P´eriaux, eds.), SIAM, 1988, pp. 144­172.

25. C. Harder, D. Paredes, and F. Valentin, A family of multiscale hybrid-mixed finite element methods for the

Darcy equation with rough coefficients, J. Comput. Phys. 245 (2013), 107­130.

26. C. Harder and F. Valentin, Foundations of the MHM method, Building Bridges: Connections and Challenges

in Modern Approaches to Numerical Partial Differential Equations (G. R. Barrenechea, F. Brezzi, A. Cangiani,

and E. H. Georgoulis, eds.), Lecture Notes in Computational Science and Engineering, Springer, 2016.

27. P. Henning and D. Peterseim, Oversampling for the multiscale finite element method, SIAM Multiscale Model.

Simul. 11 (2013), no. 4, 1149­1175.

28. T. Y. Hou and X.-H. Wu, A multiscale finite element method for elliptic problems in composite materials and

porous media, J. Comp. Physics 134 (1997), 169­189.

29. T. Y. Hou, X.-H. Wu, and Z. Cai, Convergence of a multiscale finite element method for elliptic problems with

rapidly oscillating coefficients, Math. Comp. 68 (1999), no. 227, 913­943.

30. T. Y. Hou, X.-H. Wu, and Y. Zhang, Removing the cell resonance error in the multiscale finite element method

via a Petrov-Galerkin formulation, Commun. Math. Sci. 2 (2004), no. 2, 185­205.

BRIDGING THE MHM AND MSHHO METHODS

21

31. T. J. R. Hughes, Multiscale phenomena: Green's functions, the Dirichlet-to-Neumann formulation, subgrid

scale models, bubbles and the origins of stabilized methods, Comput. Methods Appl. Mech. Engrg. 127 (1995),

387­401.

32. T. J. R. Hughes, G. R. Feij´o, L. M. Mazzei, and J.-B. Quincy, The variational multiscale method - a paradigm

for computational mechanics, Comput. Methods Appl. Mech. Engrg. 166 (1998), 3­24.

33. C. Le Bris, F. Legoll, and A. Lozinski, MsFEM `a la Crouzeix­Raviart for highly oscillatory elliptic problems,

Chinese Annals of Mathematics, Series B 34 (2013), no. 1, 113­138.

34.

, An MsFEM-type approach for perforated domains, SIAM Multiscale Model. Simul. 12 (2014), no. 3,

1046­1077.

35. A. L. Madureira and M. Sarkis, Hybrid localized spectral decomposition for multiscale problems, SIAM J. Numer.

Anal. 59 (2021), no. 2, 829­863.

36. A. M°alqvist and D. Peterseim, Localization of elliptic multiscale problems, Math. Comp. 83 (2014), no. 290,

2583­2603.

37. L. Mu, J. Wang, and X. Ye, A Weak Galerkin generalized multiscale finite element method, J. Comp. Appl.

Math. 305 (2016), 68­81.

38. D. Paredes, F. Valentin, and H. M. Versieux, On the robustness of Multiscale Hybrid-Mixed methods, Math.

Comp. 86 (2017), no. 304, 525­548.

39. P.-A. Raviart and J.-M. Thomas, Primal hybrid finite element methods for 2nd order elliptic equations, Math.

Comp. 31 (1977), no. 138, 391­413.

40. A. Toselli and O. Widlund, Domain Decomposition Methods - Algorithms and Theory, Springer Series in

Computational Mathematics, vol. 34, Springer-Verlag, Berlin, 2005.

41. S. Weißer, BEM-based Finite Element Approaches on Polytopal Meshes, Lect. Notes Comput. Sci. Eng., vol.

130, Springer, Cham, 2019.

42. M. F. Wheeler, G. Xue, and I. Yotov, A multiscale mortar multipoint flux mixed finite element method, Math.

Models Methods Appl. Sci. 46 (2012), 759­796.

