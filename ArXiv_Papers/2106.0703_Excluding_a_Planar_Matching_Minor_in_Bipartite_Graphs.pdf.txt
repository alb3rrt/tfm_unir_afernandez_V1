Excluding a Planar Matching Minor in Bipartite Graphs

Archontia C. Giannopoulou National and Kapodistrian University of Athens

Stephan Kreutzer Sebastian Wiederrecht§ Technische Universit¨at Berlin

arXiv:2106.00703v1 [math.CO] 1 Jun 2021

Matching minors are a specialisation of minors fit for the study of graph with perfect matchings. The notion of matching minors has been used to give a structural description of bipartite graphs on which the number of perfect matchings can be computed efficiently, based on a result of Little, by McCuaig et al. in 1999.
In this paper we generalise basic ideas from the graph minor series by Robertson and Seymour to the setting of bipartite graphs with perfect matchings. We introduce a version of Erdos-P´osa property for matching minors and find a direct link between this property and planarity. From this, it follows that a class of bipartite graphs with perfect matchings has bounded perfect matching width if and only if it excludes a planar matching minor. We also present algorithms for bipartite graphs of bounded perfect matching width for a matching version of the disjoint paths problem, matching minor containment, and for counting the number of perfect matchings. From our structural results, we obtain that recognising whether a bipartite graph G contains a fixed planar graph H as a matching minor, and that counting the number of perfect matchings of a bipartite graph that excludes a fixed planar graph as a matching minor are both polynomial time solvable. Keywords: Disjoint Paths, Matching Minor, Perfect Matching, Erdos-P´osa property, Counting Perfect Matchings, Digraphs, Butterfly Minor
1 Introduction
Graph minors are a generalisation of subgraphs which preserve, among other attributes, the topological properties of their host graph. In particular this means that a graph G embeds on a surface of genus g if and only if all of its minors do so. The classical theorem of Kuratowski and Wagner [Wag37, Kur30] uses this link between embeddability and the exclusion of certain minors by providing a compellingly short list of excluded minors which characterise exactly those graphs embeddable in the plane, namely K3,3 and K5. The fact that the number of excluded minors for this famous theorem is finite lead to the question whether this is just a coincidence, or if there is
This research has been supported by the ERC consolidator grant DISTRUCT-648527. archontia.giannopoulou@ gmail.com stephan.kreutzer@tu-berlin.de §sebastian.wiederrecht@gmail.com

1

a bigger rule behind it. This question became known as Wagner's Conjecture, which was made a theorem almost 70 years later by Robertson and Seymour as the final result of their Graph Minors Project [RS04]. The Graph Minors Project revealed several deep connections between graph compositions, excluded minors and graphs that embed on surfaces of bounded genus. In particular, the main tools and findings of the Graph Minors Project can be seen as a natural generalisation of Wagner's characterisation of K5-minor free graphs as those which can be built from planar graphs and a single non-planer graph W8 by means of small clique sums [Wag37]. Roughly speaking, the Graph Minors Project can be broken down into the following steps or tools:
i) The introduction of a complexity measure that describes the structure of a graph and allows to rapidly simplify graphs where the measure is small. In the Graph Minors Project this role is played by treewidth and the idea of tree-decompositions [Hal76, RS86a].
ii) A (rough) characterisation of minor closed classes of graphs where the complexity measure is small by linking the measure to a topological property. In the case of graph minors this was done in form of the Grid Theorem and the resulting corollary that any proper minor closed class of graphs has bounded treewidth if and only if it excludes a planar minor [RS86b].
iii) An extension of the second step to fully describe highly connected graphs where the complexity measure is large, but which exclude some non-planar minor [RS95, KTW20].
iv) Finally, a combination of all previous steps which results in a rough (but global) description of all graphs excluding a fixed minor [RS03, KTW20].
An equivalent formulation of Po´lya's Permanent Problem, the problem of recognising those 0-1-matrices whose permanent can be computed efficiently using a specific method, which is known as the bipartite Pfaffian Recognition Problem was shown in 1975 to correspond to the containment of K3,3 as a so called matching minor 1 in bipartite graphs with perfect matchings [Lit75]. A structural description of bipartite graphs excluding K3,3 as a matching minor was later found by Seymour et al. and McCuaig independently [RST99, McC04]. Interestingly, this description is somewhat similar to Wanger's Theorem on K5-minor free graphs in the following sense: The theorem states that every brace that excludes K3,3 as a matching minor can be created from planar braces and a single non-planar brace by means of a matching theoretic analogue of clique sums. Inspired by this observation, we pursue an extension of the Graph Minors Project to matching minors in bipartite graphs.
The project so far This paper is part of the larger project of extending the graph minors theory of Robertson and Seymour to bipartite graphs with perfect matchings. A matching theoretic analogue of treewidth, called perfect matching width, was introduced by Norine [Nor05]. Together with Hatzel and Rabinovich, the third author also derived a grid theorem for bipartite graphs with perfect matchings and perfect matching width from the related Directed Grid Theorem [HRW19a, HRW19b]. Roughly speaking, perfect matching width is a branch decomposition over the set of vertices of a graph and the weight of the edges of the corresponding cubic decomposition tree depends on
1A version of graph minors which also preserves the structure of perfect matchings in a graph. We give formal definitions of these concepts in Section 1.4.
2

the perfect matchings of the graph. By pmw(G) we denote the perfect matching width of a graph.
Figure 1: The cylindrical matching grid of order 4 with the canonical matching on the left and an internal quadrangulation on the right.
Theorem 1.1 ([HRW19a, HRW19b]). There exists a function gcyl : N  N such that for every k  N and every bipartite graph B with a perfect matching M either pmw(B)  gcyl(k) or B contains CGk as an M -minor such that M contains the canonical matching of CGk.
1.1 Our Contribution
Towards the greater goal of extending the Graph Minors Project to bipartite graphs with perfect matchings and matching minors, this paper focusses on [RS86b] and the completion of step ii) of the Graph Minors Project. Since many of the notions used to state our results are relatively technical we postpone a formal introduction of the definitions to Section 1.4. For the readers convenience each statement contains references to the necessary definitions. Theorem 1.2. A proper matching minor closed class B of bipartite graphs has bounded perfect matching width if and only if it excludes a planar bipartite matching covered graph. To prove this theorem we first show that the cylindrical grid, which is guaranteed by Theorem 1.1, contains a square grid as a matching minor. Then we use the theory of ear decompositions of matching covered graphs to construct a matching minor model of any fixed planar and matching covered graph within an appropriately sized square grid. Theorem 1.3. For every planar bipartite matching covered graph H there exists a number H  N such that H is a matching minor of the cylindrical matching grid of order H. Besides the characterisation of classes of bounded perfect matching width, we find an extension of the Erdos-P´osa property for minors to bipartite graphs with perfect matchings. Definition 1.4 ((Bipartite) Erdos-P´osa Property for Matching Minors). A (bipartite) matching covered graph H has the (bipartite) Erdos-P´osa property for matching minors if there exists a function H : N  N such that for every k  N any given (bipartite) matching covered graph G
3

with a perfect matching M has k-pairwise disjoint M -conformal subgraphs, all of which contain H as a matching minor, or there exists an M -conformal set SH  V (G) with |SH |  H (k) such that G - SH does not have H as a matching minor.
Theorem 1.5. A bipartite matching covered graph H has the bipartite Erdos-P´osa property for matching minors if and only if it is planar.
Towards establishing Theorem 1.5 we overcome two particular challenges: · We need to establish that for any perfect matching M and any edge cut (X) there exists a set F  M of size bounded in a function of the matching porosity of (X) such that F meets all M -alternating cycles with edges in (X). The existence of such sets is not guaranteed by the definition of perfect matching width. By using these sets we are also able to improve on several results of [HRW19a] regarding directed treewidth. This is the foundation of our algorithmic applications of perfect matching width. · By deleting a conformal set it is possible to drastically reduce the number of perfect matchings in a bipartite graph. In particular, a subgraph H of B might be conformal in B, but if F is subset of edges of some perfect matching M of B such that H is not M conformal, then F might not be a conformal subgraph of B - V (F ). This means that the set SH from Definition 1.4 is not necessarily a hitting set for all matching minor models of H within B, but still makes sure that B - SH does not contain H as a matching minor. For this reason the method to prove that a non-planar graph cannot have the Erdos-P´osa property for minors cannot be extended to bipartite graphs with perfect matchings in a straightforward fashion.
Our resolution of the first challenge also solves an Erdos-P´osa type problem on directed cycles through a given set of vertices and it is probably the deepest result in this paper. The second challenge is resolved by describing what excluding a matching minor means for digraphs, and establishing a strong version of genus and a new notion of the Erdos-P´osa property for digraphs. These new concepts are built upon the fact that whole anti-chains of butterfly minors can, in some sense, be identified with a single bipartite graph with a perfect matching. By using these anti-chains and the insight gained from the matching theoretic context, we are able to reformulate and resolve some problems from the world of structural digraph theory. How the setting of digraphs relates to bipartite graphs with perfect matchings is briefly described in Section 1.2, where we also discuss our contributions to digraph theory.
Algorithmic Applications of Perfect Matching Width In their seminal work on directed treewidth [JRST01] Johnson et al. listed three main points which, in their eyes, made treewidth a successful parameter2. These points are
· It served as a cornerstone of the Graph Minors Project, · it can be used to prove structural theorems, and · it has algorithmic applications due to the fact that many NP-hard problems become
tractable on classes of bounded width.
2They actually list four points, but the fourth is the successful use of treewidth in practical application which is unlikely to be replicable for perfect matching width at the time of writing.
4

The current state of research, in particular Theorem 1.1 and Theorem 1.2, can be seen as evidence that perfect matching width can take the place of treewidth in the context of matching minors in bipartite graphs for the first point. For the second point we can consider Theorem 1.5 to be a nice first result made possible through perfect matching width. Hence, to further strengthen our claim for the usefulness of perfect matching width, we introduce some algorithmic applications of perfect matching width. When considering bipartite graphs from the view of Matching Theory, two particular problems appear naturally, namely
i) what is the computational complexity of recognising whether a given bipartite graph contains a fixed bipartite and matching covered graph H as a matching minor, and
ii) what is the complexity of counting the number of perfect matchings in bipartite graphs excluding a fixed graph H as a matching minor?
To be able to use perfect matching width for any of these two questions, we must first show that we can compute a decomposition of bounded width in polynomial time.
Theorem 1.6. Let B be a bipartite graph with a perfect matching and pmw(B)  w. There exists a constant cpmw  N and an algorithm with running time 2O(w log w)nO(1) that computes a perfect matching decomposition of width at most cpmw · w2 for B.
Towards the first question we show that perfect matching width can be used for recognising the existence of a fixed matching minor within a bipartite graph.
Theorem 1.7. Let H be a fixed bipartite matching covered graph and B a bipartite graph with a perfect matching. There exists an algorithm with running time |V (B)|O(|V (H)|2+pmw(B)2) that decides whether B contains H as a matching minor.
The algorithm from Theorem 1.7 is achieved by solving a more general problem on bipartite graphs of bounded perfect matching width, namely a matching version of the so-called t-Linkage Problem, or t-Disjoint Paths Problem. Additionally, counting the number of perfect matchings on bipartite graphs of bounded perfect matching width can also be solved efficiently.
Theorem 1.8. Let B be a bipartite graph with a perfect matching. There exists an algorithm with running time |V (B)|O(pmw(B)2) that computes the number of perfect matchings in B.
By combining Theorem 1.2 and Theorem 1.3 with these algorithms, we obtain the following results for classes of bipartite graphs with perfect matchings that exclude a planar and matching covered matching minor.
Corollary 1.9. Let H be a fixed planar and bipartite matching covered graph and let H be the number from Theorem 1.3. There exists an algorithm with running time |V (B)|O(H2 ) that decides whether a given bipartite graph B with a perfect matching contains H as a matching minor.
Corollary 1.10. Let H be a fixed planar and bipartite matching covered graph, let H be the number from Theorem 1.3, and let B be a bipartite graph with a perfect matching that does not contain H as a matching minor. There exists an algorithm with running time |V (B)|O(H2 ) that computes the number of perfect matchings of B.
5

1.2 A Comparison to the Directed Case

Structural Digraph Theory, especially the study of butterfly minors, and Bipartite Matching Theory are closely linked via a powerful construction that translates every digraph into a bipartite graph with a perfect matching and vice versa. See Figure 2 for an example.

Definition 1.11 (M -Direction). Let B = (V1  V2, E) be a bipartite graph and let M  M(G) be a perfect matching of B. The M -direction D(B, M ) of B is defined as follows.

i) V (D(G, M )) := M and

ii) E(D(G, M )) :=

(e, f ) 

M 2

there

is

g

 E(B)

such

that

=eg

 V1

and

 = f  g  V2 .

Figure 2: Left: A bipartite graph B with a perfect matching M . Right: The arising M -direction D(B, M ).
Similarly, every undirected graph can be turned into a digraph by simply replacing every undirected edge uv with the directed edges (u, v) and (v, u). Every digraph D can be made into an undirected graph by simply `forgetting' the orientation of the edges. There is also a way to interpret any undirected graph as a digraph.
Definition 1.12 (Biorientation). Let G be a graph. The digraph

G := (V (G), {(u, v), (v, u) | uv  E(G)})

is called the biorientation of G. A digraph D for which a graph G exists with D = G is called a bioriented graph or symmetric digraph.
Several properties of matching covered bipartite graphs naturally correspond to properties of digraphs. In particular this is the case for strong connectivity, as one can easily observe that the M -alternating cycles of a bipartite graph B with a perfect matching M are in bijection with the directed cycles of its M -direction. The following statement is folklore (a proof can be found in [ZL10], but the result was already known by [RST99]).
Theorem 1.13. Let B be a bipartite graph with a perfect matching M and k  N be a positive integer. Then B is k-extendable if and only if D(B, M ) is strongly k-connected.
Even more important, and part of the main motivation behind this research is the following relation between butterfly minors and matching minors.
6

Lemma 1.14 ([McC00]). Let B and H be bipartite matching covered graphs. Then H is a matching minor of B if and only if there exist perfect matchings M  M(B) and M   M(H) such that D(H, M ) is a butterfly minor of D(G, M ).
Indeed, to the best of our knowledge, all exact characterisations of classes of digraphs in form of excluded families of butterfly minors are due to, or at least closely related to, Lemma 1.14 [ST87, GT11, Wie20]. Building on the introduction of directed treewidth in [JRST01], Kawarabayashi et al. [KK15, AKKW16, GKKK20] have started the project of extending the Graph Minors Theory of Robertson and Seymour to digraphs. However, when dealing with excluding a planar butterfly minor, especially with extensions of [RS86b], some problems arise. A key observation is that, while the cylindrical grid3 as guaranteed by the Directed Grid Theorem from [KK15] is indeed a planar digraph, it does not contain every planar digraph as a butterfly minor. For an example of such a digraph see Figure 3. Because of this, the strongly connected digraphs which have the Erdos-P´osa property are exactly those which are butterfly minors of the cylindrical grid [AKKW16].
Figure 3: A strongly connected and planar digraph that is not a butterfly minor of the cylindrical grid.

As pointed out in [RST99, McC04], the class of digraphs excluding all Cn, where n  3 is odd, corresponds exactly to the class of bipartite graphs without K3,3 as a matching minor via the M -direction and Lemma 1.14. So excluding a single matching minor in a bipartite graph B corresponds to excluding a, possible infinite, anti-chain of butterfly minors in the M -directions of B. By using Lemma 1.14 we formalise these anti-chains based on a single bipartite graph with a perfect matching in Section 4.2. This leads to a new way of handling butterfly minor closed classes of digraphs in terms of excluded anti-chains instead of individual digraphs. By doing so we are able to give digraphic analogues of Theorems 1.2, 1.3 and 1.5 by replacing a single digraph with a whole anti-chain and planarity with a stronger version, more suited for the theory of butterfly minors.
1.3 Organisation
In Section 1.4 we present a collection of all necessary definitions. The remainder of this article is organised as follows:
3The cylindrical grid is the M -direction of the cylindrical matching grid, where M is its canonical matching.
7

i) Section 2 deals with finding a bounded size cover for all M -alternating cycles crossing over an edge cut of bounded matching porosity.
ii) We then use these bounded size covers in Section 3 to give explicit bounds for the relation of the perfect matching width of a bipartite graph with a perfect matching and the directed treewidth of its M -directions, thereby substantially improving on the previous result from [HRW19a].
iii) In Section 4 we introduce a notion of models for matching minors based on previous definitions from [NT07] and formalise the link between the exclusion of a single matching minor and a whole anti-chain of butterfly minors.
iv) Section 5 is dedicated to the proofs of Theorems 1.2, 1.3 and 1.5 and their analogues for digraphs.
v) Finally, in Section 6 we describe the algorithms and present the necessary proofs towards Theorems 1.6 to 1.8.
1.4 Preliminaries
In the following we introduce basic terminology as well as all concepts necessary for the statements of our main results as presented above. All graphs and digraphs in this article are considered simple, that is we do now allow multiple edges or loops and wherever such objects would arise from contraction, we identify multiple edges and remove loops. For a deeper introduction to Matching Theory the reader may consult [LP09], while for Digraph Theory we recommend [BJG18]. For integers i, j  Z we use the notation [i, j] for the set {i, i + 1, . . . , j}, where [i, j] =  if i > j. Since the majority of our research is focussed on bipartite graphs we fix the following convention. Wherever possible we use B as the standard name for a bipartite graph and G for arbitrary graphs if not stated explicitly otherwise. Moreover, we assume every bipartite graph to come with a bipartition into the colour classes V1 and V2, where in our figures V1 is represented by black vertices and the vertices in V2 are depicted white. In case ambiguity arises we either treat Vi as the placeholder for all possible vertices of colour i  [1, 2], or we write Vi(B) to specify which graph we are talking about. If X and Y are two finite sets, we denote the symmetric difference by XY := (X \ Y )  (Y \ X).
Matching Theory
Definition 1.15 (Perfect Matching and Matching Covered). Let G be a graph. A matching is a set F  E(G) of pairwise disjoint edges, by V (F ) we denote the set eF e, and we say that a vertex v  V (G) is covered by F if v  V (F ). A matching M  V (G) is perfect if V (M ) = V (G), an edge e  E(G) which is contained in a perfect matching of G is called admissible. We denote by M(G) the set of all perfect matchings of G. The graph G is called matching covered if it is connected, and every edge of G is contained in a perfect matching.
Since we are interested in graphs with perfect matchings, we need a restricted notion of subgraphs which preserves, at least in parts, the matching structure within our graphs.
8

Definition 1.16 (Conformal Sets and Subgraphs). Let G be a graph with a perfect matching M . A set X  V (G) is called conformal if G - X has a perfect matching, it is M -conformal, if M contains a perfect matching of G - X. Similarly, a subgraph H  G is conformal if V (H) is conformal4. Moreover, H is M -conformal if V (H) is M -conformal and M contains a perfect matching of H.
For a theory of connectivity and routing with respect to the perfect matchings within a graph we need specialised versions of paths and cycles.
Definition 1.17 (Alternating Paths and Cycles). Let G be a graph and F a matching in G. A path P is said to be F -alternating, if there exists a subset S of the endpoints of P such that F contains a perfect matching of P - S. The path P is alternating if there is a maximum matching M of G such that P is M -alternating. A cycle C is said to be F -alternating if F contains a perfect matching of C. The cycle C is said to be alternating if G has a maximum matching M for which C is M -alternating.
A key notion, especially for bipartite graphs, in Matching Theory is the property of being able to extend small matchings to perfect matchings of the whole graph. As illustrated by Theorem 1.13 this property can be seen as the matching theoretic version of strong connectivity.
Definition 1.18 (Extendability). Let G be a graph with a perfect matching and F  E(G) a matching. We say that F is extendable if there exists M  M(G) such that F  M . For any positive integer k  N, G is said to be k-extendable if it is connected, has at least 2k + 2 vertices, and every matching of size k in G is extendable.
We also need a specialisation of minors which also preserves the existence of perfect matchings. In particular this means that every time we perform one atomic instance of contraction we must identify an odd number of vertices, since the total number of vertices must stay even. Let G be a graph with a perfect matching and v  V (G) a vertex of degree two with NG(v) = {v1, v2}. Let
G := G - {v1, v, v2} + u + {uw | w  NG-v(v1)  NG-v(v2)} ,
where u / V (G). We say that G is obtained from G by bicontracting v.
Definition 1.19 (Matching Minor). Let G and H be graphs with perfect matchings and let M be a perfect matching of G. We say that H is a matching minor of G if H can be obtained from a conformal subgraph of G by a sequence of bicontractions. If H can be obtained from an M -conformal subgraph of G by a sequence of bicontractions we say that H is an M -minor of G.
A class B of bipartite graphs is called a proper matching minor closed class if every member of B has a perfect matching, for every B  B if H is a matching minor of B, then H  B, and B does not contain all bipartite graphs with perfect matchings.
4At first glance, this definition might seem unintuitive. However, for our applications we only ever consider conformal subgraphs H which themselves also have a perfect matching. With V (H) being conformal that means we can combine any perfect matching of G - H with any perfect matching of H to obtain a perfect matching of G as a whole. Hence it suffices to only require G - H to have a perfect matching.
9

Perfect Matching Width In this paragraph we introduce the matching theoretic version of treewidth our theory is based on: perfect matching width. Let G be a graph and X  V (G) a set of vertices. The edge cut around X in G is defined as the set G(X) := {uv  E(G) | e  X and v / X}. The sets X and X := V (G) \ X are called the shores of G(X).
Definition 1.20 (Matching Porosity). The matching porosity of an edge cut in a graph G with a perfect matching is the value

mp(G(X)) := max |M  G(X)|.
M M(G)

Let T be a tree and t1t2  E(T ), then T - t1t2 consists of two components, each containing exactly one endpoint of t1t2. For i  {1, 2} we denote by Tti the component of T -t1t2 containing ti. Moreover, if T is rooted and t  V (T ) a vertex different from the root, then there exists a unique vertex d  V (T ) such that dt is the edge on the path from t to the root. In this case, we denote by Tt the component of T - dt containing t. Finally, we denote by L(T ) the vertices of T of degree one called the leaves of T .

Definition 1.21 (Perfect Matching Width). Let G be a graph with a perfect matching. A perfect matching decomposition of G is a tuple (T, ), where T is a cubic tree and  : L(T )  V (G) a bijection. Let t1t2 be an edge in T , then the partition of the tree into Tt1 and Tt2 also yields a partition of the vertices in G that are mapped to the leaves of T . Let

Xi :=

{(t)}

tL(T )V (Tti )

be the two classes of the partition. Note that G(X1) = G(X2) defines an edge cut in G, we refer to it by G(t1t2). The width of a perfect matching decomposition (T, ) is given by width(T, ) := maxt1t2E(T ) mp(G(t1t2)) and the perfect matching width of G is then defined as

pmw(G) :=

min

max mp(G(t1t2)).

(T,) perfect matching t1t2E(T )

decomposition of G

A class B of bipartite graphs with perfect matchings is said to be of bounded perfect matching width if there exists a constant cB  N such that pmw(B)  cB for all B  B.
Definition 1.22 (Cylindrical Matching Grid). The cylindrical matching grid CGk of order k is defined as follows. Let C1, . . . , Ck be k vertex disjoint cycles of length 4k. For every i  [1, k] let Ci = (v1i , v2i , . . . , v4ik), V1i := vji | j  {1, 3, 5, . . . , 4k - 1} , V2i := V (Ci) \ V1i, and Mi := vji vji+1 | vji  V1i . Then CGk is the graph obtained from the union of the Ci by adding

vji vji++11 | i  [1, k - 1] and j  {1, 5, 9, . . . , 4k - 3} , and vji vji-+11 | i  [2, k] and j  {3, 7, 11, . . . , 4k - 1}

10

to the edge set. We call M :=

k i=1

Mi

the

canonical

matching

of CGk.

See Figure 1 for an

illustration.

Digraphs
Definition 1.23 (Butterfly Minor). Let D be a digraph and (u, v)  E(D). The edge (u, v) is butterfly contractible if NDout(u) = {v}, or NDin(v) = {u}. Suppose (u, v) is butterfly contractible and let
D := D - u - v + x + {(w, x) | (w, u)  E(D) or (w, v)  E(D)} + {(x, w) | (u, w)  E(D) or (v, w)  E(D)} ,
where x / V (D). We say that D is obtained from D by butterfly contraction of (u, v). A digraph H is a butterfly minor of D if it can be obtained from D by a sequence of edgedeletions, vertex-deletions, and butterfly contractions.
Let D be a digraph and X  V (D). A directed walk W is a directed X-walk if it starts and ends in X, and contains a vertex of V (D - X). We say that Y  V (D) strongly guards X if every directed X-walk in D contains a vertex of Y . An arborescence is a digraph T obtained from a tree T by selecting a root r  V (T ) and orienting all edges of T away from r. If e is a directed edge and v is an endpoint of e we write v  e.
Definition 1.24 (Directed Treewidth). Let D be a digraph. A directed tree decomposition for D is a tuple (T, , ) where T is an arborescence,  : V (T )  2V (D) is a function that partitions V (D), into sets called the bags5, and  : E(T )  2V (D) is a function, giving us sets called the guards, satisfying the following requirement:
For every (d, t)  E(T ), (d, t) strongly guards (Tt) := tV (Tt) (t). Here Tt denotes the subarboresence of T with root t. For every t  V (T ) let (t) := (t) 
te (e). The width of (T, , ) is defined as
width(T, , ) := max |(t)| - 1.
tV (T )
The directed treewidth of D, denoted by dtw(D), is the minimum width over all directed tree decompositions for D.

2 Matching Porosity, Directed Cycles, and Separation
Inspecting the guard sets of a directed tree decomposition more closely reveals that guards are not supposed to block all directed paths that go in one direction. Instead, the guards are meant to make sure that no strong component of D avoids the guards and contains vertices from below and above the guarded edge in the directed tree decomposition. Indeed, that means that the guard set of any given edge e in a directed tree decomposition is a hitting set for all directed
5This means {(t) | t  V (T )} is a partition of V (D) into non-empty sets.

11

cycles that contain vertices from the bags below the head of e, but are not fully contained in their union. Since, through the eyes of the M -direction, the vertices of a digraph are in fact the edges of a perfect matching in a bipartite graph we are interested in a similar property for subsets of perfect matchings on cuts of bounded matching porosity. Explicitly, given a cut B(X) in a bipartite graph B with a perfect matching M we are interested in a set F  M that meets all M -conformal cycles with vertices in X and X, and whose size is upper bounded by some function of mp(B(X)).
Definition 2.1 (Guarding Set). Let B be a bipartite graph with a perfect matching M , and X  V (B). An M -conformal cycle C is said to cross the cut B(X) if E(C)  B(X) = . A set F  M is a hitting set for a family C of M -conformal cycles if F  E(C) =  for all C  C. Moreover, F is called a guard for B(X) if B(X)  M  F and F is a hitting set for the family of all M -conformal cycles that cross B(X).
This section is dedicated to the proof of the following theorem and its consequences for digraphs.
Theorem 2.2. Let B be a bipartite graph with a perfect matching M , and X  V (B) a set of vertices with mp(B(X)) = k, then there exists a guarding set F  M of B(X) with |F |  2k + k2.
Let G be a graph with a perfect matching. We call the graph induced by the admissible edges of G the cover graph of G. A component of the cover graph of G is an elementary component of G and the set of all elementary components of G is denoted by E(G). With respect to elementarity, guarding sets for cuts can be seen as a matching analogue of strong separators.
Definition 2.3 (Dulmage-Mendelsohn Decomposition). Let B be a bipartite graph with a perfect matching, and i  [1, 2]. For any two elementary components K1, K2  E(B) we set K1 i K2 if K1 = K2, or there exists an edge with one endpoint in Vi  E(K2) and the other one in E(K1) \ Vi. We then write K1 i K2 for any two elementary components of B if there exist H1, . . . , Hk  E(B), k  1, such that H1 = K1, Hk = K2, and Hj i Hj+1 for all j  [1, k - 1].
In particular, this means K1 1 K2 if and only if K2 2 K1. This relation, in a way, resembles the topological ordering of strong components of digraphs, as in every step we leave a component going from Vi to Vj, inside the component we pass over to Vi again and may now move to the next component.
Theorem 2.4 ([DM58, DM59, DM63]). Let B be a bipartite graph with a perfect matching. Then for any i  [1, 2], the binary relation i is a partial order over E(B).
Lemma 2.5. Let B be a bipartite graph with a perfect matching M , and X  V (B). If F  M is a guard for B(X), then no elementary component of B - V (F ) can contain vertices of both X \ V (F ) and of X \ V (F ).
Proof. Suppose there exists an elementary component K with vertices in both X \ V (F ) and X \V (F ). Then K must have at least four vertices since otherwise, K would be isomorphic to K2
12

and its single edge would have to be an edge of M  B(X)  F . Now let e  E(K)  B(X) be an edge of K (and observe that, by definition, e / M ). Also, let M  be a perfect matching of K containing e. Since F  M and K is an elementary component of B - V (F ), MK := M  E(K) is a perfect matching of K. Moreover, e / MK. If we consider the subgraph K of K consisting solely of the edges of M  and MK , every component either is an M -conformal cycle, or isomorphic to K2. Since e / MK, the endpoints of e are covered by distinct edges of M , and thus the component of K containing e must be an M -conformal cycle that crosses B(X) and avoids F . However, such a cycle cannot exist by definition.
An important observation one can make in the proof of the lemma above is that, if one were to delete the vertices of a set F  M and there still is an elementary component with vertices on both sides of B(X), there exists a cycle C that is M -conformal in B, which still has edges in B(X). That means, if F = B(X)  M , then there exists the perfect matching M  := M E(C) with |B(X)  M |  |B(X)  M | + 2. We make this observation more exact in the following lemma.
Lemma 2.6. Let B be a bipartite graph with a perfect matching M , X  V (B) such that mp(B(X)) = k, and |M  B(X)| = k. Then M  B(X) is a guard for B(X).
Proof. Suppose there is an M -conformal cycle C avoiding F := M  B(X) but crossing B(X). Let W := E(C)  B(X), then clearly W  M = . However, since C avoids F we can define a new perfect matching M  of B as M  := M E(C). Then W  F  M  and thus |M   B(X)| > k = mp(B(X)) which is a contradiction. Hence no M -alternating cycle that crosses B(X) can avoid F .
For the next part, we need some additional notation. Let B be a bipartite graph with a perfect matching M , X  V (B) be an M -conformal set of vertices and M  = M another perfect matching of B. Then let us denote for every W  M  by FM,M (W ) the set of edges of M that match the vertices in V (W ). Note that |FM,M (W )|  2|W |. Let H be an elementary component of B - W , the M-box of H is the set H,M := V (H) \ V (FM,M (W )). The following observation is an immediate consequence of the definition of 2, Theorem 2.4, and V (W )  V (FM,M (W )).
Observation 2.7. Let B be a bipartite graph with perfect matchings M and M , let W  M  and H1 and H2 be two distinct elementary components of B - V (W ). Then, if H1 2 H2, there is no internally M -conformal path P in B - V (FM,M (W )) such that P starts in a vertex of V2  H1,M , ends in a vertex of V1  H2,M , and is otherwise disjoint from H1,M  H2,M .
We fix the following for the upcoming lemmata. Let B be a bipartite graph with a perfect matching M . Let X  V (B) be an M -conformal set and let M  be a perfect matching with |B(X)  M | = mp(B(X)) = k as well as W := B(X)  M . Let  be a linearisation of the partial order 2 of elementary components of B - V (W ) and let us number the elementary components H1, . . . , H of B - V (W ) such that (Hi) = i for all i  [1, ]. A set I  [1, ] is a dangerous configuration if there exists an M -conformal cycle C of B - V (FM,M (W )) such that
13

i) V (C)  iI Hi,M , ii) Hi,M  V (C) =  for all i  I, and iii) there are i, j  I such that Hi,M  X and Hj,M  X.
If I is a dangerous configuration, we call iI := max I the endpoint of I, the cycle C is a base cycle of I.

Lemma 2.8. Let B := B - V (FM,M (W )). There exists an M -conformal cycle C in B that crosses B(X \ V (FM,M (W ))) if and only if there exists a dangerous configuration I with C as a base cycle.

Proof. The reverse direction follows immediately from the definition of dangerous configurations. If I is dangerous with base cycle C, then C contains vertices of both X and X and thus crosses B (X \ V (FM,M (W ))). Hence it suffices to prove the forward direction. So let C be an M -conformal cycle in B that crosses B (X \ V (FM,M (W ))). Now let I := {i  [1, ] | Hi,M  V (C) = }. Then V (C)  iI Hi,M and clearly, the second requirement is met by the definition of I. At last we know that C crosses B(X \ V (FM,M (W ))). By lemmata 2.5 and 2.6 there cannot exist j  [1, ] such that V (Hj)X =  and V (Hj)X =  at the same time. Hence there must be i, j  I such that Hi,M  V (Hi)  X and
Hj,M  V (Hj)  X.
In the fixed setting we are working on, let i  [1,  - 1] be any number. We associate a specific edge cut in B with i and  as follows:

i
(Hi) := B( V (Hj)  V1(W )).
j=1

Lemma 2.9. For all i  [1,  - 1] and all perfect matchings M  of B, we have |(Hi)  M | = k.

Proof. Let i  [1,  - 1] be arbitrary. By definition of the partial order 2 of the Hj no vertex

v

i j=1

V2

(Hj

)

can

have

a

neighbour

in

 j=i+1

V

(Hj

).

So the only neighbours v can have

outside of

i j=1

V

(Hj

)

must

be

vertices

of

V1(W ).

Hence

every

perfect

matching

M 

of

B

must

match v to a vertex within

i j=1

V

(Hj )



V1(W )

and

thus

it

must

have

exactly

i

i

| V1(Hj)  V1(W )| - | V2(Hj)| = |V1(W )| = k

j=1

j=1

many edges in (Hi).

Lemma 2.10. Let I  [1, ] be a dangerous configuration and let C be a base cycle of I. Moreover, let i := min I and i  j < iI , then (Hj)  E(C)  M = .

Proof. Clearly, with C being a cycle, |E(C)  (Hj)|  2. Now suppose (Hj)  E(C)  M = 

and let e1, e2  E(C)(Hj) be two distinct edges with ep = upvp such that vp 

j j



=1

V

(Hj

)



V1(W ) for each p  [1, 2]. Let us further choose e1 and e2 such that there is a subpath P of C

from v1 to v2 that avoids u1 and u2 and does not contain an edge of (Hj). To find P move

14

along C starting in v1 and away from u1 until the first time we reach an endpoint of another edge in (Hj), this will be v2. By our assumption {e1, e2}  M =  and thus, with C being M -conformal, E(P )  M must be a perfect matching of P . Hence P must have an even number of vertices in particular and thus is of odd length. But by Observation 2.7 v1, v2  V1 and thus P is an odd length path joining two vertices of V1. With B being bipartite this is impossible and our claim follows.

We are finally ready to prove the main result of this section.

Proof of Theorem 2.2. First let F-1 := M  B(X), B0 := B - V (F-1), X0 := X \ V (F-1),

and M0 := M \ F-1. Clearly, every M0 conformal cycle in B0 is also an M -conformal cycle

in B that avoids F-1. Each such cycle that crosses B0(X0) also crosses B(X), and every
conformal set in B0 is also conformal in B. Moreover, mp(B0 (X0)) = k0 := k - |F-1| and X0 is M0-conformal. Now let M  be a perfect matching of B0 with |M   B0(X0)| = k0 and let F0 := FM,M0(B0 (X0)  M ). Then |F0|  2k0 since every edge of F0 covers an endpoint of an edge in B0(X0)  M  and there are 2k0 such endpoints.

Let  be a linearisation of the partial order 2 of the elementary components of B0-V (B0 (X0) M ). Let us number the elementary components of B0 - V (B0 (X0)  M ) H1, . . . , H such that
(Hi) = i for all elementary components. We can now choose i1  [1, ] to be the smallest

number such that there is a dangerous configuration I1 with i1 = iI1. Then for every dangerous

configuration I with the smallest element i  i1 we must have iI  i1. Hence each base

cycle of such a configuration must have an edge in F1 := ((Hi1-1)  M0)  ((Hi1)  M0) by

Lemma 2.10. Indeed, every M0-conformal cycle that crosses B0 (X0), avoids F0, and has vertices

in

i1 j=1

Hj,M0 is met by F1 by Lemma 2.8. Moreover, by Lemma 2.9 we have |F1|  2k0.

Now suppose the sets F1, . . . , Fp-1  M0 with |Fj |  2k0 for all j  [1, p - 1] have already been

constructed together with pairwise disjoint dangerous configurations I1, . . . , Ip-1. Moreover let

us assume that 1  j < j  p - 1 implies iIj < h where h is the smallest member of Ij

and

p-1 j=1

Fj

meets

all

base

cycles

of

dangerous

configurations

I

for

which

some

i



I

exists

with i < iIp-1. Let ip  [ip-1 + 1, ] be the smallest number such that there is a dangerous

configuration Ip with base cycle C that avoids

p-1 j=1

Fj

.

This

means

Ip

must be disjoint

from

p-1 j=1

Ij

.

Let

Fp

:=

((Hip-1)  M0)  ((Hip)  M0).

By

lemmata

2.8

and

2.10,

p j=1

Fj

meets

all B0 (X0) crossing M0-conformal cycles that avoid F0 and have a vertex in

ip j=1

Hj ,M0 . With

Lemma 2.9 we also have |Fp|  2k0.

With B being finite and thus  being a natural number there must be some q such that we cannot

find

an

iq+1

as

above.

Suppose

q

>

k0 2

.

Clearly

every

Ij ,

j



[1, q]

has

a

base

cycle

Cj

that

is

M0

conformal and crosses B0 (X0). However, with X0 being M0-conformal, Cj must have at least

two edges in B0(X0) that do not belong to M0. Since I1, . . . , Iq are pairwise disjoint, also the

C1, . . . , Cq are also pairwise disjoint. So we construct the following perfect matching of B0:

q
M  := M0 E(Cj ).
j=1

15

Then |B0 (X0)  M | 

q j=1

|B0 (X0)



E (Cj )

\

M0|



2q

>

2

k0 2

=

mp(B0 (X0))

which

is

impossible. Hence our process must stop after q 

k0 2

many steps. In total we get a set

F := F-1  F0 

q j=1

Fj

that

meets

all

M -conformal

cycles

crossing

B (X )

and

satisfying

B(X)  M  F . So F is a guard of B(X). Moreover, we have

q

|F |  |F-1| + |F0| + |Fj|

j=1



k

-

k0

+

2k0

+

k0 2

2k0

 k + k0 + k02

 2k + k2.

2.1 Cycle Porosity and Strong Separators
How can we translate results on matching porosity into the setting of digraphs using our notion
of M -directions? To answer this question let us consider some graph G with a perfect matching M . Note that G is not necessarily bipartite as this general idea can be applied to any graph with a perfect matching. Now let X  V (G) be an M -conformal set with mp(G(X)) = k for some k  N. Since X is M -conformal, G(X)  M = . Let M   M(G) be a perfect matching with |M   G(X)| = k and consider the graph G := G[M   M ] that only consists of edges from M   M . That is, G is the subgraph of G induced by the edge set M   M , so its vertex set is V (M   M ) and its edge set is M   M . Observe that, since M and M  are perfect matchings, every component of G either is an M -M -conformal cycle or isomorphic to K2. Moreover, no edge of M   G(X) can belong to a component isomorphic to K2 in G and thus each of these edges must be contained in an M -M -conformal cycle. Let C be the collection of all components of G that have an edge in G(X). Then we have CC E(C)  G(X)  M  and in particular | CC E(C)  G(X)| = k. Hence if the matching porosity of G(X) is k we find a family of pairwise disjoint M -conformal cycles in G that share k edges with G(X) in total. Now let Y  V (G) be another M -conformal set, and let C be a family of pairwise disjoint M -conformal cycles in G. Suppose | CC E(C)  G(Y )| = k for some k  N. Let us denote by E(C) the set CC E(C), and let M  := M E(C). Then M  is a perfect matching of G and |G(Y )  M | = k which implies mp(G(Y ))  k. So if we can find a family of pairwise disjoint M -conformal cycles in G, then the number of edges this family has in our cut is a lower bound on its matching porosity. Suppose G is bipartite, then there is a bijection between the M -conformal cycles in G and the directed cycles in D(G, M ). This leads us to the following
definitions and observation.

16

Definition 2.11 (Cycle Porosity). Let D be a digraph, and X  V (D). The cycle porosity of the cut D(X) is defined as

cp(D(X)) :=

max
C family of

|E(C)  D(X)|.

pairwise disjoint

directed cycles

Let G be a graph with a perfect matching M , and X  V (G) be an M -conformal set. We denote by M (X) the set of edges of M with both endpoints in X.

Observation 2.12. Let B be a bipartite graph with a perfect matching M and X  V (B) be an M -conformal set. Then mp(B(X)) = cp(D(B,M)(M (X))).
Corollary 2.13. Let D be a digraph and X  V (D). If cp(D(X)) = k, then there is a hitting set of size at most k2 + 2k for all directed cycles crossing D(X).

Proof. With D being a digraph there exists a bipartite graph B and a perfect matching M such that D = D(B, M ). For every v  V (D) let us identify the edge ev  M that uniquely corresponds to v in B. Then X naturally corresponds to the set Y := V ({ev | v  X})  V (B). By calling upon Theorem 2.2, it now suffices to show mp(B(Y ))  k in order to prove our claim. In fact mp(B(Y )) = k follows immediately from Observation 2.12 and thus we are done.

Please note that the proofs of Theorem 2.2 and Corollary 2.13 are constructive in the sense that the construction of the separators and the digraphs Di can be done in polynomial time. This yields the following algorithmic result.

Corollary 2.14. Let D be a digraph and X  V (D). There exists a polynomial time algorithm that finds a hitting set S for all directed cycles that cross D(X) of size at most cp(D(X))2 + 2 cp(D(X)).

3 Perfect Matching Width and Directed Treewidth

We are now ready to apply the findings of Section 2 to prove a close relation between the perfect matching width of any bipartite graph B with a perfect matching M and its M -direction. To achieve this we use the analogue of perfect matching width for digraphs induced by cycle porosity from [HRW19a] called cycle width. We then use the relation between a version of the cops & robber game and directed treewidth and Corollary 2.13 to show that bounded cycle width implies bounded directed treewidth.
Definition 3.1 (Cycle Width). Let D be a directed graph. A cycle decomposition of D is a tuple (T, ) where T is a cubic tree and  : L(T )  V (D) a bijection. Let t1t2 be an edge in T , then the partition of the tree into Tt1 and Tt2 also yields a partition of the vertices in D that are mapped to the leaves of T . Let

Xi :=

{(t)}

tL(T )V (Tti )

17

be the two classes of the partition. Note that D(X1) = D(X2) defines an edge cut in D, we refer to it by D(t1t2). The width of a cycle decomposition (T, ) is defined as half 6 of the value
maxeE(T ) cp(D(e)). Finally, the cycle width of D, denoted by cycw(D), is the minimum width over all cycle decompositions for D.

The close relation between the perfect matching width of a bipartite graph B with a perfect matching M and the cycle width of its M -direction has been established in [HRW19a].

Theorem 3.2 ([HRW19a]). Let B be a bipartite graph with a perfect matching M . Then

1 2

pmw(B)



cycw(D(B,

M

))



pmw(B).

In light of Theorem 3.2 it is clear that it suffices to relate cycle width and directed treewidth in order to also obtain a close relationship between directed treewidth and perfect matching width. The remainder of this section is dedicated to proving the following result.

Proposition 3.3. Let D be a digraph. Then cycw(D) - 1  dtw(D)  18 cycw(D)2 + 36 cycw(D) - 2.

While the first inequality has already been proven in [HRW19a], the second inequality is a major improvement over the former bound which depended on the function of the Directed Grid Theorem.

Lemma 3.4 ([HRW19a]). Let D be a digraph. Then cycw(D)  dtw(D) + 1.

Let us now define the cops & robber game for digraphs. Let D be a digraph, the cops & robber game on D is played as follows:
i) Initially the cops announce a starting position C0  V (D) and the robber chooses her starting position R0 which is a strong component of D - C0.
ii) Suppose the game has been played for i  N rounds, Ci  V (D) is the current position of the cops and Ri is the current position of the robber. Then the cops announce a new position Ci+1  V (D) and the robber announces a new position Ri+1 such that Ri+1 is a strong component of D - Ci+1, and there exists a strong component R in D - Ci  Ci+1 such that Ri  Ri+1  R. In case no such Ri+1 can be chosen, the robber is caught after i + 1 rounds.
If the cops can guarantee that, no matter how the robber plays, she is always caught after finitely many rounds we say that the cops have a winning strategy. If the cops have a winning strategy and can also guarantee that any cop position Ci they choose during any possible play of the game satisfies |Ci|  k, we say that k cops can catch the robber on D.
Theorem 3.5 ([JRST01]). Let D be a digraph and k  N. If k cops can catch the robber on D, then dtw(D)  3k - 2.

So all we have to do is to show that a cycle decomposition of bounded width for a digraph D certifies that a bounded number of cops can catch the robber on D.

6Note that the cycle porosity

of

any cut is even,

we add

the factor

1 2

to

the definition to

be

more

in

line with

other width parameters by allowing any value from N.

18

Lemma 3.6. Let D be a digraph and (T, ) be a cycle decomposition of width k  N for D. Then 6k2 + 12k cops can catch the robber on D.
Proof. For every edge e  E(T ) let us denote by Se a minimum sized set of vertices of D such that Se meets all directed cycles crossing D(e). Since the width of (T, ) is k we know cp(D(e))  2k and thus, by Corollary 2.13, we know |Se|  2k2 + 4k for all e  E(T ). Choose any vertex v  V (D) and select C0 := v. Let t0  E(T ) be the unique edge of T with () = v. Independently of the choice of R0 of the robber let e01, e02  E(T ) be the other two edges of T incident with t0 and let C1 := {v}  Se1  Se2. Note that |C - 1|  6k2 + 12k. For i  [1, 2] let Ti be the component of T - t0 containing the other endpoint of ei. Let r  [1, 2] be chosen such that Tr is the unique component of T - t0 which contains vertices of R1 under . To see that Ti is unique observe that T - t0 consists of exactly three components, one of them only consisting of . Moreover, by definition of Se1 and Se2 no strong component of D - Se1 - Se2 can contain vertices which are mapped to leaves of both T1 and T2 by . Hence we can now set C3 := Ser and can still be sure that the robber cannot leave Tr. Now suppose we are in the following situation in round i  3: For all j  [0, i - 1] we have |Cj|  6k2 + 12k and there exists an edge dt  E(T ) such that Ci = Sdt and the vertices of Ri are all mapped to the leaves of Tt which is the component of T - dt that contains t. In case Tt has only a single vertex, namely t, t must be a leaf of T and so let Ci+1 := Ci  {(t)}. By our assumptions we have |Ci+1|  2k2 + 4k + 1  6k2 + 12k, and we have also caught the robber as she cannot choose a new component. Hence in this case we are done. So let e1 and e2 be the other edges of T incident with t and set Ci+1 := Sdt  Se1  Se2. Again we have |Ci+1|  6k2 + 12k. For each j  [1, 2] let Tj be the component of T - t that contains the other endpoint of ej. Now robber must choose Ri+1 such that all vertices of Ri+1 are either completely mapped to the vertices of T1 or completely mapped to the vertices of T2. Let j  [1, 2] be chosen such that  maps all vertices of Ri+1 to leaves of Tj. Then we can set Ci+2 := Sej and Ri+2 must still be chosen to only contain vertices which are mapped to the leaves of Tj. As D is finite so is T and therefore, the subtree hosting the vertices of Ri+2 shrinks with every iteration. Hence after finitely many rounds we are sure to have caught the robber using at most 6k2 + 12k cops.
Combining Theorem 3.5 and Lemma 3.6 immediately yields the second inequality of Proposition 3.3 and thus we are done.
4 Matching Minors and Fundamental Anti-Chains in Digraphs
To be able to precisely describe matching minors in terms of alternating paths which can be found by an algorithmic solution to our matching theoretic analogue of the t-Disjoint Paths Problem7, we need a more precise and formal description of matching minors. In the second part of this section we introduce our notion of fundamental anti-chains for butterfly minors in digraphs based on the definition of matching minors.
7See Section 6.2 for more information.
19

4.1 Matching Minor Models
To speak about matching minors in a more formal way, we introduce the concept of models for matching minors. Models, or embeddings, for matching minors have already been used and discussed in [RST99] and [NT07] and the definitions we give here are similar to those of Norine and Thomas. Some parts of these definitions, however, have been changed to better suit our needs in the sections to come and therefore we provide the necessary proofs. Let T  be a tree and let T be obtained from T  by subdividing every edge an odd number of times. Then V (T )  V (T ). The vertices of T that belong to T  are called old, and the vertices in V (T ) \ V (T ) are called new. We say that T is a barycentric tree.
Definition 4.1 (Matching Minor Model). Let G and H be graphs with perfect matchings. An embedding or matching minor model of H in G is a mapping
µ : V (H)  E(H)  {F | F  G} ,
such that the following requirements are met for all v, v  V (H) and e, e  E(H): i) µ(v) is a barycentric subtree in G, ii) if v = v, then µ(v) and µ(v) are vertex disjoint,
iii) µ(e) is an odd path with no internal vertex in any µ(v), and if e = e, then µ(e) and µ(e) are internally vertex disjoint,
iv) if e = u1u2, then the ends of µ(e) can be labelled by x1, x2 such that xi is an old vertex of µ(ui),
v) if v has degree one, then µ(v) is exactly one vertex, and vi) G - µ(H) has a perfect matching, where µ(H) := xV (H)E(H) µ(x) for every subgraph
H of H. If µ is a matching minor model of H in G we write µ : H  G.
While we slightly changed the definition here, the next lemma follows immediately from a result of [NT07] and thus we omit the proof.
Lemma 4.2 ([NT07]). Let G and H be graphs with perfect matchings. There exists a matching minor model µ : H  G if and only if H is isomorphic to a matching minor of G.
Lemma 4.3. Let H and G be graphs and µ : H  G be an embedding of H into G. Then H has a perfect matching if and only if µ(H) has a perfect matching.
Proof. Suppose H has a perfect matching. We prove our claim by induction on the number c of bicontractions that have to be applied to µ(H) in order to obtain a graph isomorphic to H. For c = 0 this implies µ(H) = H and H has a perfect matching. So let c  1. Starting with µ(H) let b1, . . . , bc be the bicontractions that need to be applied and Hi be the graph obtained from µ(H) by only applying the bicontractions b1, . . . , bi. Furthermore, let those bicontractions be ordered in such a way that Hc = H and H0 = µ(H), where H0 is the uncontracted graph and moreover Hi is obtained from Hi-1 by applying exactly one bicontraction.
20

Hence H1 is a matching minor of G that also contains H as a matching minor and H can be obtained from H1 by applying b2, . . . , bc, which are c-1 bicontractions, let µ1 be a corresponding matching model of H in H1, then µ1(H) = H1. By our induction hypothesis, H1 has a perfect matching. The transition from µ(H) to H1 is done by applying b1 to µ(H). Let v0 be the vertex in µ(H) that is to be bicontracted by b1, and let v1, v2 be its two unique neighbours, and let v be the new vertex in H1 after the bicontraction. Since H1 has a perfect matching, there is some vertex x  V (H1)  V (µ(H)) such that xv is a perfect matching edge in H1. Therefore, there must be vi with i  {1, 2}, say i = 1, such that xv1 is an edge of µ(H) by the definition of matching models. Let M be some perfect matching of H1 containing xv, then M \ {xv} is a perfect matching of µ(H) - x - v0 - v1 - v2. Let M  := (M  {xv1, v0v2}) \ {xv}, then M  is a perfect matching of µ(H). The reverse direction follows along similar lines and is therefore omitted.
If µ : H  G is a matching minor model of a matching covered graph H in G, then both G - µ(H) and µ(H) have a perfect matching. Let M be a perfect matching of G such that M  E(G - µ(H)) is a perfect matching of G - µ(H) and M  := M  E(µ(H)) is a perfect matching of µ(H). Then there is a perfect matching of H that `mimics' the structure of M  in µ(H). In the following, we explain what we mean with the word `mimics'.
Lemma 4.4. Let G and H be graphs with perfect matchings, µ : H  G, and M a perfect matching of µ(H). Then for every u  V (H), there is a unique vertex v  NH (u) such that µ(uv) is an M -conformal path and for all other edges e  E(H) incident with u their respective model µ(e) is internally M -conformal.
Proof. Let e  E(H) be any edge, then µ(e) is a path of odd length where every inner vertex has degree two in µ(H). Thus for every perfect matching M  of µ(H), µ(e) either is an internally M -conformal path, i.e., M  contains a perfect matching of µ(e) without its endpoints, or M  contains a perfect matching of µ(e). For any vertex u  V (H) let us call t  V (µ(u)) exposed if the edge of M covering t is not an edge of the barycentric tree µ(u). Please note that for every exposed vertex t of µ(u) there must be an edge e  E(H) such that t is an endpoint of µ(e) and the edge of M covering t is an edge of µ(e). Moreover, in this case µ(e) cannot be internally M -conformal and thus must be M -conformal by the observation above. Hence the other endpoint of µ(e), which is a vertex of µ(v) for some v  V (H), must also be exposed. These observations immediately imply that any exposed vertex in µ(u) must be an old vertex. Next, observe that every path P in µ(u) that connects two old vertices and otherwise consists only of new vertices is of even length. Similar to our observation for µ(e), every inner vertex of P must be covered by an edge of E(P )  M . Hence there exists exactly one vertex of P that is not covered by an edge of E(P )  M . So in order to prove our claim, we have to show that for every u  V (H) there is exactly one exposed vertex in µ(u). To do this, we generalise the observation on the even paths within µ(u) we made above. Let T = µ(u) be a barycentric tree and let O be the set of old vertices of T . Moreover, let T  be the tree with V (T ) = O from which T was constructed by subdividing every edge an odd number of times. Then any two old vertices that are adjacent in T  are linked by
21

a path of even length in T . Hence in a proper 2-colouring of T , all vertices of O receive the same colour. Now let e  E(T ) be any edge and Pe the corresponding path in T , moreover let P := Pe - O. Then P is a path of even length as well and thus in a proper 2-colouring of T its endpoints receive the same colour. With P being of even length, it has an odd number of vertices, say 2k + 1, and thus in a proper 2-colouring of T , P has k + 1 vertices whose colour is different from the colour of the old vertices and k vertices with the same colour as the old vertices, combining this with our observation above that in each Pe exactly one vertex is not covered by an edge of E(Pe)  M . This yields that in total |O| - |E(T )| = 1 vertices of T must be exposed by every perfect matching of µ(u).
In the situation of Lemma 4.4 let M be a perfect matching of µ(H), then for every u  V (H) there is a unique vertex v  V (H) such that µ(uv) is M -conformal. Let
M |H := {uv  E(H) | µ(uv) is M -conformal} ,
then M |H is a perfect matching of H. In a slight extension of our definition of residual matching we call M |H the M -residual matching of H. Moreover, we call a matching minor model µ : H  G an M -model of H in G if µ(H) is M -conformal. With this, we obtain the following corollary.
Corollary 4.5. Let G and H be graphs with perfect matchings and M a perfect matching of G. Then H is isomorphic to an M -minor of G if and only if there exists an M -model µM : H  G in G.
4.2 Fundamental Anti-Chains of Butterfly Minors
Recall the definition of M -directions of bipartite graphs and that we argued that the operation can be reversed to yield a unique bipartite graph with a perfect matching when given a digraph D as input. Let us formalise this inverse operation.
Definition 4.6 (Split). Let D be a directed graph. We define S(D) to be the bipartite graph B for which a perfect matching M exists such that D(B, M ) = D.
The digraph J is a proper butterfly minor of the digraph D if J is a butterfly minor of D and J = D. We say that D is J-minimal if S(D) contains S(J) as a matching minor, but for every proper butterfly minor D of D, S(D) is S(J)-free.
Definition 4.7 (Fundamental Anti-Chain). Let D be a digraph. The family
A(D) := D | D is a D-minimal digraph
is called the fundamental anti-chain based on D.
Lemma 4.8. Let D be a digraph. Then A(D) is an anti-chain for the butterfly minor relation.
Proof. Suppose A(D) is not an anti-chain for the butterfly minor relation. Then there must exist D1 and D2 in A(D) such that D1 is a butterfly minor of D2. Indeed, D1 must be a proper butterfly minor of D2, as otherwise the two digraphs would be isomorphic. Since by definition
22

S(D1) contains S(D) as a matching minor, from Lemma 1.14, D2 cannot be D-minimal, which contradicts D2  A(D). Hence A(D) must be an anti-chain for the butterfly minor relation.
Definition 4.9 (Matching Equivalent). Two digraphs D1 and D2 are said to be matching equivalent if S(D1) and S(D2) are isomorphic. Given a digraph D, we denote by M(D) the family of all digraphs that are matching equivalent to D.
Lemma 4.10. Let D be a digraph. Then M(D)  A(D).
Proof. First note that there cannot be a pair of distinct digraphs D1, D2  M(D) such that D1 is a proper butterfly minor of D2. If this were the case, then S(D1) would be a proper matching minor of S(D2), but by definition S(D1) and S(D2) must be isomorphic. Hence M(D) forms an anti-chain for the butterfly minor relation. Moreover, any proper butterfly minor D of some digraph in M(D) must satisfy that S(D) is S(D)-free and thus the claim follows.
...

Figure 4: The anti-chain A(K3).
At last let us prove that excluding S(D) as a matching minor is the same as excluding every digraph in A(D) as a butterfly minor.
Lemma 4.11. Let H and D be digraphs. Then D contains a butterfly minor from A(H) if and only if S(D) contains S(H) as a matching minor.
Proof. Suppose D contains a butterfly minor from A(H), say J, Then by Lemma 1.14 S(D) must contain S(J) as a matching minor, and by definition of A(H), S(J) must contain S(H) as a matching minor. For the reverse, assume S(D) contains S(H) as a matching minor. Then let J be an H-minimal butterfly minor of D. Clearly, J must exist and J  A(H).
4.3 The Strong Genus of Digraphs
Recall our discussion of the Erdos-P´osa property for butterfly minors in Section 1.2 and consider the cylindrical grid D of any order together with a planar embedding. Now zoom in on any vertex v and inspect an open disc  with v at its centre such that  does not contain any other vertex of D. Note that we can draw a curve  through v connecting two points of the boundary of  such that every incoming edge of D incident with v lies on one side of , while every edge emanating from v lies on the other side of . Moreover, note that, by the definition of butterfly minors, every butterfly minor of D must also have a plane embedding with this property. With this we may rule out any planar digraph which does not have such an embedding as a candidate
23

for being a butterfly minor of the cylindrical grid8. See Figure 5 for a strongly connected planar digraph which does not have such an embedding. Moreover, notice that this particular digraph

has exactly two butterfly contractible edges and by contracting both of them one obtains K3.
Figure 5: A strongly connected and planar digraph that has no strong embedding.
Let us formally introduce this concept. The definitions given here only scratch the surface of topological graph theory, see [Sta78, Arc96] for broader introduction and an overview of the topic. Let G be a graph or digraph. Then G corresponds to a topological space called the geometric realisation of G. In this space the vertices are distinct points and the edges are subspaces homeomorphic to the closed interval [0, 1] over the real numbers9 joining their endpoints. An embedding of G into some topological space X is a homeomorphism between the geometric realisation of G and a subspace of X. In a slight abuse of notation we use G for both the graph G and its geometric realisation. A surface is a compact Hausdorff topological space which is locally isomorphic to R2. There are two ways to construct these surfaces; either take a sphere and attach n  N handles to it, or take a sphere and attach m  N crosscaps. Let us denote by n the surfaces of the first kind and by ~ m the surfaces of the second kind.
Theorem 4.12 ([Bra21]). The surfaces in {n | n  N} and ~ M | m  N, m  1 are pairwise non-homeomorphic and every surface is homeomorphic to a member of one of these two families.
A surface  is orientable and of orientable genus n if it is homeomorphic to n. Similarly,  is non-orientable and of non orientable genus m if it is homeomorphic to ~ m. A 2-cell embedding or map of a (di)graph G is an embedding in which every face is homeomorphic to an open disk. The genus of a (di)graph G is the smallest integer g  N such that G can be embedded in g, and its non-orientable genus is the smallest integer g  N such that G can be embedded in ~ g. The Euler genus of G, denoted by genus(G), is the smallest integer h  N such that G can be embedded in  h or ~ h.
2
Let G be a (di)graph embedded in a surface , v  V (G) a vertex and    an open disc centred at v such that every edge of G incident with v contains exactly one point from the boundary  of . Let F  E(G) be the edges incident with v and {F1, F2} be a bipartition of F . For each f  F let pf   be the point that f has on the boundary of . We say that (F1, F2) is a butterfly in  if there exists a curve  through v in  with both endpoints, x and y on  such
8In Figure 3 however, one can see a digraph that has such an embedding and still is not a butterfly minor of the cylindrical grid.
9In this instance we do not use our definition of [0, 1] as the set {0, 1}.
24

that we can number the two internally disjoint curves 1   and 2   with endpoints x and y to obtain {pf | f  Fi}  i for both i  [1, 2].
Definition 4.13 (Strong Embedding). Let D be a digraph and  be a surface. An embedding µ : D   of D into  is strong if for every vertex v  V (D) there exist rv  R and an open disc    of radius rv centred at v such that
({(u, v) | (u, v)  E(D)} , {(v, u) | (v, u)  E(D)})
is a butterfly in . The smallest integer h  N such that D can be strongly embedded in  h or ~ h is called the
2
strong genus of D. We denote the strong genus of D by sgenus(D). If sgenus(D) = 0, D is said to be strongly planar.
Note that the strong genus of a digraph D is closed under vertex and edge deletion. Moreover, let e = (u, v) be a butterfly contractible edge of D and assume D is strongly embedded into some surface . By definition of butterfly minors (u, v) is the only outgoing edge of u, or the only incoming edge at v. In both cases, after adjusting the embedding of D into  for the digraph D obtained from D by contracting e, the incoming and outgoing edges of the contraction vertex w still form a butterfly in some open disc in  centred at w. Hence we have the following observation.
Observation 4.14. Let D be a digraph and D be a butterfly minor of D, then sgenus(D)  sgenus(D).
The strong genus of digraphs is closely linked to the Euler genus of their splits.
Proposition 4.15. Let B be a bipartite graph with a perfect matching M and D := D(G, M ). Then genus(B) = sgenus(D).
Proof. First let g := genus(B) and consider an embedding of B into a surface  such that  = 2g if B has an embedding in 2g, and  = ~ g otherwise. Now contract the edges of M and let ab  M be any edge. Note that we may find an open disc    and a curve  through a such that {{ab} , {ax | ax  E(B - b)}} is a butterfly in . Indeed, the same holds true if we swap a and b. Hence after contracting ab into the vertex vab, {{vabx | ax  E(B - b)} , {vabx | bx  E(B - a)}} is a butterfly in  and thus D has a strong embedding in . For the reverse let h := sgenus(B) and consider a strong embedding of D into a surface  such that  = 2h if D has a strong embedding in 2h, and  = ~ h otherwise. Consider S(D) and let M be the perfect matching of S(D) such that D is the M -direction of S(D). Adapt the embedding of D in  for S(D) by placing the two endpoints of each edge in M as close together as possible. Let v  V (D) be any vertex and ev = ab  M the corresponding matching edge in S(D) with a  V1. Since, in our embedding of D in , the out- and incoming edges at every vertexv  V (D) form a butterfly, this butterfly induces a bipartition of the edges of S(D) incident with the endpoints of ev that resembles this butterfly. Hence the edge ab can be added to the embedding without producing a crossing.
25

Hence we obtain the following immediate corollary which was implicitly stated in [RST99, GT11].
Corollary 4.16 ([RST99, GT11]). A digraph D is strongly planar if and only if S(D) is planar.
Strongly Planar Digraphs and Butterfly Minors of the Cylindrical Grid It can be observed, as described above, that the cylindrical grid is strongly planar. Still strong planarity does not seem to be enough as the digraph in Figure 3 is also strongly planar10 but not a butterfly minor of the cylindrical grid. So for fixed digraphs there probably is no analogue of Theorem 1.3. If, however, we consider fundamental anti-chains, we can produce very similar results.
Proposition 4.17. Let D be a strongly connected digraph. Then D is strongly planar if and only if A(D) contains a butterfly minor of the cylindrical grid.
Proof. Let us assume D to be strongly planar. Then B := S(D) is planar and matching covered. By Theorem 1.3 B is a matching minor of the B × B-grid. The B × B-grid however is a matching minor of CG3B by Lemmata 5.3 and 5.4. Let G be the cylindrical grid of order 3B, then S(G) = CG3B and thus, by Lemma 4.11 G must contain a butterfly minor H which is a member of A(D). For the reverse direction let us assume there is H  A(D) such that H is a butterfly minor of the cylindrical grid. That means for some k  N, the cylindrical grid of order k, let us call it G, contains H as a butterfly minor. By Lemma 1.14 this means that S(G) = CGk contains S(H) as a matching minor. As S(D) is a matching minor of S(H) and S(H) is a matching minor of a planar graph, S(D) must be planar and therefore D is strongly planar.
There is an immediate consequence of Proposition 4.17 which we state without proof. A proof for the matching theoretic analogue can be found in Section 5.
Corollary 4.18. Let D be a proper butterfly minor closed class of digraphs. Then D has bounded directed treewidth if and only if there exists a strongly connected strongly planar digraph H such that no member of D contains a digraph from A(H) as a butterfly minor.
5 The Erdos-P´osa Property for Matching Minors
In Section 5.1 we present a proof of Theorem 1.2 based on Theorem 1.3. We then continue to show that every bipartite and planar matching covered graph has the matching Erdos-P´osa property for matching minors by adapting techniques from the original proofs to the setting of matching covered bipartite graphs. For the reverse however, the nature of the matching Erdos-P´osa property prevents us from doing the same. Instead, in Section 5.2 we use our insight on fundamental anti-chains of butterfly minors to present a version of the Erdos-P´osa property that interacts with anti-chains instead of a single graph. A nice pay off from this approach allows us to replace `butterfly minor of the cylindrical grid' by the purely topological condition of being strongly planar.
10In fact every subcubic digraph that is planar is necessarily strongly planar.
26

5.1 Planarity and Grids
The most important step towards Theorem 1.2 after the grid theorem itself is Theorem 1.3. To achieve this goal, we make use of the iterative construction for bipartite matching covered graphs in the form of ear decompositions. For this any ear we add to our graph will in fact be an internally M -conformal path for some perfect matching M . Moreover, one can observe that any bipartite matching covered graph B has an ear decomposition and a perfect matching M , such that the conformal cycle B2 obtained from K2 by adding the first ear is M -conformal in B, and every Bi obtained from adding an additional ear P has the property that P is internally M -conformal. Additionally, in case B is bipartite, matching covered, and planar, we can choose an ear decomposition as above in such a way that Bi+1 can be drawn in the plane and the newly added ear is part of the boundary of a face. Let us quickly introduce the necessary notions and results.
Definition 5.1 (Ear). Let B be a bipartite graph with a perfect matching. A ear is a path P of odd length such that all internal vertices, if there are any, of P have degree two in B. Let M be a perfect matching of G. The path P is a M -ear if it is internally M -conformal and an ear.
Theorem 5.2 (Theorem 4.1.6 in [LP09]). Given any bipartite matching covered graph B, there exists a sequence B1  B2  · · ·  Bt of matching covered conformal subgraphs of B, such that B1 = K2, Bt = B, and Bi+1 is obtained from Bi by adding an ear of Bi+1 for all i  [1, t - 1].
A sequence as in the above theorem is called a bipartite ear-decomposition. Towards Theorem 1.3 we first need a refined version of Theorem 1.1. Let CGk be the cylindrical matching grid of order k. The canonical internal quadrangulation CGk of CGk is defined as the graph obtained from the cylindrical grid by adding the following edges.
vji vji++11 | i  [1, k - 1] and j  {2, 4, . . . , 4k}
See Figure 1 for an illustration.
Lemma 5.3. Let k  N be a positive integer. The cylindrical matching grid CG3k contains CGk as a matching minor.
Proof. We describe how to create a model µ : CGk  CG3k. First let i  {3 - 1 | 1    k} and j  [1, k], we define models for four vertices aij,down, bij,up, aij,up, and bij,down. See Figure 6 for an illustration on how the models of these vertices will be arranged in CG3k.
µ(aij,down) :=(v1i +12(j-1), v2i +12(j-1), v3i +12(j-1))  (v3i-+112(j-1), v4i-+112(j-1), v3i +12(j-1)) µ(bij,up) :=(v4i +12(j-1), v5i +12(j-1), v6i +12(j-1))  (v4i +12(j-1), v3i++112(j-1), v4i++112(j-1)) µ(aij,up) :=(v7i +12(j-1), v8i +12(j-1), v9i +12(j-1))  (v9i +12(j-1), v1i+0+1 12(j-1), v9i++112(j-1))
µ(bij,down) :=(v1i 0+12(j-1), v1i 1+12(j-1), v1i 2+12(j-1))  (v1i-0+1 12(j-1), v9i-+112(j-1), v1i-0+1 12(j-1))
27

Figure 6: The canonical internal quadrangulation of CG4 as a matching minor of CG12.
As a next step we add models for the edges of the concentric cycles of CGk , here we identify bi0,down with bik,down and v0i with v1i 2k.
µ(bij-1,downaij,down) :=v1i 2+12(j-2)v1i +12(j-1) µ(aij,downbij,up) :=v3i +12(j-1)v4i +12(j-1) µ(bij,upaij,up) :=v6i +12(j-1)v7i +12(j-1) µ(aij,upbij,down) :=v9i +12(j-1)v1i 0+12(j-1)
This in particular means that Ci  µ(CGk ) for all i  {3 - 1 |   [1, k]}. Next we connect the cycles, so let i  {3 - 1 |   [1, k - 1]}.
µ(bij,upaij+,d3own) :=v4i++112(j-1)v3i++212(j-1) µ(aij,upbij+,d3own) :=v9i++112(j-1)v1i+0+2 12(j-1) Compare figures 6 and 7 to see how our model µ so far describes CGk as a matching minor of C G3k .
28

v1i+0+4 12(j-1) bij+,d3own
v1i+0+2 12(j-1) v1i+0+1 12(j-1) bij,down
v1i-0+1 12(j-1)

v9i++412(j-1) v4i++412(j-1) aij+,u3p

bij+,u3p

v9i++212(j-1) v4i++212(j-1)

v9i++112(j-1) aij,up

v4i++112(j-1)

bij,up v9i-+112(j-1) v4i-+112(j-1)

v3i++412(j-1) aij+,d3own
v3i++212(j-1) v3i++112(j-1)
aij,down v3i-+112(j-1)

Figure 7: The situation of the up- and down- vertices in the model of CGk and the models of the edges of its CGk-subgraph.

In the next step we describe how to build the models for the new edges that we need to add to our CGk to form the canonical inner quadrangulation. We identify bi0,down and bik,down.
µ(bij,upaij+,u3p) :=(v4i++112(j-1), . . . , v8i++112(j-1), v7i++212(j-1), v8i++212(j-1), v7i++312(j-1)) µ(bij-1,downaij+,d3own) :=(v1i 2+12(j-2), v1i+1+1 12(j-2), v1i+2+1 12(j-2), v1i+1+2 12(j-2), . . . , v3i++212(j-1))
For an illustration compare Figure 8. Moreover, from the construction, it is clear that the model of every edge of CGk is an internally M -conformal path, where M is the canonical matching of CG3k. Also, the model of every vertex is a barycentric tree with exactly one exposed vertex. So in total µ is a matching minor model of CGk in CG3k.

µ(aij+,u3p)

v7i++312(j-1)

µ(aij+,d3own)

v8i++212(j-1) v7i++212(j-1)

v8i++112(j-1)

v6i++112(j-1)

v7i++112(j-1)

v5i++112(j-1)

µ(bij,up)

v3i++212(j-1)

v1i++212(j-1) v1i+1+2 12(j-2)

v2i++212(j-1)

v1i+2+2 12(j-2)

v1i+2+1 12(j

v1i+1+1 12(j
-2)

-2)

µ(bi(j-1),down)

v1i 2+12(j-2)

Figure 8: The models for the new edges forming the inner quadrangulation of CGk.

At last we find the 2k × 2k-grid as a matching minor in an inner quadragulation of a cylindrical matching grid of appropriate size.

Lemma 5.4. If k  N is even, CGk contains the k × k-grid as a matching minor.

29

Proof. Let M be the canonical perfect matching of CGk and let V1, V2 be the two colour classes of CKk such that v11  V1. We create a new perfect matching M  for CGk by "switching" M along every second of the concentric cycles. Formally let

k

k

M  := (M \

E(Ci)) 

(E(Ci) \ M ).

i=2, even

i=2, even

In the following, we describe how to construct a matching minor model of the k×k-grid iteratively from a C4 in CGk by extending the model by small building blocks. A piece is one of the following three configurations:
· A base piece Bi,j starting on the vertex vji  V2. It consists of the two paths

(vji , vji+1, vji+2, vji+3, vji+4) and (vji++11, vji++12, vji++13, vji++14, vji++15)
together with the edges vji vji++11, vji+3vji++14, and vji+4vji++15. · A width piece Wi,j starting on the vertex vji  V1. It consists of the three paths

(vji , vji+1, vji+2, vji+3, vji+4), (vji++11, vji++12, vji++13, vji++14, vji++15), and (vji++22, vji++23, vji++24, vji++25, vji++26)
together with the edges vji vji++11, vji+1vji++12, vji+4vji++15, vji++11vji++22, vji++14vji++25, and vji++15vji++26. · And a height piece Hi,j starting on the vertex vji  V2. It consists of the three paths

(vji , vji+1, vji+2, vji+3, vji+4, vji+5, vji+6, vji+7), (vji++11, vji++12, vji++13, vji++14, vji++15, vji++16, vji++17, vji++18), and
(vji++24, vji++25, vji++26, vji++27, vji++28, vji++29)
together with the edges vji vji++11, vji+3vji++14, vji+4vji++15, vji+7vji++18, vji++13vji++24, vji++14vji++25, vji++17vji++28, and vji++18vji++29. As a first step, we show how to create a model of the 4 × 4-grid from a specific C4 in CG4 , see Figure 9 for an illustration.
Let us choose as the C4 the one induced by v11, v21, v22, v32 . Then take the height piece H2,2 and the base piece B1,2 and let G4 be the graph obtained by the union of H2,2, B1,2, and the C4 chosen above. The vertex vji with the largest j in G4 is v141 and thus, since each Ci has 16 vertices, none of the horizontal paths in G4 closes a cycle. More over, if we now bicontract the vertices v41, v42, v43, v82, v83, and v84, we obtain exactly the 4 × 4-grid. Note that, by construction, G4 is in fact M -conformal in CG4 and thus we have found our desired matching minor. So now assume that for some even k we have already constructed an M -conformal graph Gk in CGk+2 by using our pieces and starting with the C4 on the vertices v11, v21, v22, v32 . In the last step of this proof, we show how to extend Gk to Gk+2, a bisubdivision of the (k +2)×(k +2)-grid. Let k = 2z, we add the following pieces:

30

Figure 9: A model of the 4×4-grid in CG4 (on the left) and a close-up of the model (on the right), in which the white vertices of degree two that should be bicontracted are encircled.
· the base piece B1,4z-6 and the height piece H2(z-1),4z-6, · for every i  [1, z - 2] the width piece W2i,4(z+i)-7, and · for every j  [1, z - 2] the width piece W2z-2,4(z+j)-3. Since Gk is M -conformal, the graph Gk+2 obtained by adding the above pieces still is M conformal by construction. Consider the set
Sk+2 := vi1 | j  [3, k + 2], i odd  v1j2 | j  [2, k + 2], j even ,
Every vertex in Sk+2 has degree two in Gk+2 and thus is bicontractible. Bicontracting all vertices in Sk+2 yields the desired (k + 2)-(k + 2)-grid.
We are finally ready to prove our refined grid theorem for bipartite graphs with perfect matchings.
Proposition 5.5. There exists a function gm : N  N such that for every k  N and every bipartite graph B with a perfect matching either pmw(B)  gcyl(k) or B contains the 2k × 2kgrid as a matching minor.
Proof. We set gm(k) := gcyl(6k) for every k  N. Suppose pmw(B) > gm(k). Then by Theorem 1.1, B contains CG6k as a matching minor. Using Lemma 5.3 yields that B contains CG2k as a matching minor, and finally Lemma 5.4 lets us find the 2k × 2k-grid as a matching minor within CG2k. This completes the proof.
Proof of Theorem 1.3. Let B be a bipartite, matching covered and planar graph. Moreover, for any even k, let M be the residual perfect matching obtained by the strategy for finding the 2k × 2k-grid as a matching minor of CG2k as described in the proof of Lemma 5.4. Instead of proving the claim directly, we show that k can be chosen large enough such that B is a matching minor of the 2k × 2k-grid. The claim then follows from lemmata 5.3 and 5.4, and the transitivity of the matching minor relation. We prove the claim by induction on the number of ears in an ear decomposition of B and strengthen it in the sense that we claim that there always exists an M -conformal matching minor model. As a base consider a single cycle of even length . Clearly each such cycle is actually contained as an M -conformal bisubdivision in the  × -grid, where  is the smallest
31

natural

number

satisfying

 2



.

So

let

K2

=

B1



B2



···



Bt

be

an

ear

decomposition

of

B. By the induction hypothesis, there exists an even number Bt-1 such that Bt-1 is a matching

minor of the Bt-1 × Bt-1-grid. Let µ be an M -conformal matching minor model of Bt-1 in

said grid. Let P be the ear that, added to Bt-1, creates Bt = B. Then the canonical embedding

of the grid in the plane induces an embedding of µ(Bt-1) in the plane and there exists a face

f of said drawing that corresponds to the face of Bt-1 in which P must be placed. Since P is

non-empty, f must have more than four vertices, and thus there must exist a C4 in the interior

of f in the grid. Moreover, since µ(Bt-1) is M -conformal, there must exist such a C4, say C,

that does not contain a single edge of M .

We now draw two orthogonal lines through the centre of C, 1 in parallel to the columns of
our grid and 2 in parallel to the rows of the grid. Each of the two i can now be associated
with an edge cut of the grid, containing only edges not in M . Together 1 and 2 partition the
grid into four quadrants, see Figure 10 for an illustration. Let us say that the shores of 1 are X1  X2  V (B) and Y1  Y2  V (B), while the shores of 2 are X1  Y1 and X2  Y2. Please note
that each of the Xi and Yi is M -conformal. Moreover, let us fix X1 to be the top left quadrant
and Y2 to be the bottom right one.
Now let H be the (Bt-1 + p) × (Bt-1 + p)-grid where p = |V (P )|, note that p is even, and let us map the vertices of the Xi and Yi to the four corners of H, let Xi and Yi be the corresponding vertex sets in H, let h be said mapping. Let us furthermore extend M to the corresponding perfect matching of H. In order to extend µ to a model of Bt-1 in H we need to replace the
edges in the two cuts 1 and 2 by internally M -conformal paths connecting X1 with X2 and Y1 with Y2. In case µ uses two vertical edges incident with the two endpoints of an edge of M , this might not be possible. To deal with this problem we apply a further blow-up to H, namely we double its width. Let H be the (Bt-1 + p) × (3Bt-1 + p - 4)-grid obtained from H as follows. First, let x  N be the number of columns in H[X1]. Then let ZX be the p × x-grid made up of the vertices in the columns of H that connect h(X1) and h(X2). Let ZY be defined analogously,
see Figure 10 for an illustration.

For every W  {X, Y } take HW := H[W1 WW W2], then subdivide every horizontal edge and complete each thereby newly created column to a path. For every vi,j of HW , 1  i  Bt-1 + p, 1  j  x - 1, we thereby created two new vertices vi1,j and vi2,j subdividing the edge vi,jvi,j+1.
Similarly for every 1  i  Bt-1 + p and every x + p + 1  j  Bt-1 + p - 1. Let us again
adapt M to be the canonical extension of the perfect matching we used for H.

We now describe how to extend µ to H. Let v  V (Bt-1) and ui,j  V (µ(v)), then let h(ui,j) = vi,j. Every edge ui,jui,j  E(µ(v)) with i  {i - 1, i + 1} is replaced by the edge h(ui,j)h(ui,j). We extend the model of v by the path (vi,j, vi1,j , vi2,j) if j  n | 1  n  x - 1, or x + p + 1  n  Bt-1 + p - 1 , and every edge ui,jui,j+1  E(µ(v)) \ 1 is replaced by the edge vi2,jh(ui,j+1). If there is an edge ab  E(µ(v))  1, we replace this edge by the horizontal and internally M -conformal h(a)-h(b)-path in H. At last, an edge ab  E(µ(v))  2 is replaced by a vertical h(a)-h(b)-path in H. This path has to use
vertices from at most two columns and may go to the left (in decreasing j direction) if and only

if h(a) and h(b) are in the column x or Bt-1 + p.
Now let uw  E(Bt-1). If uijui,j+1  E(µ(uw)) \ 1, then let vi,j := h(uij) and we replace the edge by the path (vi,j , vi1,j, vi2,j , vi,j+1) where vi,j+1 = h(ui,j+1). Edges uijui,j+1  E(µ(uw))

32

Figure 10: Expanding a grid together with a model of an even cycle to add an ear. The small marked C4 is replaced by a large grid which then is extended to make a new quadratic grid. Then the old model is extended by routing through the new part and lastly the ear is routed through the newly added central grid.
1 are replaced by the unique internally M -conformal horizontal h(ui,j)-h(ui,j+1)-path in H. An edge ab  E(µ(uw))  2 is replaced by a vertical h(a)-h(b)-path in H. This path has to use vertices from at most two columns and may go to the left (in decreasing j direction) if and only if h(a) and h(b) are in the column x or Bt-1 + p. At last, a vertical edge ab  E(µ(uw)) \ 2 will simply be replaced by h(a)h(b). In total let µ be the matching minor model of Bt-1 constructed following the rules above. It is straight forward to check that µ(Bt-1) is M -conformal. By construction there exists a p × p-grid F in the face f  of µ(Bt-1) corresponding to the face f we chose in µ(Bt-1). As a last step, we have to add an internally M -conformal path P to our matching minor model in order to form a matching minor model µ of B. Let a, b  V (Bt-1) be the endpoints of P , then both µ(a) and µ(b) must have an old vertex on f . After possibly stretching the model of f  a bit we can find disjoint internally M -conformal paths from a and b to F , let a and b be their respective endpoints. Since F is a p × p-grid we can easily find an internally M -conformal a-b-path P  within F . This path P  together with µ forms our desired matching minor model µ of B in H. At last note that H is a conformal subgraph of the (3Bt-1 + p - 4) × (3Bt-1 + p - 4)-grid and thus we are done.
5.2 The Erdos-P´osa Property for Butterfly Minor Anti-Chains
With Proposition 4.17 we have an exact description of all strongly connected digraphs D for which A(D) contains a butterfly minor of the cylindrical grid. Moreover, since recognising strongly planar digraphs is equivalent to recognising planar bipartite graphs with perfect match-
33

ings, we can recognise these digraphs in polynomial time. Let us define a generalised version of the Erdos-P´osa property for digraphs based on canonical anti-chains.
Definition 5.6 (Generalised Erdos-P´osa Property for Butterfly Minors). Let H be a strongly connected digraph. We say that H has the generalised Erdos-P´osa property for digraphs if there exists a function f : N  N such that for every k  N, every digraph D either contains k pairwise disjoint subgraphs such that each of them has a butterfly minor isomorphic to some member of A(H), or there exists a set S  V (D) with |S|  f (k) such that D - S does not contain a digraph from A(H) as a butterfly minor.
Our digraphic analogue of Theorem 1.5 is as follows. In the forward direction of the proof we use a generalised argument similar to the one used to proof the forward direction of [AKKW16], while for the reverse we also adapt the strategy from [AKKW16], this time we stick even closer to the original.
Theorem 5.7. A strongly connected digraph D has the generalised Erdos-P´osa property for butterfly minors if and only if D is strongly planar.
Proof. Given a strongly connected strongly planar digraph D let us denote by D the smallest integer w such that A(D) contains a butterfly minor of the cylindrical grid of order w. Note that for any positive integer k  N the cylindrical grid of order kD contains k pairwise vertex disjoint subgraphs, all of which contain a digraph from A(D) as a matching minor. Let us recursively define the function fD : N  N for the generalised Erdos-P´osa property, where fD(0) := 0, and for k  1 let
fD(k) := fD(k - 1) + gdir(kD) + 1.
Now if dtw(D)  gdir(kD) + 1, then by the Directed Grid Theorem [KK15] D contains the cylindrical grid of order kD as a butterfly minor and thus, as discussed above, D contains k pairwise disjoint subgraphs, each of which contain a digraph from A(D) as a butterfly minor. So we may assume D to have a directed tree decomposition (T, , ) of width at most gdir(kD). Let us choose t  V (T ) such that D[(Tt)] contains a butterfly minor isomorphic to some member of A(D), but for all t  V (Tt) with t = t, D[(Tt)] does not contain any digraph from A(D) as a butterfly minor. If no such t exists, D does not contain a digraph from A(D) as a butterfly minor and thus we are done immediately. Indeed, we may use this case as the base case k = 0 of our induction. Hence we may assume k  1 and thus t exists. Then |(t)|  dtw(D) + 1  gdir(kD) + 1 and every butterfly minor of D[(t)] that belongs to A(D) must contain a vertex of (t). By induction we either find k -1 pairwise vertex disjoint subgraph of D -(Tt) all of which have a member A(D) as a butterfly minor, or there is a set S of vertices with |S|  fD(k - 1) such that D - (t) - S has no member of A(D) has a butterfly minor. In the first case, all k - 1 subgraphs are vertex disjoint from D[(Tt)] and thus we are done. Otherwise |(t)  S|  fD(k), and we are also done. Therefore every strongly connected strongly planar digraph D has the generalised Erdos-P´osa property for butterfly minors. For the reverse direction let H be a strongly connected digraph which is not strongly planar. For each k  N, k  1, we construct a digraph DH,k which contains no two disjoint subgraphs that
34

have a digraph from A(H) as a butterfly minor, but where one must delete at least k vertices
to remove all occurrences of members of A(H) as butterfly minors in DH,k. Since k is arbitrary, this proves that no non-strongly planar digraph can have the generalised Erdos-P´osa property
for butterfly minors. Let Gk be the cylindrical grid of order k and let C1 be the outer-most of its concentric cycles. Let us select e1 = (v11, v21), e2 = (v31, v41), . . . , (v21k-1, v21k)  E(C1), where we identify v21k and v01. Then let e = (u, v)  E(H) be an arbitrary edge. We introduce k pairwise vertex disjoint copies H1, . . . , Hk of H and denote the copy of (u, v) in Hi by (ui, vi) for all i  [1, k]. Then DH,k is defined as the digraph obtained by deleting the edges (ui, vi) for every i  [1, k] and introducing the edges (ui, v21i) and (v21i-1, vi) for each i  [1, k]. Again we identify v21k and v01. See Figure 11 for an illustration

H2

H1

H3

H4

Figure 11: A sketch of the construction of DH,4 in the proof of Theorem 5.7.
First notice that any strongly connected subgraph K of DH,k such that K has a butterfly minor among A(H) would need to contain a path from v21i to v21i-1. To see this observe that any strongly connected subgraph K of DH,k without such a path would either be a proper subgraph of Hi for some i  [1, k] and as |V (J)|  |V (H)| and |E(J)|  |E(H)| for all J  A(H) K could not have a butterfly minor among A(H), or K would be a subgraph of Gk. But since H is strongly planar, A(H) cannot contain a butterfly minor of the cylindrical grid by Proposition 4.17. Let P be a path from v21i to v21i-1 as mentioned above. Note that for every j  [1, k] \ {i}, DH,k - P does not contain a path from v21j to v21j-1. Hence DH,k - P does not have a butterfly minor among the graphs in A(H) and thus DH,k cannot have two vertex disjoint subgraphs which each contain a butterfly minor from A(H). On the other hand, let S  V (DH,k) be a set of at most k - 1 vertices. Then there must be some i  [1, k] such that S does not contain a vertex from Hi, and there is a directed path Q from v21i to v21i-1 in Gk. Hence Hi + (ui, v21i) + Q + (v21i-1, vi) - (ui, vi) is a subgraph of DH,k - S and it contains H as a butterfly minor and our proof is complete.

35

5.3 Proving Theorem 1.5

The primary goal of this section is the establishment of Theorem 1.5. As pointed out in the introduction, the Erdos-P´osa property for matching minors does not necessarily ask for a hitting set as sometimes deleting a certain conformal set of vertices might destroy some perfect matchings in B and thereby render existing matching minor models non-conformal any more without actually hitting them. Due to this it is not obvious whether the approach used to prove the undirected analogue can be applied for the reverse of Theorem 1.5. So we take a different route and link the Erdos-P´osa property for matching minors directly to the generalised Erdos-P´osa property for butterfly minors. By doing so, Theorem 1.5 follows immediately from Theorem 5.7 and the following.

Proposition 5.8. Let H be a matching covered bipartite graph. The following statements are equivalent:
i) H has the Erdos-P´osa property for matching minors ii) D(H, M ) has the generalised Erdos-P´osa property for butterfly minors for some M 
M(H), and iii) D(H, M ) has the generalised Erdos-P´osa property for butterfly minors for every M 
M(H ).

Proof. To prove the assertion we take the following route: First we show that (i) implies (ii),

then we deduce (iii) from (ii), and finally we show that (iii) implies (i) which completes the

proof.

So let us assume H has the Erdos-P´osa property for matching minors and let H : N  N be the associated function. Let us choose MH  M(H) and set DH := D(H, MH ). Then let D be any digraph, B := S(D) and M  M(B) such that D = D(B, M ). Notice that D has k pairwise

disjoint subgraphs, all of which contain some member of A(DH ) as a butterfly minor, if and only if B has k pairwise disjoint M -conformal subgraphs all of which contain H as a matching minor.

So in case D does not have k pairwise disjoint such subgraphs, there must be an M -conformal set

SH  V (B) with |SH |  H (k) such that B - SH does not contain H as a matching minor. Let

F

:=

M



E(B[SH ]).

Then,

as

SH

is

M -conformal,

we

have

|F |



1 2

H

(k),

and

by

Lemma

4.11

D - F does not contain any digraph from A(DH ) as a butterfly minor. As our choice of D was

arbitrary,

we

may

set

fDH

:=

1 2

H

and

thus

DH

has

the

generalised

Erdos-P´osa

property

for

butterfly minors.

Now let us assume there is MH  M(H) such that DH := D(H, MH ) has the generalised Erdos-P´osa property for butterfly minors. Let MH  M(H) \ {MH } and DH := D(H, MH ).
Since the generalised Erdos-P´osa property for butterfly minors only cares about A(DH ) and not
necessarily about DH itself, it suffices to show A(DH ) = A(DH ). Consider a digraph J  A(DH ). Then every proper butterfly minor J of J has the property that S(J) does not contain H as

a matching minor, while S(J) does contain H as a matching minor. Therefore, J must be DH minimal and thus J  A(DH ). With the same argument one can also obtain A(DH )  A(DH ) and our claim follows.

So at last we may assume D(H, MH ) has the generalised Erdos-P´osa property for butterfly minors for every MH  M(H) and let us fix any MH  M(H). Let DH := D(H, MH ), and let

36

fDH : N  N be the function associated with the generalised Erdos-P´osa property for butterfly minors of DH . Let B be any bipartite graph with a perfect matching M . As before, B contains k pairwise disjoint M -conformal subgraph, all of which have H as a matching minor, if and only if D := D(B, M ) contains k pairwise disjoint subgraphs, all of which have a butterfly minor from A(DH ). So in case B does not have k such M -conformal subgraphs, then D does not have k such subgraphs either and thus there must exist a set SH  V (D) with |SH |  fDH (k) such that D - SH does not have any butterfly minor isomorphic to a member of A(DH ). Note that SH  M and thus |V (SH )|  2fDH (k), and V (SH ) is an M -conformal set of vertices in B. Moreover, by Lemma 4.11 we know that B - V (SH ) does not have H as a matching minor. So by setting H := 2fDH we have found a function that witnesses the Erdos-P´osa property for matching minors of H.
6 Algorithmic Applications of Perfect Matching Width
The majority of this section is dedicated to solve a matching theoretic version of the t-Disjoint Paths Problem. Towards this goal we need to solve several small subproblems, including the computation of a bounded width perfect matching decomposition with additional properties, which is done in Section 6.1. As a special case we obtain Theorem 1.6 from this. In Section 6.2 we then discuss the dynamic programming for the matching theoretic linkage problem. Finally, in Section 6.3, we present the dynamic programming necessary for Theorem 1.8. The proofs to all other algorithmic results announced in the introduction can be found in Section 6.4. Before we discuss the computation of a decomposition of bounded perfect width, we need to make some preliminary observations regarding the matching theoretic Linkage Problem. We start with a formal definition.
Definition 6.1 (The Bipartite k-Disjoint Alternating Paths Problem). Let B be a bipartite graph with a perfect matching, k  N a positive integer, and s1, . . . , st  V1, t1, . . . , tk  V2, called the terminals. The question whether there exists a perfect matching M of B and internally M -conformal paths P1, . . . , Pk in B which are pairwise internally disjoint and for all i  [1, k], Pi has endpoints si and ti is called the bipartite k-disjoint alternating paths problem (k-DAPP).
From here on, most of our effort is directed towards proving the following statement.
Proposition 6.2. Let B be a bipartite graph with a perfect matching, k  N a positive integer and I a family of k terminal pairs. There exists an algorithm that decides in time |V (B)|O(k+pmw(B)2) the k-DAPP with input I on B.
Let B be a bipartite graph with a perfect matching and I = {(s1, t1), . . . , (sk, tk)} a family of terminal pairs. Let M be a perfect matching of B and P = {P1, . . . , Pk} a family of internally disjoint and internally M -conformal paths in B such that Pi has endpoints si and ti for every i  [1, k]. We call (M, P) a solution for I. Let W  E(B) be a matching. A solution (M, P) for I in B extends W if W  M and every terminal is matched by some edge in W . A problem that needs to be addressed before we go any further is that our terminals are not necessarily distinct. In some cases this might lead to problems for the way our algorithm works.
37

Before we continue, let us discuss how we get around this issue. Notice the following: Let x  V (B), be a vertex that occurs in at least one pair of I and let us denote the total number of occurrences of x as a terminal by multi(a). Then in every solution (M, P), every path P  P that connects x to some other terminal must end in an edge that is not contained in M and connects x to some neighbour x of x. Moreover, the edge of M covering x cannot be contained in any P  P. Hence we may pick a collection of multi(x) many neighbours of x, select an extendable matching W  that covers the selected vertices, but not x, and now for each of these edges pick the endpoint not adjacent to x. Each of these picked vertices belong to the same colour class as x. For our graph B let V1  V1 \ {s1, . . . , sk} and V2  V2 \ {t1, . . . , tk} be selections of such vertices together with the extendable set of all matching edges W  covering these new vertices. Note that W  must be chosen such that W  W  is extendable. For every (si, ti)  I now select a vertex si  V1 and ti  V2 that is a neighbour of si, ti respectively. Then we have formed a distinct family I of k terminal pairs and therefore we may now consider an instance of the bipartite k-matching linkage problem instead. Let us now formalise the above discussion. Given a family of terminal pairs I = {(s1, t1), . . . , (sk, tk)} and an extendable set W such that all terminals are matched by W and every edge of W matches a terminal, we call a pair (I, W ) a (I, W )-proxy if
i) I = {(s1, t1), . . . , (sk, tk)} is a family of k terminal pairs where si = sj and ti = tj for every choice of distinct values for i, j  [1, k] (we call such a family distinct),
ii) W   W is extendable, every terminal of I is matched by some edge of W , every edge of W  matches a terminal of I, and W  W  = , and
iii) for every i  [1, k], if siv  W , then v is a neighbour of si and if vti  W , then v is a neighbour of ti.
It might happen, that si and ti of the original instance are already adjacent, in such cases, we might have to consider additional cases of smaller instances, where the edge siti is already one of the paths in a possible solution. Indeed, without loss of generality, we may always assume siti to be part of our solution and thus the terminal pair (si, ti) does not need to be considered. Hence we may assume all terminal pairs to be non-adjacent. A perfect matching decomposition (T, ) is safe for W and I if every W -extending solution P for I satisfies the following inequality for every e  E(T ):
|B(e)  E(P )|  2 width(T, ).
P P
The high level strategy of our algorithm is as follows: · We choose an extendable matching W  E(B) of size at most 2k such that all terminals of I are covered. · Next choose a (I, W )-proxy (I, W ). · Then we compute a perfect matching decomposition (T, ) for B - V (W ) that is safe for (I, W ) and its width is bounded in a function of pmw(B) and k. · We apply dynamic programming on (T, ) in order to either find a solution that extends W  or refute the existence of such a solution. · Finally, if for some W and some (I, W )-proxy we find a solution we extend it to a solution for I and W and return "Yes", otherwise we return "No".
38

Let |V (B)| = n. If f1(pmw(B), k, n) describes the time needed to compute (T, ) and f2(pmw(B), k, n) describes the time necessary for the dynamic programming on (T, ), the overall running time of our algorithm can then be expressed by O(n2k · n4k · f1(pmw(B), k, n) · f2(pmw(B), k, n)) where the constants only depend on k and pmw(B). Once the functions f1 and f2 are established, Proposition 6.2 follows as an immediate consequence of the high-level approach described above. Indeed, please note that, by slightly modifying the proofs below, one can obtain the following more general result:
Corollary 6.3. Let B be a bipartite graph with a perfect matching, k  N an integer, I a family of k terminal pairs, and F  E(B) an extendable set. There exists an algorithm that decides in time |V (B)|O(k+pmw(B))2 whether there exists an F -extending solution for I or not.
As an immediate consequence, if D = D(B, M ) is some digraph, by choosing F = M Corollary 6.3 together with Theorem 3.2 and Proposition 3.3 implies the original result on the directed disjoint path problem for digraphs of bounded directed treewidth in [JRST01].
6.1 Computing A Perfect Matching Decomposition
Some preliminary results are needed. For one, we need to be able to check for given W  E(B) whether there exists a perfect matching extending W if this is true, W is called an extendable set. This boils down to checking if B - V (W ) has a perfect matching. And second, we must be able to compute a perfect matching decomposition of bounded width. The first problem can be solved in polynomial time by Edmonds' famous Blossom Algorithm [Edm65], or, since we work on bipartite graphs, by the Hungarian Method [Kuh55], so this part will not be much of a concern to us. For the second part, we make use of the following theorem. A directed tree decomposition (T, , ) for a digraph D is nice if for every (t, t)  E(T ),
i) (Tt) induces a strong component of D - (t, t), and ii) (t, t)  (Tt) = .
Theorem 6.4 ([CLMS19]). Let D be a digraph, k  N, and dtw(D)  k. There exists an algorithm with running time 2O(k log k)nO(1) that computes a nice directed tree-decomposition of width at most 3k - 2 for D.
Let B be a bipartite graph with a perfect matching M and D := D(B, M ). In light of Theorem 6.4, it would be enough to compute a perfect matching decomposition of bounded width for B from a directed tree decomposition of bounded width for D which we already know how to do in polynomial time by the results from [HRW19a]. We would like to maintain a bit of this niceness in the perfect matching decomposition we produce. Let B be a bipartite graph with a perfect matching. A perfect matching decomposition (T, ) of width w is nice if T is rooted at some vertex r  V (T ) and
i) V (T - r) can be partitioned into four sets of vertices: · The leaves, L(T ), which are the vertices of degree one. · The basic vertices, basic(T ), which are those vertices t  V (T ) whose successors are leaves of T .
39

· The joins, join(T ), which are the vertices t  V (T ) with two distinct successors t1 and t2 such that there is no edge from V2  (Tt1 ) to V1  (Tt2 ), and B[(Tt1 )] is elementary.
· The guards, guard(T ), which are the vertices t  V (T ) satisfying one of the following properties: · |(Tt)|  2k and (Tt) is conformal (Type 1), or · t has two distinct successors t1 and t2 such that t1 is a guard of Type 1 and t2 either is a join, or B[(Tt2 )] is conformal and elementary. (Type 2)
ii) if r is not a leaf of T for every successor t of r one of the following holds: · t is a guard of Type 1, or · t either is a join, or B[(Tt)] is conformal and elementary, and
the successors of r of this type can be sorted as t1, . . . , th, h  3 such that if 1  i < j  h, then there is no edge from V1  (Ttj ) to V2  (Tti ). Given a distinct set I of terminal pairs for the k-DAPP on B and an extendable set W  E(B) matching all terminals such that if e  W , then an endpoint of e is a terminal, we call a perfect matching decomposition (T, ) a (I, W )-decomposition for B, if it is nice and safe for I and W . In the following we describe how to obtain a (I, W )-decomposition for a bipartite graph B with a perfect matching. As a base of our algorithm, we are going to use Theorem 6.4 and then manipulate the obtained decomposition in order to create a nice perfect matching decomposition. A tuple (T, , ) is called a proto-directed tree decomposition for the digraph D if it satisfies all the conditions of a directed tree decomposition except that we allow empty bags and still every vertex of D must be contained in exactly one bag of (T, , ). A proto-directed tree decomposition (T, , ) of width w for a digraph D is prepared if i) T is subcubic, ii) if t  V (T ) has a unique successor t, then (Tt ) induces a strong component of D - (t, t) or contains at most w + 1 vertices, and iii) if t  V (T ) has two distinct successors t1 and t2, then
· (Tt1 ) either contains at most w + 1 vertices and (Tt2 ) also either has at most w + 1 vertices or induces a strongly connected subgraph of D - (t, t2), or
· (Tt1 ) induces a strongly connected subgraph of D - (t, t1) and there is no directed edge with tail in (Tt2 ) and head in (Tt1 ) in D.
Lemma 6.5. Let D be a digraph and dtw(D)  w. There exists an algorithm with running time 2O(w log w)nO(1) that computes a prepared proto-directed tree-decomposition of width at most 3w - 2 for D.
Proof. Let (T0, 0, 0) be the nice directed tree-decomposition obtained via the algorithm in Theorem 6.4. Let us call a proto-directed tree-decomposition where every vertex of degree at most three satisfies the axioms of a prepared proto-directed tree decomposition and every other vertex satisfies the axioms of a nice directed tree decomposition almost prepared. Clearly (T0, 0, 0) is almost prepared. Now let (Tj, j, j ) be an almost prepared proto-directed treedecomposition. Pick any vertex t  V (T ) of degree more than three and let t1, . . . , t be its successors. Then j(Tj,ti ) induces a strong component of D - j(t, ti) for all i  [1, ]. Indeed, j(Tj,ti ) induces a
40

strong component of D - j(t) for all i  [1, ], without loss of generality let us assume that the ti are numbered in such a way that for all 1  i < k   there is no directed edge with tail in
j(Tj,tk ) and head in j (Tj,ti ). We define a proto-directed tree decomposition (Tj+1, j+1, j+1) as follows. Let Tj+1 be the arborescence obtained from Tj by introducing a new vertex t, the edge (t, t) and replacing (t, ti) by (t, ti) for all i  [2, ]. Then j+1(t) := j(t) for all t  V (Tj) and j+1(t) := . Moreover, let j+1(e) := j(e) for all e  E(Tj)\{(t, t2), . . . , (t, t)}, j+1(t, t) := j(d, t)  j(t), where (d, t) is the unique ingoing edge at t in Tj, and j+1(t, ti) := j(t, ti) for all i  [2, ]. Clearly width(Tj+1, j+1, j+1)  width(Tj, j , j), so we just need to show that (Tj+1, j+1, j+1) is indeed a proto-directed tree decomposition. To be more precise, we only need to show that j+1(t, t) is a valid guard for j+1(Tj+1,t). Let P be any directed walk starting and ending on a vertex of j+1(Tj+1,t ) while containing a vertex of D - j+1(Tj+1,t ). If P lies in j+1(Tj+1,t), then P must contain a vertex of j+1(t) since there is no edge from j+1(Tj+1,t) to j+1(Tj+1,t1 ) by construction. So if P avoids j+1(t), then P must contain a vertex of D - j+1(Tj+1,t) and thus, it must contain a vertex of j+1(d, t).
Then (Ti+1, i+1, i+1) is almost prepared and has less vertices of degree at least four that (Ti, i, i). In fact, after at most |V (T0)| steps we have obtained a prepared proto-directed tree decomposition.

Given a bipartite graph B with a perfect matching, I = {(s1, t1), . . . , (sk, sk)} a distinct family

of terminal pairs, and an extendable W  E(B) matching all terminals, we call a set F 

V (B) 2

a W -completion, if for every W -extending solution (M, P), the graph induced by the edge set

(F  W  E(P )) \ {xy  W | x = si and y = ti for some i  [1, k]}
P P
consists exclusively of M -alternating cycles. Please note that, by definition, |F |  k for all W -completing F .

Lemma 6.6. Let B be a bipartite graph with a perfect matching, I = {(s1, t1), . . . , (sk, tk)} a family of distinct terminal pairs, and W  E(B) an extendable set covering all terminals such that if e  W , then an endpoint of e is a terminal. Then a W -completion F can be found in linear time.

Proof. We obtain F as follows: Initialise F and U with . Pick some si  V (I) \ U and add it to U , let e  W be the edge of W covering si and let x be its other endpoint. Next we have to consider several cases. If x = ti we just add ti to U and continue with a new si  V (I) \ U , in this case nothing else must be done. If x = tj for some j  [1, k] \ {i} add sj and tj to U , select the edge e  W to be the edge covering sj, let x be its other endpoint. In case sj was already in U before, it must be equal to the original si this cycle of the process was started with. Then every W -extending solution clearly closes an alternating cycle and we may proceed with a new si  V (I) \ U . Otherwise reiterate the process with sj in the role of si, in this case, we are still within the same cycle. And at last, if x / V (I) we may consider ti and the edge e  W covering ti, let y be its other endpoint.
The process here is rather similar to what came before. Clearly y = si and, moreover, y / U . If however y = sj for some i  [1, k] \ {i}, then add sj and tj to U , set e  W to be the edge

41

covering tj and reiterate the process with tj in the role of ti. If, on the other hand, y / V (I), let si be the vertex this cycle was started with. Now any solution, together with the edges of W , produces a path P  with endpoints x and y that can be made into an alternating cycle by adding the edge xy to B if it does not already exist. Hence we add xy to F and proceed with the next si  V (I) \ U . Once U = V (I) our set F is W -completing by the discussion above.
Adding a W -completion F to our graph B should not change its perfect matching width by too much.
Observation 6.7. Let D be a digraph and F  E(D) a set of edges not in D. Then dtw(D + F )  dtw(D) + |F |.
Proof. Let (T, , ) be a directed tree decomposition for D of optimal width and let S  V (D) be the set of tails of the edges in F . Now add S to every guard of (T, , ). Clearly this increases the width of our decomposition by at most |S|  |F | and the result is a directed tree decomposition for D + F .
Lemma 6.8. Let B be a bipartite graph, I = {(s1, t1), . . . , (sk, tk)} a distinct family of terminal pairs, and W  E(B) an extendable set covering all terminals such that if e  W , then an endpoint of e is a terminal. Let pmw(B)  w and n := |V (B)|. There exists an algorithm with running time 2O((w2+k) log(w2+k))nO(1) that produces a (I, W )-decomposition of width at most 432w2 + 864w + 22 + 6k for B.
Proof. Let us first compute a perfect matching M extending W and a W -completing set F . Clearly both can be done in polynomial time. Now let D := D(B, M ), D := D(B + F, M ), and F  := E(D) \ E(D). Then F  corresponds to the edges in F added to B. By Section 3 we obtain dtw(D)  72 pmw(B)2+144 pmw(B)+9. With Observation 6.7 this means dtw(D+F )  72 pmw(B)2 + 144 pmw(B) + 9 + k. Observe that D + F  = D. Now let (T, , ) be the prepared proto-directed tree decomposition of width at most 216w2 + 432w + 10 + 3k obtained from Lemma 6.5. In the next step, we show how to obtain a nice perfect matching decomposition for B + F from (T, , ). First of all, since D = D(B + F, M ), every vertex v of D corresponds to an edge ev of M , let us denote the endpoint of ev in V1 by av and the other endpoint by bv. Since T is an arborescence, it already is rooted at some vertex, say r. In what follows, we explain how to manipulate this tree T and how we define a bijection  step by step in order to create a cycle decomposition for D of bounded width. This cycle decomposition is then translated into a perfect matching decomposition with the required properties. Let t  V (T ) be any vertex with (t) =  and let d be its predecessor. We only discuss the case in which t is not the root, but the other case can be solved in a similar way. There are three possible cases, depending on the number of successors t has in T . Case 1: Vertex t is a leaf in T . In this case, let us construct a rooted cubic tree T  with root t and otherwise disjoint from T such that T  has exactly |(t)| many leaves. Add T  to T and extend the bijection  such that the restriction of  to the leaves of T  is a bijection between said leaves and (t). Then the edge (d, t) induces an edge cut D(X) with X = (t), and thus cp(D(X))  |(t)|  216w2+432w+11+3k
42

and every edge of T  induces an edge cut with even smaller cycle porosity. Mark every non-leaf vertex in T  as a guard. This mark does not hold a special significance for this decomposition, but will be used in the second half of this proof to show that we can construct a nice perfect matching decomposition. Case 2: Vertex t has a unique successor d in T . Let T  be a rooted cubic tree with root t, completely disjoint from T and exactly |(t)| leaves, add T  to T together with the edge (t, t) and extend  for the leaves of T  as above. With the same arguments we obtain bounds on the cycle porosity of every edge of T  and the edge (t, t). Mark every non-leaf vertex in T  as a guard.
Case 3: Vertex t has two successors in T . Here we first subdivide the edge (d, t), i.e. we replace it by the directed path (d, t, t) where t is a vertex newly introduced to T . Then we create a rooted cubic tree T  with exactly |(t)| leaves, rooted at t that is disjoint from the modified tree T and introduce the edge (t, t). Afterwards, we extend  to the leaves of T  as before and again obtain bounds on the cycle porosity of the edge cuts induced by the edges of T  and (t, t). Mark t and every non-leaf vertex in T  as guards. Let (T , ) be the cycle decomposition for D obtained by applying the above constructions to all vertices of (T, , ) with non-empty bags. Since (T, , ) was a proto-directed tree decomposition of width at most 216w2 + 432w + 10 + 3k it is straight forward to prove that all edges of T  that were not discussed in the construction induce, with respect to , edge cuts of cycle porosity at most 432w2 + 864w + 22 + 6k in D. Hence width(T , )  432w2 + 864w + 22 + 6k. Now let us create a new rooted tree T  from T  by introducing for every leaf t of T  two new successors tV1 and tV2 and defining (tV1 ) := a-1(t) and (tV2 ) := b-1(t). The result is a perfect matching decomposition (T , ) for B + F . The bound width(t, )  432w2 + 864w + 22 + 6k follows from Observation 2.12.
Additionally, since we started out with a prepared proto-directed tree decomposition, it is relatively straight forward to check that (T , ) is nice. For the sake of completion we discuss this in the following paragraph. Let t  V (T ) be any non-root vertex.
Case A: Vertex t is a leaf. Here we are done immediately since t  L(T ).
Case B: Vertex t is adjacent to a leaf. In this case, by construction of T  from T , t must have exactly two successor which both are leaves and thus t  basic(T ).
Case C: Vertex t is not adjacent to a leaf, but has been marked as a guard in the construction of (T , ).
First let us assume t  V (T ), in this case, t must have been a leaf of T and thus (t) directly corresponds to (Tt) and t is indeed a guard of T . Otherwise, t must have been introduced during the construction of T  from T and thus there must be a vertex d  V (T ) with (d) =  that is responsible for the introduction of t. In case d has a unique successor in T , t belongs to the newly introduced rooted cubic tree and thus (Tt) has at most 2w vertices and is conformal. Thus t is indeed a guard. Hence we may assume d to have two successors in T . Then we
43

subdivided the incoming edge at d with a new vertex, say d and added a rooted cubic tree R with root d as a new successor of d. If t  V (R) we are done by the same argument as above. If t = d, then the successors of d are d and d. We have already seen that d is a guard of T and since (T, , ) is a prepared proto-directed tree decomposition, d must be a join as d has two successors t1 and t2 satisfying the appropriate requirements. Case D: Vertex t is a vertex of the original T but has not been marked as a guard during the construction of T . This means in particular that t is not a leaf of T and does not have a unique successor. Indeed, in this case, t must have exactly two successors t1 and t2. We may assume t1 and t2 to be ordered such that there is no edge from (Tt2 ) to (Tt1 ). Let t1 and t2 be the two successors of t in T , then it follows that there is no edge from V2  (Tt2 ) to V1  (Tt1 ). Moreover, with the same argument (Tt1 ) is strongly connected and thus (Tt1 ) is elementary. Hence t is a join. This completes the argument and thus (T , ) is nice. What is left to show is that (T , ) is safe for I and W . Note that the width of (T , ) cannot increase by deleting F and thus it also is a perfect matching decomposition for B with the same bound on its width. We claim that (T , ) is safe for W and I. Suppose there exists a solution M , P and an edge e  E(T ) such that
|B(e)  E(P )| > 864w2 + 1728w + 44 + 12k.
P P
With F being W -completing, F  W  P P E(P ) induces a family C of pairwise disjoint M conformal cycles in B + F . Then let C be the collection of all cycles in C with edges in B(e). Let E(C) := CC E(C). Since width(T , )  432w2 + 864w + 22 + 6k, at most 432w2 + 864w + 22 + 6k of the edges in E(C)  B(e) can belong to M . Hence |(E(C)  B(e)) \ M | > 432w2 +864w+22+6k. Consider the perfect matching M  := M E(C) of B+F . Note that this is the point where we need I to be a distinct family. Then |B(e)M | > 432w2 +864w +22+6k contradicting our assumption. So our claim follows.
Note that in case t = 0, Lemma 6.8 implies the existence of an FPT-approximation algorithm that produces a nice perfect matching decomposition for bipartite graphs B with a perfect matching. Hence we have established Theorem 1.6.
6.2 The Matching Linkage Problem
With Lemma 6.8 we have fixed
f1(pmw(B), k, |V (B)|) := 2O((pmw(B)2+k) log(pmw(B)2+k))|V (B)|O(1),
so from now on we will only be concerned with the dynamic programming on (I, W )decompositions. In most parts, we lean on the algorithm for the directed disjoint paths problem developed by Johnson et al. for digraphs of bounded directed treewidth [JRST01]. However, we face several challenges here. The first one is that we cannot assume that there is no perfect matching M for which some internally M -conformal path P exists with |B(e)  E(P )|  2 width(T, ). The
44

only thing we can be sure of is that no such path can be part of our solution. Second, while we are exclusively interested in perfect matchings of B that extend W , there might still be an exponential number of them, and thus we must store additional information in order to cope with this fact.
Let B be a bipartite graph with a perfect matching, I a distinct family of k terminal pairs for the k-DAPP in B, W  E(B) an extendable set matching all terminals such that if e  W , then an endpoint of e is a terminal, and F a W -completion. A subgraph L of B is called a linkage if there exists a perfect matching M and a family of pairwise internally disjoint internally M -conformal paths P such that L = P P P , and L has exactly |P| components. A linkage L is a (I, W )linkage if there exists a solution (M, P) for I in B extending W such that L = P P P . Please note that for a (I, W )-linkage L the corresponding W -extending solution (M, P) is uniquely determined apart from the edges of M  (E(B) \ P P E(P )). A part of L is a subgraph L  L such that some path P  P exists with L  P . Let X  V (B), a part of L in X is a component of L[X  V (L)], we denote the set of all parts of L in X by partsL(X). We say that a linkage L in G is (k, w)-limited in X and G, for some integer w, if for every set Y  X with mp(B(Y ))  w we have | partsL(Y )|  k + w.
Lemma 6.9. Let B be a bipartite graph with a perfect matching, I a distinct family of k terminal pairs, W  E(B) an extendable set covering all terminals such that if e  W , then an endpoint of e is a terminal, and F a W -completion. Let X  V (B) and L a (I, W )-linkage in B as well as w a positive integer, then L is (k, w)-limited in X and B + F .

Proof. The proof is similar to the safety-part in the proof of Lemma 6.8. Let Y  X be any set
with mp(B+F (Y ))  w and suppose | partsL(Y )|  k + w + 1. Let L be any component of L and consider  := |B+F (Y )  E(L)|. If   1, then

 2



| partsL (Y

)|



1

+

 2

.

Hence we obtain the following:

k + w + 1  | partsL(Y )| =

| partsL (Y )|

L component of L



1

+

|B+F

(Y

) 2



E(L)|

L component of L

= k + |B+F (Y )  E(L)| 2

Therefore 2w + 2  |B+F (Y )  E(L)| and thus, with F being W -completing, there must exist a W -extending perfect matching M of B such that L is a family of internally M -conformal paths and thus, L + F is a family of M -alternating cycles. Hence there exists a perfect matching of B + F with at least 2w + 2 edges in B+F (Y ) contradicting the choice of Y .

Since we will be working on a (I, W )-decomposition of bounded width, from now on the case where linkages are not (k, w)-limited will be ignored, as it wont occur in our algorithm.

45

Let B be a bipartite graph with a perfect matching, W  E(B) an extendable set, k, w  N two integers, X  V (B), and U  B(X) a set such that W  U is extendable and W  B(X)  U . A (k, w)-U -itinerary for X is a mapping fU that assigns every tuple (, J , J), where
·   [1, |X|] is an integer, · J is a distinct family of j  [0, k + w] terminal pairs from X \ V (U \ J), and · J  E(B) is a matching covering all terminals of J and every edge of J covers some
terminal of J such that W  U  J is extendable, and J  B(X) = U  B(X), a value 0 or 1 such that the following is guaranteed:
i) If fU (, J , J) = 0, then there exists no (J , J)-linkage L in B[X \ V (U \ J)] with |V (L)| =  such that a J-extending solution M, Q exists with W  J  U  M , which is (k, w)-limited in X.
ii) If fU (, J , J) = 1, then there exists a (J , J)-linkage L in B[X \ V (U \ J)] with |V (L)| =  such that a J-extending solution M, Q exists with W  J  U  M .
Lemma 6.10. Let B be a bipartite graph with a perfect matching, W  E(B) an extendable set, and k, w  N two integers. Furthermore let X, Y  V (B) be two disjoint subsets such that there is no edge between V1  Y and V2  X and let U  B(X  Y ) be an extendable set with W  B(X  Y )  U . Assume that for every Z  {X, Y } and every extendable UZ  B(Z) with |UZ |  w and W  B(Z)  UZ we are given a (k, w)-UZ -itinerary fUZZ . Then there exists an algorithm with running time O((k + w)!(2k + 3w)4(k+w)|X  Y |4k+12w+2) that produces a (k, w)-U -itinerary for X  Y .
Proof. Let   [1, |X  Y |] and j  [0, k + w], let J = {(s1, t1), . . . , (sj, tj)} be a distinct set of j  [0, k + w] terminal pairs in X  Y and J  E(B) an extendable set such that every edge in J covers a terminal of J and every terminal is covered by some edge in J. We need to choose some additional sets of edges before we can start, in order to determine the value of fU (, J , J). We iterate over all choices of sets R, H, RX, and RY satisfying the following requirements.
i) R  B(X)  B(Y ) such that · W  B(X)  B(Y )  R, · |(U  B(X))  R|  w and |(U  B(Y ))  R|  w, and · W  U  J  R is extendable.
ii) H  B(X)  B(Y ) such that · H is a matching of size at most w, · no edge of H is incident with an edge of U  R, and · the set of endpoints of the edges in H in Z  {X, Y } is denoted by ZH .
iii) For Z  {X, Y }, RZ  E(B[Z]) such that · every vertex in ZH is covered by some edge of RZ , · every edge of RZ covers a vertex in ZH , and · W  U  J  R  RZ is extendable.
In what follows let R, H, and the RZ be fixed. For Z  {X, Y } let UZ := R  (U  B(Z)) and note that, by choice and our assumption, we are given a (k, w)-UZ -itinerary fUZZ for Z. Let us denote the set of endpoints in V2 of the edges in RX by V2,RX and the set of endpoints in V1 of the edges in RY by V1,RY .
46

There may exist some paths that belong to a linkage we are interested in which start in a vertex of V1  Y and end in a vertex of V2  X. However, each such path must necessarily use an edge of R and in total, since we are still only interested in (k, w)-limited linkages, we cannot cross the cut between X and Y too often. Still, we need to address this problem by possibly considering additional terminals not belonging to those we were given by J . We approach the problem of merging the two itineraries with respect to the chosen sets above by constructing an auxiliary digraph DW,U,X,Y [J , J, R, H, RX , RY ] of constant size. For the vertices of DW,U,X,Y [J , J, R, H, RX , RY ] we define the following sets:
VX := {si  X | i  [1, j]}  {ti  X | i  [1, j]}  V2,RX  {ve | e  R} VY := {si  Y | i  [1, j]}  {ti  Y | i  [1, j]}  V1,RY  {ve | e  R} .
And for the edges let
EX := {(si, v) | si  VX and v  V2,RX }  {(ve, ti) | ti  VX and e  R}  {(ve, u) | e  R and u  V2,RX } , and

Then

EY := {(si, ve) | si  VY and e  R}  {(v, ti) | ti  VY and v  V1,RY }  {(u, ve) | e  R and u  V1,RY } .

DW,U,X,Y [J , J, R, H, RX , RY ] :=(VX , EX )  (VY , EY ) + {(u, v) | uw  RX , wz  H, and zv  RY } .

Let L be a directed J -linkage in DW,U,X,Y [J , J, R, H, RX , RY ] such that L has at most t + w components in (VZ , EZ ) for both Z  {X, Y }. Then from L we can derive two instances of the linkage problem for the matching case, one in B[X] and the other in B[Y ], namely JL,X := E(L)  EX and JL,Y := E(L)  EY . Additionally we define for Z  {X, Y }

UL,Z := (B(Z)  U )  R, and JL,Z := {e  J | e  E(B[Z])  B(Z)}  {e  RZ | e covers a terminal in JL,Z} .

If there now exist integers 1 and 2 with  = 1 + 2 such that
fUXL,X (1, JL,X , JL,X ) = fUYL,Y (1, JL,Y , JL,Y ) = 1,
the two solutions in B[X] and B[Y ] can be combined and we may set fU (, J , J) := 1. In total, since we iterate over all possible choices and combinations, this process correctly computes a (k + w)-U -itinerary for X  Y . The running time follows from the number of possible choices we need to consider and the size and construction of DW,U,X,Y [J , J, R, H, RX , RY ]. Please note that the bound given in the statement of the lemma is probably not optimal, but it suffices for our purposes.

47

Lemma 6.10 describes how to merge partial solutions at join-vertices of a (I, W )-decomposition, once a set U has been fixed. The next lemma addresses the same problem at guard-vertices. Indeed for our purposes, it suffices to only consider guard- and join-vertices in a bottom-up fashion in order to find the desired solution.

Lemma 6.11. Let B be a bipartite graph with a perfect matching, W  E(B) an extendable

set, and k, w  N two integers. Furthermore let X, Y  V (B) be two disjoint subsets such that

mp(B(X))  w and |Y |  w, and let U  B(X Y ) be an extendable set with W B(X Y ) 

U . Assume that for every extendable UX  B(X) with |UX |  w and W  B(X)  UX

we are given a (k, w)-UX -itinerary fUXX . Then there exists an algorithm with running time

O((w

+

k)!w

1 2

w

(|X

|

+

w)4k+10w+2)

that

produces

a

(k, w)-U -itinerary

for

X



Y

.

Proof. Let   [1, |X  Y |], j  [0, k + w], and J = {(s1, t1), . . . , (sj, tj)} be a distinct set of j  [0, k + w] terminal pairs in X  Y and J  E(B) an extendable set such that every edge

in J covers a terminal of J and every terminal is covered by some edge in J. Next we iterate

over all possible choices for the sets R, H, and RX defined analogously to those in the proof of

Lemma 6.10. Additionally, we iterate over all possible choices of W  U  J  R  RX-extending

perfect matchings MJ,R,RX of the graph BY := B[Y  V (W )  V (U )  V (J)  V (R)  V (RX )].

Since

|Y |



w

there

are

at

most

w

w 2

such perfect matchings of BY .

We need six additional

vertex sets in order to construct another auxiliary digraph that will be used similarly to the

one in Lemma 6.10. However, since we do not know which colour the endpoints of an edge in

B(X)  B(Y ) have, with respect to the shore we are interested in, the construction is slightly more complicated.

i) V1,R := eR e  V1  X ii) V2,R := eR e  V2  X iii) V1,H := eRX e  V1 \ eH e iv) V2,H := eRX e  V2 \ eH e v) V1,X := {si  X | (si, ti)  J }
vi) V2,X := {ti  X | (si, ti)  J }

As a first component we need the digraph D1 := D(BY , MJ,R,RX ). Second let

VX := u | u  V1,R  V1,H  V1,X  v | v  V2,R  V2,H  V2,X , EX := (u, v) | u  V1,R  V1,H  V1,X and v  V2,R  V2,H  V2,X , and

E := (u, ve) | u  V1,H  V1,R, u  e  R  RX , and ve  V (D1)  (ve, v) | v  V2,H  V2,R, v  e  R  RX , and ve  V (D1) .
In total these definitions give rise to the digraph DW,U,X,Y [J , J, R, H, RX , MJ,R,RX ] :=(VX , EX )  D1 + E.
Now let J  := (ui, wi) | ui = si if si  Y if not, ui = si, wi = ti if ti  Y if not, wi = ti .

48

For every e  J we identify any endpoint of J that is a terminal of J  with the vertex ve  V (D1). Then, by construction, every solution P, M for J , W in B[X  Y ] such that M extends MJ,R,RX naturally corresponds to a family of pairwise internally disjoint directed paths in DW,U,X,Y [J , J, R, H, RX , MJ,R,RX ] that links J . On the other hand, let P be a family of pairwise internally disjoint directed paths linking J , such that the following requirements are met:
i) Let Q := P P P , then the total number, over all paths P  P, of subgraphs of Q that are a maximal directed subpaths of P [VX  {ve | e  RX }] does not exceed k + w.
ii) If v  V (P ) such that v = ve for some e  MJ,R,RX and there is some u  VX such that u  e, then u does not occur in any other path of P. Similarly, if u  V (P )  VX such that some e  MJ,R,RX exists with u  e, then ve does not occur in any path of P besides possibly P .
Let P  be a subgraph of Q that is a maximal directed subpath of P [VX  {ve | e  RX }] for some P  P and let uP  be the starting point of P and vP  its end. We define a terminal pair (u, v) in B[X] as follows:
· If uP   V1,R  V1,H  V1,X set u := uP  , otherwise there must be some e  RX such that uP  = ve. In this case let ue be the endpoint of e in V1 and set u := ue.
· Similarly, if vP   V2,R  V2,H  V2,X set v = vP , otherwise there must be some e  RX such that vP  = ve. In this case let ue be the endpoint of e in V2 and set v := ue.
Let JP be the collection of all terminal pairs (u, v) defined as above. Then no vertex of X occurs in two different terminal pairs of JP and every terminal is covered by an edge of J  RX . We define two additional sets as before:
UP,X := (B(X)  U )  R, and JP,X := {e  J | e  E(B[X])  B(X)}  {e  RX | e covers a terminal in JL,X} .
If there now exist integers 1 and 2 with  = 1 + 2 such that
2 = 2|V (Q)  {ve | e  MJ,R,RX \ RX } |, and fUXP,X (1, JP , JP,X ) = 1,
We can combine the parts of P in D1[{ve | e  MJ,R,RX \ RX }] and a solution for JP to obtain a solution for X  Y and U . Hence we may set fU (, J , J) := 1. By iterating over all possible choices for the various sets we are sure to produce a complete (k, w)-U -itinerary for X  Y .
Using lemmata 6.10 and 6.11, we are now able to merge partial solutions at all join- and guard vertices. For basic vertices obtaining partial solutions is straight forward, since we may only choose the edges of the perfect matchings covering the two singular vertices that lie in the two subtrees beneath. In order to obtain a (k, w)-U -itinerary for every possible U , we just have to call the corresponding merge operation for every possible choice of U . At any given time there are O(|V (B)|w) such choices, which overall implies the following:
Corollary 6.12. Let B be a bipartite graph with a perfect matching, I a distinct set of k terminal pairs, W an extendable set covering all terminals such that every edge in W covers a terminal and (T, ) a (I, W )-decomposition of width w for B. There exists an algorithm that decides in time O(|V (B)|4k+13w+3) whether there exists a solution for I, W or not.
49

Corollary 6.12, together with the approximation factor for our (I, W )-decomposition from Lemma 6.8, fixes
f2(pmw(B), k, |V (B)|) := O(|V (B)|5616 pmw(B)+11232 pmw(B)2+189+73k).
Together with our previous results this completes the proof of Proposition 6.2.
6.3 Counting Perfect Matchings
To count the number of perfect matchings in a graph of bounded perfect matching width is another relatively straight forward application of dynamic programming. We describe the algorithm for general, so not necessarily bipartite, graphs, however, for non-bipartite graphs there is currently no algorithm known to compute a perfect matching decomposition of bounded width. Hence we consider the decomposition itself to be part of the input. This means that Theorem 1.8 will follow from the results presented in this subsection by an application of Theorem 1.6. Let G be a graph with a perfect matching and (T, ) be a perfect matching decomposition of width w  N for G. Let us select a root r  V (T ) and let T be the orientation of T obtained by orienting every edge of T away from r. Moreover, for every (d, t)  E(T ) let Tt denote the component of T - d that contains t. For every vertex t  V (T ) \ {r} with unique incoming edge (d, t) we will compute a value µ(t, F )  N where F  G(dt) and |F |  w such that µ(t, F ) = 0 if and only if F is not extendable, and otherwise µ(t, F ) is the number of perfect matchings of G[(t)  V (F )] that extend F . Since width(T, ) = w no set F  G(dt) with |F |  w + 1 can be extendable and thus for every t  V (T ) \ {r} we only have to consider |V (G)|2w many such sets F . In an additional step we will compute the value µ(r, ) using similar techniques as before to obtain the total number of perfect matchings in G. In what follows we write µ(t, ·) as a placeholder for µ(t, F ) for every F  G(dt) with |F |  w.
Proposition 6.13. Let G be a graph with a perfect matching and (T, ) be a perfect matching decomposition of width w  N for G. There exists an algorithm that computes in time O(|V (G)|4w+1) the number of perfect matchings in G.
Proof. Let us assume that the root r is not a leaf. Throughout the proof let us fix the convention that, given t  V (T ) \ {r}, d  V (T ) is the unique vertex with (d, t)  E(T ). Let us assume t  V (T ) to be a leaf. In this case the only extendable sets F  G(dt) are of cardinality one. Indeed, we have to test at most |V (G)| - 1 edges incident with t whether they are contained in a perfect matching or not. This can clearly be done in polynomial time [Edm65]. Next let us assume t  V (T ) \ {r} is not a leaf and has successors t1 and t2. Moreover, assume that µ(ti, ·) have already been computed for both i  [1, 2]. Observe that G(dt) = (G(tt1)  G(tt2)) \ (G(tt1)  G(tt2)). Let F  G(dt) be an extendable set of edges and let Fi := G(tti) for both i  [1, 2]. Let W be the collection of all sets W  G(tt1)  G(tt2) such that F  W is extendable. Note that W  F = , and |Fi  W |  w for both i  [1, 2] by definition and the width of (T, ). We claim that every perfect matching M of G with
50

M  G(dt) = F contains such a set W . To see this simply observe that every edge of M which belongs to G(tt1)  G(tt2) but not to G(dt) must belong to G(tt1)  G(tt2). Hence with M  G(tt1)  G(tt2) we have found the set we wanted. Therefore the number

µ(t, F ) :=

µ(t1, F1  W ) · µ(t2, F2  W )

W W

is exactly the number of perfect matchings of G[V (F )  (Tt)] as intended. To compute this
number we have to consider every set W  G(tt1)  G(tt2) of size at most w - |F | and test, whether W  F is extendable or not. So in total we perform O(|V (G)|2w) such tests. Since we also have O(|V (G)|2w) such sets F we need to consider, µ(t, ·) can be computed in O(|V (G)|4w)

steps.

At last let us consider the root r with its three successors t1, t2, and t3 and suppose we are given

µ(ti, ·) for every i  [1, 3]. Let M be any perfect matching of G, then M 

3 i=1

G(rti)

can

be decomposed into two sets: A set FM  G(rt1) and a set WM 

3 i=1

G(rti)

\

G(rt1)

=

G(rt2)  G(rt3). Hence we may use the same method as for ne non-root inner vertices to

compute µ(r, ) by simply considering all extendable sets F  G(rt1) and then for each such

F every possible set W  G(rt2)  G(rt3) such that F  W is extendable. Let Fr be the set

of all extendable subsets F of G(rt1) and let Wr,F be the set of all sets W  G(rt2)  G(rt3)

such that F  W is extendable. For each i  [2, 3] let Fi := F  G(rti). We set

µ(r, ) :=

µ(t1, F ) · µ(t2, F2  W ) · µ(t3, F3  W ).

F Fr W Wr,F

It follows from the discussion above that µ(r, ) is the number of perfect matchings of G. More-
over, since T is a cubic tree with |V (G)| leaves, we have |V (T )|  O(|V (G)|), and thus, the total running time of the procedure is O(|V (G)|4w+1).

6.4 Consequences for Matching Minor Checking and Bipartite Graphs Excluding a Planar Matching Minor
The importance of the disjoint paths problem in the Graph Minors series by Robertson and Seymour is due to the fact that checking for minor containment can be reduced to certain instances of the disjoint paths problem. For bipartite graphs with perfect matchings, this is also true.
Proof of Theorem 1.7. By Corollary 4.5, if H is a matching minor of B, then there exists a perfect matching M of B such that there exists an M -model of H in B. Every vertex v  V (H) is represented by a barycentric tree in B, and it is not hard to see that we may always choose such a barycentric tree such that the number of vertices of degree at least 3 is at most degH (v). Let µ : H  B be such a model. By Lemma 4.4 we may further assume that M corresponds to a perfect matching MH of H and µ(uv) is internally M -conformal if and only if uv / MH . Moreover, if uv  MH , then µ(uv) is M conformal. Hence for every v, it suffices to guess the at most degH (v) many edges of M and ask for pairwise internally disjoint internally M -conformal paths connecting them in an appropriate way. Additionally, we need an internally M -conformal

51

path representing every uv  E(H) \ MH and for each of those, we need to find an edge of M for each of the two endpoints. Since we also guessed the edges of M covering the only vertex of µ(x) not covered by E(µ(x))  M for both x  {u, v} if uv  MH , the endpoints of these two edges, not belonging to their respective vertex models must also be linked by paths. Since it is not feasible to check for M -models of H for every perfect matching M of B, we instead check all possible choices of extendable sets F of size at most 2|E(H)| + vV (H) degH (v) = 4|E(H)|. In fact, since we also do not know which edge of our set F belongs to the model of which vertex or edge of H, we also need to try all possible configurations. But this only worsens our running time by a factor depending exclusively on the size of F . Hence in total we need to call the algorithm from Proposition 6.2 at most O(|V (B)|4|E(H)|) times with k  4|E(H)|  4|V (H)|2, and thus our claim follows.
Corollaries 1.9 and 1.10 now both follows by applying Theorem 1.2 to the findings from this section. Additionally an algorithmic version of Theorem 1.5 can be achieved using similar arguments. Moreover, it follows from Lemma 4.11 that we can obtain analogous results for the testing for members of fundamental anti-chains as butterfly minors on digraphs of bounded directed treewidth and, in particular, for every strongly connected strongly planar digraph H there exists a polynomial-time algorithm that decides whether any given digraph D contains a member of A(H) as a butterfly minor. This might be especially surprising since A(H) may be infinite.
7 Conclusion
So far the only bipartite graphs with perfect matchings for which we were able to test for matching minor containment in bipartite graphs were C4, the cube, and K3,3. Moreover, it was part of the original motivation for the study of K3,3 matching minor free bipartite graphs that on these graphs the number of perfect matchings can be computed efficiently. In this paper we have established perfect matching width as a useful parameter for the study of matching minors, at least in bipartite graphs. Moreover, we have shown both the recognition problem of classes of bipartite graphs excluding a planar matching minor H, and the problem of counting the number of perfect matchings in bipartite graphs in H matching minor free graphs to be in P. A natural question to ask is, whether or not these observations can be extended to bipartite graphs with perfect matchings that exclude some non-planar matching covered graph as a matching minor. Towards this goal we formulate three questions, which pose as the main motivation of our research.
Question 7.1. What is the computational complexity of the t-DAPP?
Question 7.2. Let H be a non-planar bipartite matching covered graph. What is the computational complexity of deciding whether a given bipartite graph B with a perfect matching contains H as a matching minor?
Question 7.3. Let H be any bipartite matching covered graph. What is the computational complexity of computing the number of perfect matchings in a bipartite graph B which does not contain H as a matching minor?
52

Finally, we conclude this work with a question regarding infinite anti-chains of butterfly minors.

Let F be a, possibly infinite, family of digraphs. We say that F can be covered by a finite number

of fundamental anti-chains if there exist digraphs D1, . . . , Dm such that F 

m i=1

A(Di).

Question 7.4. Is there an infinite family F of strongly 2-connected digraphs such that F cannot be covered by a finite number of fundamental anti-chains?

References
[AKKW16] Saeed Akhoondian Amiri, Ken-ichi Kawarabayashi, Stephan Kreutzer, and Paul Wollan. The Erdos-Po´sa Property for Directed Graphs. arXiv preprint arXiv:1603.02504, 2016.
[Arc96] Dan Archdeacon. Topological Graph Theory. A survey. Congressus Numerantium, 115(5-54):18, 1996.
[BJG18] Jørgen Bang-Jensen and Gregory Gutin. Classes of Directed Draphs. Springer, 2018. [Bra21] Henry Roy Brahana. Systems of Circuits on Two-Dimensional Manifolds. Annals
of Mathematics, pages 144­168, 1921. [CLMS19] Victor Campos, Raul Lopes, Ana Karolinna Maia, and Ignasi Sau. Adapting the
Directed Grid Theorem into an FPT Algorithm. Electronic Notes in Theoretical Computer Science, 346:229­240, 2019. [DM58] Andrew L Dulmage and Nathan S Mendelsohn. Coverings of Bipartite Graphs. Canadian Journal of Mathematics, 10:517­534, 1958. [DM59] Andrew L Dulmage and Nathan S Mendelsohn. A Structure Theory of Bipartite Graphs of Finite Exterior Dimension. The Transactions of the Royal Society of Canada, Section III, 53:1­13, 1959. [DM63] Andrew L Dulmage and Nathan S Mendelsohn. Two Algorithms for Bipartite Graphs. Journal of the Society for Industrial and Applied Mathematics, 11(1):183­ 194, 1963. [Edm65] Jack Edmonds. Paths, Trees, and Flowers. Canadian Journal of Mathematics, 17:449­467, 1965. [GKKK20] Archontia C Giannopoulou, Ken-ichi Kawarabayashi, Stephan Kreutzer, and Ojoung Kwon. The Directed Flat Wall Theorem. In Proceedings of the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 239­258. SIAM, 2020. [GT11] Bertrand Guenin and Robin Thomas. Packing Directed Circuits Exactly. Combinatorica, 31(4):397­421, 2011. [Hal76] Rudolf Halin. S-Functions for Graphs. Journal of geometry, 8(1-2):171­186, 1976. [HRW19a] Meike Hatzel, Roman Rabinovich, and Sebastian Wiederrecht. Cyclewidth and the Grid Theorem for Perfect Matching Width of Bipartite Graphs. In International Workshop on Graph-Theoretic Concepts in Computer Science, pages 53­65. Springer, 2019. [HRW19b] Meike Hatzel, Roman Rabinovich, and Sebastian Wiederrecht. Cyclewidth and the Grid Theorem for Perfect Matching Width of Bipartite Graphs. arXiv preprint

53

[JRST01] [KK15]
[KTW20] [Kuh55] [Kur30] [Lit75] [LP09] [McC00] [McC04] [Nor05] [NT07] [RS86a] [RS86b] [RS95] [RS03] [RS04] [RST99] [ST87] [Sta78] [Wag37]

arXiv:1902.01322, 2019. Thor Johnson, Neil Robertson, Paul D Seymour, and Robin Thomas. Directed Tree-Width. Journal of Combinatorial Theory, Series B, 82(1):138­154, 2001. Ken-ichi Kawarabayashi and Stephan Kreutzer. The Directed Grid Theorem. In Proceedings of the forty-seventh annual ACM symposium on Theory of Computing, pages 655­664, 2015. Ken-ichi Kawarabayashi, Robin Thomas, and Paul Wollan. Quickly Excluding a Non-Planar Graph. arXiv preprint arXiv:2010.12397, 2020. Harold W Kuhn. The Hungarian Method for the Assignment Problem. Naval research logistics quarterly, 2(1-2):83­97, 1955. Casimir Kuratowski. Sur le Probleme des Courbes Gauches en Topologie. Fundamenta mathematicae, 15(1):271­283, 1930. CHC Little. A Characterization of Convertible (0, 1)-Matrices. Journal of Combinatorial Theory, Series B, 18(3):187­208, 1975. La´szlo´ Lov´asz and Michael D Plummer. Matching Theory, volume 367. American Mathematical Soc., 2009. William McCuaig. Even Dicycles. Journal of Graph Theory, 35(1):46­68, 2000. William McCuaig. Po´lya's Permanent Problem. Electronic Journal of Combinatorics, pages R79­R79, 2004. Serguei Norine. Matching Structure and Pfaffian Orientations of Graphs. PhD thesis, Georgia Institute of Technology, 2005. Serguei Norine and Robin Thomas. Generating Bricks. Journal of Combinatorial Theory, Series B, 97(5):769­817, 2007. Neil Robertson and Paul D. Seymour. Graph Minors: II. Algorithmic Aspects of Tree-Width. Journal of algorithms, 7(3):309­322, 1986. Neil Robertson and Paul D Seymour. Graph Minors: V. Excluding a Planar Graph. Journal of Combinatorial Theory, Series B, 41(1):92­114, 1986. Neil Robertson and Paul D Seymour. Graph Minors: XIII. The Disjoint Paths Problem. Journal of combinatorial theory, Series B, 63(1):65­110, 1995. Neil Robertson and Paul D Seymour. Graph Minors. XVI. Excluding a Non-Planar Graph. Journal of Combinatorial Theory, Series B, 89(1):43­76, 2003. Neil Robertson and Paul D Seymour. Graph Minors: XX. Wagner's Conjecture. Journal of Combinatorial Theory, Series B, 92(2):325­357, 2004. Neil Robertson, Paul D Seymour, and Robin Thomas. Permanents, Pfaffian Orientations, and Even Directed Circuits. Annals of Mathematics, pages 929­975, 1999. Paul Seymour and Carsten Thomassen. Characterization of Even Directed Graphs. Journal of Combinatorial Theory, Series B, 42(1):36­45, 1987. Saul Stahl. The Embeddings of a Graph--A Survey. Journal of Graph Theory, 2(4):275­298, 1978. Klaus Wagner. U¨ ber eine Eigenschaft der Ebenen Komplexe. Mathematische Annalen, 114(1):570­590, 1937.

54

[Wie20] [ZL10]

Sebastian Wiederrecht. Digraphs of Directed Treewidth One. Discrete Mathematics, 343(12):112124, 2020.
Zan-Bo Zhang and Dingjun Lou. Bipartite Graphs with a Perfect Matching and Digraphs. arXiv preprint arXiv:1011.4359, 2010.

55

