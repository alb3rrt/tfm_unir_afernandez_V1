This work has been accepted for publication in IEEE International Conference on Optical Network Design and Modeling (ONDM), July 2021
Optimal virtual PON slicing to support ultra-low latency mesh traffic pattern in MEC-based Cloud-RAN

1st Sandip Das CONNECT center Trinity College Dublin
Dublin, Ireland dassa@tcd.ie

2nd Marco Ruffini CONNECT center Trinity College Dublin
Dublin, Ireland marco.ruffini@tcd.ie

arXiv:2106.00569v1 [cs.NI] 1 Jun 2021

Abstract--As progressive densification of cells, deployment of Cloud-RAN and Multi Access Edge Computing (MEC) are coming into reality to support the ultra low latency with high reliability in 5G and beyond, it generates mesh traffic pattern across fronthaul network. This led to evolution of PON architectural enhancements with virtualization in order to support such mesh traffic pattern. However, allocation of virtual PON slices dynamically over such mesh-PON based fronthaul transport is becoming a research challenge. In this paper, we provide a mixed analytical-iterative model to compute optimal virtual PON slice allocation, providing mesh access connectivity with ultra-low end-to-end latency in next generation MEC-based Cloud-RAN. Our proposed method can compute optimal virtual PON slice allocation in timescales compatible with real-time or near realtime operations.
Index Terms--PON, MEC, Cloud-RAN, Low-Latency, Virtual PON, Slicing
I. INTRODUCTION
Ultra-low end-to-end latency with high reliability is one of the key requirements in next generation of networks for 5G and beyond. These requirements have led to architectural developments of communication networks centered around the use of Cloud-RAN, cell densification and the adoption of MEC nodes to reduce the distance between Radio Unit (RU) and the software processing site (Distributed Unit (DU), Central Unit (CU) up to the application layer). However, these new architectural design generate mesh traffic communications patterns, with low latency and high capacity requirements, that are not easily (and cost-effectively) supported by current transport technologies. Current Passive Optical Network (PON) architectures only support point to multipoint traffic. A mesh topology could in principle be created through point-to-point links and packets switched technology (i.e., Ethernet), but this is far from cost effective in high densification scenarios.
An emerging research approach to the problem is to modify existing PON architectures to support direct communication between end points. From early designs supporting fixed communication patterns across small number of localised points [1], the approach has evolved towards higher flexibility [2] through a star coupler design, to finally improve scalability

and programmability through dynamic virtual slicing [3]. At the same time, PON virtualisation has progressed form early models where schedulers where designed for specific services [4], to more agnostic algorithms targeting more generic performance indicators [5]. In addition to the traditional end point to central office (i.e., NORTH-SOUTH) communication, such architectures enable direct (i.e., EAST-WEST) communication between PON end points, which becomes a key feature to support high capacity and low latency interconnection of MEC nodes in next generation access network. The ONF AETHER [6] is a prominent example of this distributed access architecture, requiring a high-capacity, low latency mesh access network.
In this work, we address the dynamic network connectivity problem of an access network where a mesh PON topology enables dynamic interconnection of RUs, MEC nodes and central offices. The virtualized mesh topology can be created according to [7] where MEC nodes can be placed at the PON endpoints and EAST-WEST communication between PON end nodes can be established using Wavelength Loop Back (WLB) technique with reflective splitters. Here we are able to create virtual PON slices (whose capacity is allocated through dynamic use of wavelength channels) to enable direct communications between RUs and MEC nodes (hosting DUs and possibly CUs) to support operation of C-RAN instances.
This work proposes a method for optimal formation of virtualised PON (vPON) slices under dynamic traffic scenarios. Given a number of RUs supporting a mix of 7.1 and 7.2 functional split, with varying traffic load and pattern, we determine the optimal set of small cells, macro cells and MEC nodes (our virtual group of end points), that can support the required traffic while maintaining latency below a target threshold. Once the slices are created, our approach is also used to maintain the latency target, in real time, below that threshold. As changes in traffic load and patterns produce latency increase above threshold, we re-configure the virtual topology (i.e., MEC node migration) to reduce latency. A key achievement of this work is the development of an analytical model for PON latency, which significantly reduces the slice

© 2021 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works.

computation time, down to few tens of second (depending on load and number of iterations), which makes this algorithm suitable for real time network optimisation.

II. SYSTEM MODEL

Fig. 1, presents the system architecture and use case of the MESH-PON scenario where a Macro Cell with embedded MEC computation hosts an OLT, which enables direct communication to the nearby small cells (connected through ONUs). In this work we assume such direct connectivity is achieved through Fibre Bragg Grating reflectors located at splitter locations (as with our previous work in [7]), although our solution is transparent to the specific physical layer implementation.
Fig 2 shows a sample solution returned by our virtual PON allocation model, with minimum number of MEC nodes to guarantee latency below 100 µs threshold. Here, the macrocell and small cell coverage areas are modeled using the polybound-vornoi diagrams. The small cells within the boundary of the corresponding macrocell (red color borders) are connected by a level-1 PON tree with a possible MEC node (with OLT) deployed in the macrocell site. RUs at the small cells (blue dot) implement C-RAN with functional split 7.1 or 7.2 which is served by an ONU. Their OLT is located at the computing node that implements the corresponding DU (and possibly CU): this can either be an MEC node or a central office (depending on latency requirements). In addition, we use the common assumptions that MEC nodes are physically co-located with macro cell sites. The core network functions are hosted at the CO regardless of the placement of DU/CU.

Fig. 2: Sample of network layout optimal solution computed by our mixed analytical-Iterative model. Only EAST-WEST links (green) are present due to the 100 µs latency constraint.

III. OPTIMAL FORMATION OF VPON SLICE TO PROVIDE ULTRA-LOW LATENCY IN UPLINK COMP CLUSTERS
In order to find a solution for the virtual PON slice allocation problem, we first need to find an analytical expression for upstream latency per vPON slice based on parameters such as number of RUs, traffic at RUs and functional split (i.e., 7.1 or 7.2). To achieve this, we first find the packet queuing latency per vPON slice as a function of these parameters and then add the propagation latency, according to the slice configuration to obtain the end-to-end latency per vPON slice. We use the Kingsman heavy traffic approximation method for G/G/1 system for finding the mean packet queuing time in ONU queue as described in (1) below.

TW



1 µC

+

(a2 + b2) 2(1 - )

(1)

In (1), 1/ is the average packet inter-arrival times, a2 is the variance of inter arrival times, b2 is variance of the service times,  = /µ is the utilisation factor and 1/µ is the average service time per packet.
Let X be the random variable defining the service time of a fronthaul packet in uplink considering coordinated DBA for uplink packet scheduling. Let D be the set of possible fronthaul packet sizes arriving per Grant Cycle (GC) in a particularr vPON slice, then the mean and the variance of the
service times can be calculated as:

E{X} =E{k × Pr{Dj = k}} × DcUaLp

(2)

1/µ =E{X}, b2 = E{X2} - E{X})2

(3)

X ={Xk | Xk = k × (1/Dcap), k  D}

Fig. 1: Virtualised Mesh-PON architecture supporting MEC-based Cloud-RAN showing EAST-WEST links (green) along with traditional NORTH-SOUTH links (red).

The state probability P r{D = k} (or P (D)) in (1), where random variable D = {x1, x2, . . . , xN } denotes the set of possible aggregated fronthaul packet size (xi) per uplink GC in a vPON slice can be found using successive convolution
method [8] as given (4) and (5). Here, Pj = {pj(di) | di 

{(d1

,

d2

,

.

.

.

dK7.1

)|(d1

,

d2

,

.

.

.

d
K7.2

)}}

are

the

state

proba-

bilities of fronthaul packet size for jth RU considering two

possible split configurations per RU, Split-7.1 or 7.2 and ds

is the eCPRI packet segment size.

N
P (x) = P1  P2  . . . PN , D = xj.ds  dcap (4)
j=1

1

Where, Pi  Pj ={pi(0).pj(0), pi(x).pj(1 - x),

x=0

2

u

pi(x).pj (2 - x), . . . , pi(x).pj(u - x)} (5)

x=0

x=0

pj(di) can be found by considering an M/M/m/m system (queuing theory) at the RU as follows.If  and  be the user call arrival and depart rate at each RU, then the probability that at the steady state, k-user is connected with RU is given by

Symbol W r v i
Slv
TS lv ,a
Tvmax
Li
Xr,v
KiW

Description
Set of wavelengths for EAST-WEST PON RU-ID r  {1, 2, . . . , |R|}, (R := No. of RUs) Denotes the vPON ID v  {1, 2, . . . , |V |}
Binary variable. 1 if an MEC-node, is to be deployed at the ith level-1 PON tree. Set of RUs belonging to vPON slice v i.e., {r| r  R, and Xr,v = 1} Theoretical value of uplink latency for vPON slice Slv and traffic load a (% load) Maximum value of uplink latency for vPON slice. Latency threshold (100 µs) Describes ith physical Level-1 PON tree cluster. i.e., {r| r  R and Xr,i = 1} Binary decision variable  {0, 1}. 1 if RU-r is assigned to vPON-v (r  R, v  V ) Set of W-nearest neighbours of the ith L1 PON
tree.

TABLE I: Notations for mathematical symbols

pk = p0

 

k1 k!

=0

km

k>m

(6)

where

p0 =

m

-1

 k1  k!

,

and

(7)

k=0

m is the maximum number of users that can be supported at the RU. If We consider thresholds F1 < F2 < · · · < Fn as the number of active users per RU to jump between different eCPRI rates, then we can calculate the probability pj(di) that the fronthaul rate for RU-j is di as

NLP1ON

NLP1ON

minimize:

iCiCAP +

iWCiOLT (9)

i=1

i=1

subject to (constraints):

Xr,v = 1  r  R

(10)

vV

Xr,v  v|R|  v  V

(11)

rR

Xr,v = |R|

(12)

rR vV

pj(di) = {Fi-1  number of users in the RU  Fi}

Fi

 k1

 k!

or

pj (di)

=

k=Fi-1 m



k1

(8)

 k!
k=0

TSlv,a  Tvmax  v  V

(13)

Xr,v = 1  r  R

(14)

vKvW

i = |V |

(15)

i

The next step is to define the model for optimal vPON slicing that satisfies a ultra-low latency threshold while minimising total number of MEC nodes to be deployed for a given traffic intensity per RU. The decision variable i  {0, 1} determines whether a MEC-nodei is to be deployed at the ith level-1 PON tree or not. The objective function for the slice optimisation model is given in (9), and the constraints are described in (10)-(15). The optimal level-1 ring to minimize the uplink latency over EAST-WEST PON can be realised by getting a Hamiltonian tour for which the travelling distance is minimized, which is a classical Travelling salesman optimisation problem and can be formulated using (16) and (17),

minimize:

dist(ei, ei+1) + dist(en, e0)

i0,...,n-1

(16)

subject to: ei are a permutation of N

(17)

ei := edge Node Location(< xi, yi > i  {1, 2 . . . N })

The latency constraint given by (13) is a nonlinear function that can be solved with known nonlinear discrete optimisation solvers. However, the exhaustive search with such non-linear solvers is extremely slow due to large search space and timeintensive non-linear constraint evaluation. Therefore, we propose an iterative optimisation method (Algorithm 1)(governed

by parameter "Max iterations") along with integer-linear programming to take care of the non-linear constraint and speedup the optimisation significantly.

Algorithm 1: Iterative algorithm to solve the nonlinear discrete slice optimization model within bounded time

1 Set up and Initialize integer linear model OL;
2 Solve OL; 3 NMlb EC = optimal no. of MEC nodes (output of OL); 4 Evaluate non-linear constraint (13) for each vPON slice;

5 Find N := set of vPONs where non-linear constraint

(13) is not satisfied ;

6 iteration ID = 0;

7 while N is not empty do

8 if max no. of iterations passed then

9

increase lower bound: NMlb EC = NMlb EC + 1;

10

iteration ID=0;

11 else

12

iteration ID=iteration ID+1;

13 end

14 for each vPON slice v  N do

15

Xrs,ovl  current vPON config solution Xr,v;

16

add constraints to OL :

17

Xr,v  v( Xrs,ovl - 1);

rR,

rR

Xrs,ovl =1

18 end

19 solve updated OL;

20 if feasible/optimal solution obtained then

21

Evaluate non-linear constraints (13);

22

Find updated N ;

23 else

Result: No feasible solution. Exit

24

;

25 end

26 end

Result: return the optimization output (slice config)

creates a trade off on the quality of the optimal solution vs the speed of the optimization.
IV. PERFORMANCE EVALUATION AND RESULTS
Our first step is the validation of the analytical model with simulations carried out in OMNET++. We consider a multiwavelength architecture (i.e. following NG-PON2), although we assume a next-generation rate of 50Gbps per channel. The traffic from RU to DU is modeled as evolved Common Public Radio Interface (eCPRI) traffic. We consider split 7.1 and 7.2, both providing variable rate depending on the actual traffic at the cell. The corresponding fronthaul rates are derived from [9] and scaled to 5G configuration of 100 MHz cell bandwidth. For an RU having four antennas and 4-MIMO layers, the fronthaul rate for split-7.1 goes from 1.378 to 7.384 Gb/s, while the split-7.2 it goes from 273.98 Mbps to 2.92 Gbps. Our first result, in Fig 3, reports the feasibility region, showing the optimal mix of small cells using 7.1 and 7.2 split, that satisfies a given latency threshold (100 µs in this case). In Fig 3, different curves refer to different load at RUs, expressed as percentage of average cell load. This results show how our analytical results based on queuing theory are in close agreement with simulations.
This is important because it means we can use the analytical model for calculating upstream latency to quickly find the optimal vPON slices through the proposed optimisation model instead of going through the extensive simulation for all possible vPON slice configurations for the considered network layout. It should be noticed that the solution to our optimisation problem also returns the specific MEC node location and virtual PON configuration (in variable Xr,v), a snapshot of which is shown in Fig. 2 (Xr,v corresponds to the EASTWEST green colored links).

In a nutshell, this iterative method first evaluates the optimal no. of MEC nodes by evaluating the integer-linear programming model without the non-linear constraint (OL). The obtained optimal no. of MEC nodes from the linear model is used as a lower bound (NMlb EC ) for further exploration. Nonlinear latency constraint is evaluated on solution obtained for each vPON slices (corresponding to MEC nodes) and checked for constraint violation. A slice configuration constraint is added for each of the latency violating slice of the linearmodel solution, and the integer-linear model is run again. This process iterates until the non-linear latency constraint is passed for all the obtained slices. We define maximum number of iterations to attempt to satisfy the non-linear constraint so that the algorithm is not stuck in the iteration for indefinite time. Once the maximum number of iterations has passed for the current lower-bound of the number of active MEC nodes, we increase the lower bound and start the process again until an optimal solution is found. Therefore, max-number of iterations

Fig. 3: Feasible vPON slice config. region: a is the RU percentage load.
In Fig. 4 and 5, we report the algorithm performance as a function of load and algorithm iterations. Fig. 4 shows how a higher number of iterations can improve the solution, returning

a configuration with smaller number of MEC nodes, as the solution is explored over a larger search space. We can also see that the computation time increases with the increase in traffic load. This is because at high traffic load, it is more difficult to find a solution that satisfies the latency constraint, therefore the algorithm spends more time in iteration to find the optimal values. Fig. 5 reports the exact computation time as a function of load and iterations.
From Fig. 4 and 5 we can conclude that our analyticaliterative model can quickly (i.e. within 10 iterations) find a solution suitable for real time optimisation (i.e., following burst increase in RU load), which is close to optimal (form the figures, we see just one more MEC node compared to the higher iteration ones). At the same time, even the best solution can be calculated in times ranging from few seconds to few minutes. For comparison, we run the case of 30% load and 70 iteration in simulation without making use of the analytical model. While our model could return an optimal solution in about 100 seconds, the same result required 3 hours and 9 minutes without it (all computations were carried out on Intel i7-6600 mobile processor and simulations parallelised over 4 threads).

Fig. 5: Algorithm computation time vs load and iterations.
solve the optimization model that can quickly find the optimal virtual PON slices with significantly reduced computation time. Our results show that using the proposed mix-analytical iterative optimization method, optimal virtual PON slices can be computed in as quickly as seconds or tens of seconds (based on traffic load and max iterations). Thus making it suitable for real-time or near-real time network optimization.

ACKNOWLEDGMENTS
Financial support from Science Foundation Ireland grants 14/IA/2527 and 13/RC/2077 is gratefully acknowledged.

Fig. 4: Performance of solution for different algorithm iterations.
V. CONCLUSION
In this paper, we have proposed a mixed-analytical iterative optimization method that computes optimal virtual PON slice configuration in a mesh-PON type fronthaul network to support ultra-low latency under dynamic traffic scenarios. To achieve this, we first derived an analytical form for uplink latency in a virtual PON slice under varying traffic load, number of RUs in the vPON slice and RU-split configurations (7.1 or 7.2). With the help of discrete event simulation in OMNET++, we validated the analytical model. Using this analytical form of uplink latency, we then formed a non-linear discrete optimization framework to compute optimal virtual PON slices. We further proposed an iterative algorithm to

REFERENCES
[1] T. Pfeiffer. "Converged heterogeneous optical metro-access networks," Tu.5.B.1, OFC 2010.
[2] C. Ranaweera et al., "Next generation optical-wireless converged network architectures," IEEE Network, vol. 26, no. 2, pp. 22­27, Mar. 2012.
[3] S. Das, M. Ruffini. "PON Virtualisation with EAST-WEST Communications for Low-Latency Converged Multi-Access Edge Computing (MEC)", M2H.3., OFC 2020.
[4] P. Alvarez et al., "Backhauling mobile systems with XG-PON using grouped assured bandwidth," NOC 2014.
[5] M. Ruffini et al., "The Virtual DBA: Virtualizing Passive Optical Networks to Enable Multi-Service Operation in True Multi-Tenant Environments--. OSA Journal of Optical Communications and Networking, No.4, Vol.12, April 2020.
[6] Aether: Enabling a New Era of Smart Enterprises. ONF Whitepaper, December 2020.
[7] S. Das et al., "Virtualized EAST­WEST PON architecture supporting low-latency communication for mobile functional split based on multiaccess edge computing," OSA Journal of Optical Communications and Networking, vol. 12, no. 10, pp. D109-D119, October 2020.
[8] V. B. Iversen, "Teletraffic engineering and Network planning, Chap-10, Sec-4.", DTU Fotonik, 2007.
[9] U. Dotsch et al., "Quantitative analysis of split base station processing and determination of advantageous architectures for LTE", Bell Labs Technical Journal, vol. 18, no. 1, pp. 105­128, Jun. 2013.

This figure "fig1.png" is available in "png" format from: http://arxiv.org/ps/2106.00569v1

