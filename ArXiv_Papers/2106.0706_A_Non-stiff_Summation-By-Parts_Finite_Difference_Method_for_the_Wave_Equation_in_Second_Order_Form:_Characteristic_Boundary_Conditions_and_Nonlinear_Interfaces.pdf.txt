arXiv:2106.00706v1 [math.NA] 1 Jun 2021

A Non-stiff Summation-By-Parts Finite Difference Method for the Wave Equation in Second Order Form: Characteristic Boundary Conditions and Nonlinear Interfaces
Jeremy E. Kozdon · Brittany A. Erickson · Tobias Harvey
June 1, 2021
Abstract Curvilinear, multiblock summation-by-parts finite difference methods with the simultaneous approximation term method provide a stable and accurate method for solving the wave equation in second order form. That said, the standard method can become arbitrarily stiff when characteristic boundary conditions and nonlinear interface conditions are used. Here we propose a new technique that avoids this stiffness by using characteristic variables to "upwind" the boundary and interface treatment. This is done through the introduction of an additional block boundary displacement variable. Using a unified energy, which expresses
J.E.K. was supported by National Science Foundation Award EAR-1547596 B.A.E. was supported by National Science Foundation Awards EAR-1547603 and EAR1916992 T.H. was supported by National Science Foundation EAR-1916992
J. E. Kozdon Department of Applied Mathematics, Naval Postgraduate School, 833 Dyer Road, Monterey, CA 93943­5216 E-mail: jekozdon@nps.edu
B. A. Erickson Department of Computer and Information Science & Department Earth Sciences, 1202 University of Oregon, 1477 E. 13th Ave. Eugene, OR 97403­1202 E-mail: bae@uoregon.edu
T. Harvey Department of Computer and Information Science 1202 University of Oregon 1477 E. 13th Ave. Eugene, OR 97403­1202 E-mail: tharvey2@uoregon.edu
The views expressed in this document are those of the authors and do not reflect the official policy or position of the Department of Defense or the U.S. Government. Approved for public release; distribution unlimited

2

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

both the standard as well as characteristic boundary and interface treatment, we show that the resulting scheme has semidiscrete energy stability for the anistropic wave equation. The theoretical stability results are confirmed with numerical experiments that also demonstrate the accuracy and robustness of the proposed scheme. The numerical results also show that the characteristic scheme has a time step restriction based on standard wave propagation considerations and not the boundary closure.

1 Introduction
Due to their superior dispersion properties, high-order methods are ideally suited for wave-dominated partial differential equations (PDEs) (Kreiss and Oliger 1972). That said, unless great care is taken in the treatment of boundary conditions, interface couplings, and variable coefficients, high-order methods are often less robust than their low-order counterparts. An important tool in robust high-order methods is utilization of the summation-by-parts (SBP) property (Kreiss and Scherer 1974, 1977). SBP is the discrete analogue of integration by parts and allows the discrete stability analysis to mimic the continuous well-posedness analysis (Nordstro¨m 2017).
When combined with multiblock domain decompositions and curvilinear coordinates, SBP finite difference methods can be used to stably and accurately model complex geometries and variable material parameters. SBP finite difference methods use standard central difference stencils in the interior of a domain and transition to one-sided stencils at boundaries and interfaces in a manner that maintains the SBP property. An important feature of SBP finite difference methods is the built-in norm matrix, which is similar to the mass matrix in finite element methods. A variety of SBP finite difference operators have been developed with the most relevant to this work being the first and second derivative operators on unstaggered grids (Kreiss and Scherer 1974, 1977; Mattsson 2012; Mattsson and Nordstro¨m 2004; Strand 1994a). With SBP finite difference methods it is possible to either enforce boundary conditions strongly (Olsson 1995a,b) or weakly (Carpenter et al. 1994, 1999); weak enforcement of boundary condition with SBP methods is often called the simultaneous approximation term (SAT) method and is the approach taken here.
We are primarily interested in the wave equation in second-order form, that is, a displacement formulation of the wave equation as opposed to velocity-stress or velocity-strain. Our motivation for this is to address our ultimate goal of advancing simulations of the earthquake cycle where interseismic loading (decade long tectonic loading) is coupled to dynamic rupture (earthquake rupture taking place over seconds to minutes); the importance of this coupling has been recently highlighted in, for example, Erickson et al. (2020). In the interseismic phase, a quasidynamic formulation is often used that neglects inertial effects, e.g., acceleration, resulting in an elliptic PDE for the displacement. In the coseismic rupture phase inertial effects should be included resulting equation is a hyperbolic wave equation.
In order to avoid having to transition between displacements and velocitystress (or velocity-strain) it is desirable to use a displacement-based formulation for the coseismic phase. Virta and Mattsson (2014), building on Mattsson et al.

Non-stiff SBP in Second-Order Form

3

(2008, 2009), developed an SBP-SAT finite difference scheme for the second-order wave equation with variable coefficients on curved geometries. Duru et al. (2019) extended this scheme for use with nonlinear friction laws which govern the sliding of fault interfaces in earthquake problems; nonlinear friction laws relate the interface traction to the sliding velocity. However, as noted in Duru et al. (2019), the modified scheme that incorporates the nonlinear friction law results in a numerically stiff system of ordinary differential equations that prevents the use of, for instance, explicit Runge-Kutta time stepping methods; in Duru et al. (2019) a custom second-order accurate time stepping method is used. Similar numerical stiffness is also seen in the velocity-stress formulation of the wave equation for earthquake problems, though this can be circumvented by rewriting the nonlinear friction law in terms of the characteristic variables, (Kozdon et al. 2012).
The heart of the difference between the traction-velocity and the characteristic interface formulations can be seen by considering a simple linear boundary condition. In one spatial dimension, if the nonlinear interface is reduced to a boundary and linearized the following boundary condition results:

1u = -u .

(1)

Here u is the particle displacement, 1u denotes the derivative in space, and u the derivative in time; the traction on the boundary is proportional to 1u and the sliding velocity is the negative of boundary particle velocity. The coefficient   0 comes from the linearization of the nonlinear friction law around a reference velocity. In an earthquake rupture simulation, the effective value of  can range over many orders of magnitude; for a fuller discussion of friction laws used in earthquake modeling see, for example, Rice (1983); Rice et al. (2001); Scholz (1998). When  is large, the boundary condition essentially reduces to enforcing a Dirichlet-type boundary condition through Neumann boundary treatment. Since the scheme proposed by Virta and Mattsson (2014) and Duru et al. (2019) has a parameter that scales linearly with , it is in the limit of large  that the stiffness is seen; see Figure 1.
An alternative formulation is to use the characteristic variables. When this is done the boundary condition becomes the reflection of the outgoing characteristic wave:

1-

u - 1u = R(u + 1u),

R=

, 1+

(2)

where for simplicity we are neglecting the material parameters. Since   0 the reflection coefficient is bounded: -1  R  1. When used in the SBP-SAT discretization of the first order wave equation, the characteristic boundary condition leads to a parameter that scales linearly with R which avoids the stiffness seen with the traction-velocity approach (Kozdon et al. 2012).
The main contribution of this work is the use of a characteristic formulation of boundary and interface conditions within a displacement-based scheme, namely merging the ideas of Virta and Mattsson (2014) and Kozdon et al. (2012). The key idea of the work is to track the evolution of the boundary and interface displacements, which allows the use of a non-stiff characteristic formulation. The benefit of our approach versus the previous approach (Duru et al. 2019; Virta and Mattsson 2014) is shown in Figure 1, where the spectrum of a one-dimensional operator is shown for various values of  (or equivalently R); a fuller discussion of this figure is

4

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

max(-Re(h))



3

1 1/3 0

102 101 100 10-1 10-2 10-3

non-characteristic characteristic

-1 -0.5 0 0.5 1 R

(a) Maximum magnitude real component of the eigenvalue spectrum which controls stiffness versus reflection coefficient R and .
2

0

Im(h)

2
0
-2 -3 -2 -1 0 Re(h)
(b) Full spectrum comparison with R = 0.99 (or  = 1/199).
2 -562
0

Im(h)

Im(h)

-2 -3 -2 -1 0 Re(h)
(c) Full spectrum comparison with R = 0 (or  = 1).

-2 -3 -2 -1 0 Re(h)
(d) Full spectrum comparison with R = -0.99 ( = 199); as indicated, the far left eigenvalue of the noncharacteristic method is shifted.

Fig. 1: Comparison of the eigenvalue spectra for the proposed characteristic and non-characteristic (Virta and Mattsson 2014) treatment of boundary conditions for various values of reflection coefficient R. In all cases the domain is [0, 1] with grid spacing 1/50 and SBP interior accuracy of 2p = 4. The characteristic method is indicated by red × and the non-characteristic method with blue +.

in Section 6.1. Additionally, the figure shows the maximum magnitude real part of the spectra for a sweep of  values. As can be seen, as    (or equivalently as R  -1) the non-characteristic formulation results in a large magnitude, negative real eigenvalue.
The remainder of the paper is structured as follows: Section 2 describes the model wave equation and the continuous energy analysis. Section 3 discusses the decomposition of the domain into computational blocks and introduces the coordinate transforms. In Section 4 we review important results for SBP finite difference methods and our notation. The proposed discretization is developed in Section 5 along with the semidiscrete energy analysis. Numerical experiments to confirm the stability and accuracy properties of the scheme are given in Section 6 and some concluding remarks are given in Section 7. In order to communicate the core ideas of the paper, most of the proofs, analysis details, and construction details of the SBP operators are given in the appendix. All numerical results can be gener-

Non-stiff SBP in Second-Order Form

5

ated using the codes available at https://github.com/jkozdon/sbp_waveprop_ characteristic.

2 Model Problem

Let   Rd be a bounded domain with boundary . The boundary is split into

two distinct parts: a Dirichlet boundary D and a characteristic boundary C .

Additionally, let I  Rd-1 be a set of interfaces in the domain. Unless otherwise

noted summation over repeated subscripts is implied, e.g., uivi =

d i=1

uivi,

uii

=

d i=1

uii,

and

uiCij vj

=

d i=1

d j=1

uiCij

vj

.

As a model problem we consider the second-order, anistropic wave equation

for the scalar displacement u:

u¨ = iCij j u,

x  , t  [0, T ],

(3a)

u = gD,

x  D, t  [0, T ],

(3b)

Zu +  = R(Zu -  ) + gC , x  C , t  [0, T ],

(3c)

 - = - +,

 ± = F (V ±)

x  I , t  [0, T ].

(3d)

Here, the density  > 0 and the components of the stiffness matrix Cij are taken to be spatially varying. Additionally, the stiffness matrix is assumed to be symmetric positive definite: Cij = Cji and viCijvj  0 with equality only when vi = 0 for all i. At interfaces and boundaries the traction  is defined as

 = niCij j u,

(4)

where the vector ni is the unit normal which is taken to be outward pointing on
boundaries. On C the reflection coefficient satisfies -1  R  1 where the shear impedence is defined as Z2 = niCijnj. On the interface I , (3d) specifies
force balance and a friction law, respectively. The normal vector is defined so that n-i points away from the minus side and n+i points away from the plus side with n+i = -n-i . The superscripts on the material parameters denote which side of the interface the material parameters are evaluated on. We define jump in u across
the interface by

V ± = u  - u ±.

(5)

The nonlinear function F (V ) is the frictional strength of the interface and is assumed to satisfy V F (V )  0. Force balance and V + = -V - imply that F (V +) = -F (V -).
Characteristic variables w and q, which are associated with locally propagating
waves in the direction ±n, respectively, can be defined as

w = Zu - ,

(6a)

q = Zu + .

(6b)

6

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

The velocity u and traction  can also be recovered from the characteristic variables,

q+w

u =

,

(7a)

2Z

q-w

=

.

(7b)

2

The characteristic boundary condition (3c) can now be rewritten as

q = Rw + gC .

(3c')

Though not needed for the continuous analysis, a critical step in the discretization below is to rewrite interface condition (3d) in terms of the characteristic variables. Namely, we define the interface condition as

q± = Q± w±, w .

(3d')

The function Q± is defined consistently with the underlying function F (V ) by requiring that

u ±

=

Q± + w± 2Z± ,

 ± = Q± - w± = F V ± . 2

(8a) (8b)

For general F the function Q± cannot be stated in closed form, but can be guaranteed to exist by the implicit function theorem as long as F (V ) > 0 (Kozdon et al. 2012, Proposition 1). Details on how the problem of finding Q± can be reduced to a single variable root finding problem are found in Appendix E.
To guide the development of the numerical scheme, we now develop an energy estimate for governing equation (3a). We define a seminorm E(u) and then show that E (u(·, t))  0 when gD = gC = 0 for all t > 0; with non-zero boundary data energy growth due to the boundary conditions must be allowed.
We define the energy E(u) for a scalar valued function u(x, t) as

E=1 2



u 2 + (iu) Cij (j u)

.

(9)

This is valid seminorm of u, namely E  0 for all u, because the stiffness matrix is symmetric positive definite. With this definition of energy it is possible to prove the following lemma; see Appendix B.
Lemma 1 Governing equations (3) with energy (9) satisfy E  0 if gD = gC = 0.

Non-stiff SBP in Second-Order Form

7

3 Domain Decomposition

Let B() be a partitioning of   Rd into Nb non-overlapping, curved blocks
(quadrilaterals when d = 2 and hexahedrons when d = 3). For each B  B() there is a diffeomorphic mapping xB between B and the reference block B^ = [0, 1]d such that xB()  B for all   B^. We use the notation ^i to denote the partial derivative with respect to i. The Jacobian determinant is denoted as JB. For
example with d = 2

J B = ^1xB1 ^2xB2 - ^1xB2 ^2xB1 .

(10)

Note that typically the metric terms are computed by first computing ^lxBi and then metric identities are employed to calculate jm B ; see, for example, Kopriva
(2006). Each block B  B() has 2d faces, and we let Bf for f = 1, 2, . . . , 2d be the
faces in physical space and B^f be the faces in the reference space. We assume that each face Bf corresponds to either a Dirichlet boundary, characteristic boundary,

nonlinear interface, or a purely computational interface (i.e., an artificial interface

introduced in the partitioning of  into curved blocks). We let nBi f denote the

outward pointing normal to face f of block B in physical space and n^Bi f  n^fi

denote the same outward pointing normal in the reference space. Note that only

one component of n^fi is non-zero so that the Kroneckor delta ij provides a face

numbering convention n^fi

= (-1)f 

f 2

i. The relationship between ni and n^i is

SJBf nBi f = J B ikB n^fk ,

(11)

where the surface Jacobian SJBf is the normalization factor so that nBi f is a unit
vector. Given the face numbering convention and properties of the reference unit norm n^fi , the surface Jacobian with d = 2 is

SJBf

2
=

JB 2

iBf

2

i



B
f

2

(no summation over f ).

(12)

Before writing down the transformed governing equations, it is useful to define a few quantities. For each B  B() we define the transformed density and stiffness matrix as

^ = J, C^ij = J (li) Clm (mj ) ;

(13a) (13b)

in this equation, and those that follow, unless needed the subscript B denoting the block number is suppressed. Similarly, on face Bf the shear impedence and
traction are defined as

Z^f 2 = ^n^fi C^ij n^fj =

SJf Zf

2
,

^f = n^fi C^ij ^j u = SJf  f ;

(14a) (14b)

unless needed for clarity, the superscript Bf is reduced to f .

8

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

With these, for each B  B() governing equations (3) become

^u¨ = ^iC^ij^ju,   [0, 1]d, t  [0, T ]. For each face Bf the boundary or interface condition is

u = gD,

if Bf  D = ,

Z^f u + ^f = R(Z^f u - ^f ) + SJf gC , if Bf  C = ,

^f- = -^f+ ^f± = SJ F (V f± ),

if Bf  I = ,

^f- = -^f+ , u f- = u f+ ,

otherwise.

(15a)
(15b) (15c) (15d) (15e)

where V f± = u f -u f± . Here the notation f ± denotes the two sides of the interface with f - denoting the interior value and f + denoting the exterior (neighboring block) value. Namely, let face Bf of block B  B() be connected to block C  B() along face Cf , then Bf- = Bf and Bf+ = Cf . By definition SJf+ = SJf- and n^fi + = -n^fi - . Interface conditions (15e) are not present in the original governing equations (3), and are added to account for continuity of the
solution across locked (purely computational) block interfaces.
As with the original system, it is useful to introduce the characteristic variables

w^ = Z^u - ^, q^ = Z^u + ^,

(16a) (16b)

and as before the displacement and traction can be easily recovered

u =

q^ + w^ 2Z^

,

^ = q^ - w^ . 2

With this, the characteristic boundary condition (15c) can be written as

(17a) (17b)

q^ = Rw^ + SJf gC .

(15c')

Similarly, the nonlinear interface condition (15d) and locked interface condition

(15e) can be combined as

q^± = Q^± w^±, w^ .

(15d')

For the nonlinear interface conidition (15d) the form of Q^± is defined in the same manner as discussed following (3d'). In the case of the locked interface (15e) Q^±
can be stated explicitly:

Q^±

w^±, w^

2Z^±w^ + (Z^± - Z^)w^±

=

Z^+ + Z^-

;

(18)

as can be seen in the limiting case of Z^+ = Z^- this is just transmission of the characteristic variable across the interface: Q^± w^±, w^ = w^.

Non-stiff SBP in Second-Order Form

9

For the transformed system (15), the energy in block B  B() is

EB = 1 2

B^

^u 2 +

^iu

C^ij

^j u

.

(19)

It is straightforward to show that the energy (9) satisfies

E=

EB,

BB()

(20)

and the transformed governing equation satisfy the energy estimate of Lemma 1.

4 Summation-By-Parts Operators
To approximate the spatial derivative summation-by-parts (SBP) finite difference operators are used. We begin with the introduction of the one-dimensional operators and then generalize the operators to multiple dimensions using tensor products.

4.1 One Dimensional SBP Operators

Let the domain 0    1 be discretized with an N + 1 equally spaced grid points.
The grid of points are represented as  with spacing h = 1/N and points located at
{}k = kh for k = 0, 1, . . . , N . Let u be the projection of u onto the computational grid. We define the operator ek to be the grid basis functions, that is the vector which is 1 at grid point k and zero at all other grid points. Importantly eTk selects the value of a grid function u at the point k, namely eTk u = {u}k.
Let the first and C-weighted second derivatives of u be approximated as

^1u 1=kh  {D1u}k,

^1 C ^1 u

 D(1C1 )u .

1 =kh

k

(21a) (21b)

The derivative approximations D1 and D(1C1 ) are called SBP if they satisfy the following definitions.

Definition 1 (SBP First Derivative) The operator D1 is called an SBP ap-
proximation if it can be decomposed as H1D1 = Q1 with H1 being a symmetric positive definite matrix and

uT Q1 + QT1 v = uT eN eTN v - uT e0eT0 v = {u}N {v}N - {u}0{v}0, (22)

for all vectors u and v.
Definition 2 (SBP Second Derivative) The operator D(1C1 ) is called an SBP approximation if it can be decomposed as

H1D1(C1 ) = -A1(C1 ) + {C}N eN bTN - {C}0e0bT0 ,

(23)

where A(1C1 ) is a symmetric positive semidefinite matrix and bTN u and bT0 u are accurate approximations of first derivative of u at the boundary points {}N and {}0, respectively.

10

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

In addition the derivative operators are assumed to be compatible operators, namely that H1 is the same for both the first and second derivative operators and the weighting matrix H1 is diagonal.
Remark 1 It is not assumed that the boundary derivative operators bT0 and bTN are the first and last rows of D1, namely bT0 = e0D1 and bTN = eN D1. That is, we do not assume that the operators are fully-compatible SBP operators (Mattsson and Parisi 2010).

The reason that operators that satisfy Definitions 1 and 2 are called SBP is that the following identities

uT HD1v = {u}N {v}N - {u}0{v}0 - uT DT1 Hv, uT HD1(C1 )v = {C}N {u}N bTN v - {C}0{u}0bT0 v - uT A(1C1 )v,

(24a) (24b)

discretely mimic the continuous integration by parts identities

1

1

u^1v = (uv)|10 - (^1u)v,

0

0

1

u^1 C ^1 v

=

(C

u^1v

1
)|0

-

1
(^1 u)C ^1 v .

0

0

(25a) (25b)

It is useful to note that H1 and A(1C1 ) lead to quadrature approximations of the following integrals (Hicken and Zingg 2013):

1
uv  uT H1v,
0
1
(^1u)C^1v  uT A(1C1 )v.
0

(26a) (26b)

4.2 Multidimensional SBP operators

Multiple dimensional SBP operators can be constructed via tensor products. In

particular the one-dimensional operators are applied along the grid lines. To ap-

proximate governing equations (15) derivative approximations are needed of the

form:

^iC^j u  D~ i(jC)u~.

(27)

The variable coefficients C present in the approximation make it cumbersome to define the form of D~i(jC)u~, so here we outline some of the important discrete properties of the operator; Appendix A presents the tensor product construction

of the operators in two spatial dimensions from which the higher dimensional

extensions can be generalized. We define multidimensional SBP operators on the domain [0, 1]d. A regular,

Cartesian grid is used to discretize the domain with Ni + 1 grid points in each direction and grid spacing hi = 1/Ni. The solution is represented as a vectors with the leading dimension being the fastest index, i.e., column-major order. So in two

dimensions the grid function of u(1, 2) is the vector

u~ = {u~}00 {u~}10 . . . {u~}N1N2 T ,

(28)

Non-stiff SBP in Second-Order Form

11

where {u~}ij  u(ih1, jh2). Let H~ be the tensor product volume norm matrix,

H~ = H1  · · ·  Hd,

(29)

which can be thought of as an approximation of the inner product

vu  v~H~ u~.

(30)

B^

The tensor product derivative operators have the following SBP structure

H~ D~ i(jC) = -A~(ijC) + 2i n^fi L¯f T Hf Cf B¯fj ,
f =2i-1

(31)

where the two terms in the multidimensional SBP decomposition can be thought of as approximations of the following volume and surface integrals:

(^iv)C(^j u)  v~T A~(ijC)u~T ,
B^
vn^fi C(^j u)  n^iv~ L¯f T Hf Cf B¯fj u~.
 B^ f

(32a) (32b)

If Cij defines a symmetric positive definite, spatially varying coefficient matrix then the matrix A~(ijCij) (summation implied over i and j) is symmetric positive semidefinite; see Appendix A.
The matrix L¯f selects the points from the volume vector along face f of the reference block. The matrix B¯fj computes the derivative approximation in the direction j and evaluates it along face f . When i = j in (31) then f  (2j - 1, 2j) and B¯fj is based on the boundary derivatives from the one-dimensional second derivative SBP operator. When i = j in (31) then f / (2j - 1, 2j) and B¯fj is based on the first derivative SBP operator. The diagonal matrix Hf is the tensor
product surface norm matrix, which approximates

vu  v~ L¯f T Hf L¯fj u~,
 B^ f

(33)

and the diagonal matrix Cf is the variable coefficient evaluated at the points of face f . Since the reference unit normal n^fi = (-1)f on faces f  (2i - 1, 2i) and n^fi = 0 for f / (2i - 1, 2i) the summation in SBP decomposition (31) can be
extended to be a summation over all faces,

H~ D~ i(jC) = -A~(ijC) +

2d
n^fi

L¯f

T Hf Cf B¯fj ;

f =1

(31')

this new form will be used to simplify the statement of the discretization of the wave equation below.
As noted above, here we have only outlined our basic notation and more details about the construction of the operators are given in Appendix A.

12

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

5 Multi-Block Discretization

With the above defined SBP notation, a single block discretization of (15a) with weak enforcement of boundary conditions can be written as

~u~¨ = D~ i(jC^ij)u~ +

2d
H~ -1

L¯f

T Hf

^f

-

N^

f i

C^fij

B¯ fj

u~

f =1

-

2d
H~ -1

B¯ fj

T

N^

f i

C^fij

H

f

uf - L¯f u~

f =1

(34)

which after multiplying by H~ and applying the multidimensional SBP property (31') gives a form which is more convenient for analysis:

2d
~H~ u~¨ = - A~(ijC^ij)u~ +

L¯f T Hf ^f

f =1

2d
-

B¯ fj

T

N^

f i

C^

f ij

H

f

uf - uf

.

f =1

(35)

Here we have defined

uf = L¯f u~,

(36)

and ~ is a diagonal matrix of density  evaluated at the grid points. The vectors ^f and uf , which we call the numerical fluxes, are used to enforce the boundary and interface conditions weakly; the exact form of these vectors will depend on the specific boundary or interface condition and is discussed in detail below.
We define the energy in the domain as

E=

EB,

BB()

where the energy in block B is

EB

=

1 u~ T H~ ~u~ 2

+

1 2

u~T

A~(ijC^ij

)

u~

1 2d +

^f T Xf Hf ^f - T^f T Xf Hf T^f .

2

f =1

Here we have defined the matrix

Xf =

N^

f i

C^fij

N^

f j



f

-1

(37) (38) (39)

where  f is a penalty parameter which must be sufficient large; a lower bound for  f is given by (86a). Additionally we define the block and interface face tractions

T^f

=

N^

f i

C^fij

B¯ fj

u~,

^f = T^f + Xf -1 uf - L¯f u~ .

(40a) (40b)

Non-stiff SBP in Second-Order Form

13

Essentially, discrete energy (38) is a direct discretization of continuous energy (19) with an additional penalty on the faces for the mismatch between two alternative approximations of the traction ^f (14b) on the faces.
The discrete energy satisifies the following lemma; see Appendix C.
Lemma 2 Energy (38) is a seminorm of the solution if  f is positive and sufficiently large.

Remark 2 In the proof of Lemma 2 the updated borrowing lemma from Almquist and Dunham (2020) is employed to determine the penalty parameter  f . Though not shown, in one spatial dimension a slightly better parameter can be determined using the borrowing lemma from Virta and Mattsson (2014); in multiple dimensions Almquist and Dunham (2020) yields better results.

The stability of the scheme will be shown by proving that for each boundary type, the global energy is non-increasing in time when boundary data is set to zero. Namely, we will show that

E =

EB  0.

BB()

(41)

For a single block, taking the time derivative of block energy (38) and using discretization (35) gives

2d

EB =

Ef ,

f =1

Ef = ^f T Xf Hf ^ f - T^ T Xf Hf T^

+ ^f T Hf u f - uf - uf T Hf T^ .

(42a) (42b)

Using the definition of ^f (40b) the rate of change of face energy simplifies to

Ef = ^f T Hf u f + ^f T Hf u f - u f .

(43)

Discrete face energy rate (43) is of the same form as the continuous counterpart (73), namely a boundary integral of the particle velocity times the traction at the boundary. Stability is now reduced to showing that if a face f is on a physical boundary that Ef  0 and if on a block interface that Ef- + Ef+  0.
In the remainder of this section numerical fluxes are given for characteristic boundary conditions as well as the characteristic treatment of locked and nonlinear interfaces. In all of these cases the basic idea is to specify an equation for u , i.e., the time derivative of the numerical flux, so that u becomes an additional block face variable that must integrated in time. It is shown that in all cases this leads to energy dissipation across the block face and thus stability.
In Appendix D the typical SBP-SAT numerical fluxes for Dirichlet, Neumann, and Characteristic boundary conditions as well as locked interfaces are given, e.g., those from Virta and Mattsson (2014) with the improved Dirichlet penalty parameter of Almquist and Dunham (2020). The standard approach specifies u directly, i.e., they do not require an additional block face variable be integrated in time.

14

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

5.1 Characteristic Boundary Conditions

When block face f corresponds to a characteristic boundary (15c') the basic idea
is to mimic in the upwinding procedure of the first order formulation. Namely, we
seek to modify the incoming characteristic variable q while leaving the outgoing
characteristic variable w unmodified. The challenge here is that the velocity is
not a prognostic variable in our formulation. To get around this, we introduce an equation for u f which describes the time evolution of the numerical flux and this is used to enforce the boundary condition. Namely, we choose values of ^f and u f which preserves the outgoing characteristic variable while also satisfying the
boundary condition:

Z^f u f - ^f = Z^f u f - ^f , Z^f u f + ^f = Rf Z^f u f - ^f

+ SfJ gCf ;

(44a)

Solving these equations for the numerical fluxes then gives

u f = I + Rf 2

u f - Z^f -1^f

+1 2

Z^f

-1

S

f J

gCf

,

^f

=

I -

- Rf

2

Z^f u f - ^f

+

1 2

S

f J

gCf

.

(45a) (45b)

Note that this formulation requires that uf be stored along the face and integrated in time.
Using the characteristic boundary treatment (45) in the face energy rate of change (43) then gives

Ef =

I - Rf -
2

Z^f u f - ^f

+

1 2

S

f J

gCf

T
Hf u f

+ ^f T Hf

I + Rf 2

u f - Z^f -1^f

+1 2

Z^f

-1SfJ gCf - u f

=-

u f

T I - Rf Z^f Hf u f -

^f

T I + Rf

Z^f

-1
H

f

^f

2

2

1 +
2

S

f J

gCf

T Hf

u f + Z^f -1^f

1 2

S

f J

gCf

T Hf

u f + Z^f -1^f

,

(46)

where we have used that the reflection coefficient satisfies -1  R  1. Letting gC = 0 it follows that Ef  0 and the boundary treatment is energy stable.

5.2 Characteristic Interface
For characteristic interfaces, locked or nonlinear, the aim is to define the numerical fluxes to satisfy the interface condition in a way that preserves the characteristic variables propagating into the interface. As noted in Section 3, the nonlinear and

Non-stiff SBP in Second-Order Form

15

locked interface conditions can be enforced using the function Q^f± (15d'). Thus we define ^f± and u f± so that they satisfy

w^f± = Z^f± u f± - ^f± = Z^f± u f± - ^f± , q^f± = Q^f± w^f± , w^f = Z^f± u f± + ^f± .

(47a) (47b)

Solving for the numerical fluxes then gives

u f± = 1 Z^f± -1 q^f± + w^f± , 2

(48a)

^f± = 1 q^f± - w^f± . 2

(48b)

Since ^f± and u f± satisfy the interface conditions, it follows that for a locked interface:

^f- = -^f+ ,

(49a)

u f- = u f+ ,

(49b)

and for the nonlinear interface:

^f- = -^f+ ,

^f ±

=

S

f J

F

V f ±

,

(50a) (50b)

where V f± = u f - u f± . Since it is required that V F (V )  0, for both the locked and nonlinear interface treatment it follows that

^f ±

T
V

f ±



0;

(51)

in the locked interface case V f± = 0. In order to analyze the interface treatment, it is useful to define the grid based
characteristic variable

q^f± = Z^f± u f± + ^f± ,

(52)

so that we can write

u f± = 1 Z^f± -1 q^f± + wf± , 2

(53a)

^f± = 1 q^f± - wf± ; 2

(53b)

identical expressions can be written for the numerical fluxes q^f± , u f± , and ^f± . Using these in the face energy rate of change (43) gives

Ef± = ^f± T H f u f± - u f± + u f± + ^f± T H f u f± - u f±

= ^f± T H f u f± - ^f± - ^f± T H f u f± - u f±

(54)

=

^f± T H f u f± - 1 q^f± - q^f± T

Z^f ±

-1
Hf

q^f± - q^f±

.

4

16

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

Adding the two sides of an interface together yields

Ef- + Ef+ = ^f- T H f u f- + ^f+ T H f u f+

1 -

q^f- - q^f-

T

Z^f -

-1
Hf

q^f- - q^f-

4

- 1 q^f+ - q^f+ T

Z^f +

-1
Hf

q^f+ - q^f+

4

= - ^f - T H f V f -

(55)

- 1 q^f- - q^f- T

Z^f -

-1
Hf

q^f- - q^f-

4

1 -

q^f+ - q^f+

T

Z^f +

-1
Hf

q^f+ - q^f+

.

4

Here we have used that ^f+ = -^f- . Energy stability results since this face energy rate of change is non-positive due to the positivity result of (51) and the fact that the second two terms are in quadratic form.

6 Numerical Experiments

We confirm theoretical stability and examine accuracy with numerical experiments
in one and two spatial dimensions. When needed, the error is measured using the discrete L2 norm

Nb

u~ H =

(u~B)T J~BH~ Bu~B,

(56)

b=1

where u~ is the difference between the numerical and analytic solution evaluated

at the grid points. In all cases the penalty parameter is chosen to be at the stability limit, i.e., the equality condition of (86a). Throughout we refer to the SBP

operators as 2p where p is the boundary accuracy and 2p is the interior accuracy;

unless otherwise noted, the SBP orders used are 2p = 2, 4, 6. SBP methods for

the wave equation in second order form typically see a global convergence rate

of min(2p, p + 2), i.e., two orders of accuracy greater than the boundary accu-
racy except in the case of 2p = 2. For first derivatives we use the operators from Strand (1994b)1 and for second derivatives the variable coefficient operators from
Mattsson (2012).

The Julia programming language (Bezanson et al. 2017, v1.6.0) was used for

all simulations with the codes available at https://github.com/jkozdon/sbp_ waveprop_characteristic.

6.1 One Dimensional Linear Boundary Condition: Stiffness and Accuracy
We begin by comparing the proposed characteristic and standard non-characteristic boundary treatment in one spatial dimension. A single block is used for the domain
1 The free parameter x1 = 0.70127127127127 is used for 2p = 6.

Non-stiff SBP in Second-Order Form

17

~u H

10-1 10-4 10-7 10-10
10-3

2
4
5 10-2 h

10-1

2p = 2: characteristic 2p = 2: non-characteristic 2p = 4: characteristic 2p = 4: non-characteristic 2p = 6: characteristic 2p = 6: non-characteristic

10-1

(a) R = 0.99 (or  = 1/199). 10-1

~u H

10-4

2

10-4

2

10-7
10-10 10-3

4 5
10-2 h

10-1

10-7
10-10 10-3

4 5
10-2 h

10-1

(b) R = 0 (or  = 1).

(c) R = -0.99 (or  = 199).

~u H

Fig. 2: L2 convergence comparison of the characteristic (+ markers) and noncharacteristic (× markers) treatment of boundary conditions with various values of the reflection coefficient R. The red, blue, and green curves correspond to SBP interior orders 2, 4, and 6, respectively.

 = [0, 1] and the material properties are taken to be  = C11 = 1. Both the right and left boundaries are characteristic with a reflection coefficient R  [-1, 1].
The accuracy of the scheme is assessed using the initial condition

u0(x) = sin(2x)6, u 0(x) = 0,

(57a) (57b)

which for times t  [0, 1] has the analytic solution

u(x, t)

=

u¯0(x

-

t)

+

u¯0(x

+

t)

+

R (u¯0(2

-

x

-

t)

+

u¯0(-x

+

t)) ,

2

u¯0(x) = u0(x), 0  x  1,

(58)

0,

otherwise.

The L2 convergence can be seen in Figure 2 at time t = 0.9 using R = 0.99, 0, and -0.99. The spatial resolutions used in the test are N = 17 × 2r with r = 0, 1, 2, 3, 4, 5 and time integration is performed using matrix exponentiation. As can be seen, the characteristic method converges at a rate similar to the noncharacteristic method for this test problem. For the characteristic method with 2p = 6 the overall error constant is higher, though this can be improved by increasing the penalty parameter (not shown) at the cost of increased stiffness.
Figure 1 shows the eigenvalue spectra for the same values of R used in Figure 2 with resolution N = 50. As discussed in the introduction, though the schemes have similar convergence properties the eigenvalue spectra are different. Importantly as

18

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

x2

x1
Fig. 3: Two-dimensional domain used for numerical results in Section 6.2. The thick green line is the interface between the two subdomains 1 and 2. The thin black lines show the finite difference block interfaces.

R  -1 the non-characteristic method has a single eigenvalue with a real part that tends to -. In this limit, the large magnitude eigenvalue prevents the use of, for instance, explicit Runge-Kutta time stepping; when R = -1 the boundary condition reduces to Dirichlet and the standard Dirichlet boundary treatment could be used. Though the characteristic method does have a worse time step restriction for R  [0, 1], the scheme never results in an eigenvalue that grows arbitrarily and even in the worse case, R = 1, has a spectrum that is appropriate for explicit Runge-Kutta methods.

6.2 Two Dimensional Nonlinear Interface: Stiffness, Accuracy, and Robustness

We now consider the two-dimensional square domain  = [-2, 2]2. Inside of  we define the unit circle I = {(x1, x2)|x21 + x22 = 1} to partition the domain into a closed unit disk 1 = {(x1, x2)|x21 + x22  1} and the remainder 2 = cl( \ 1).
The interface I is governed by the nonlinear condition

 ± =  arcsinh V ± + g±,

(59)

where  > 0 and g± is a time and space dependent forcing function; around V = 0 with g± = 0 the linearization of the interface condition is  ± = V . The right and left boundaries of  are taken to be Dirichlet, the top and bottom boundaries Neumann; the Dirichlet and Neumann boundary conditions are enforced using the standard approach described in the Appendix D. As shown in Figure 3, the domain is decomposed into 56 finite difference blocks and the locked, i.e., artificial computational interface conditions, are enforced using the characteristic approach described in Section 5.2. Given the unstructured connectivity of the blocks it is necessary to use the same (N + 1) × (N + 1) grid of points in each block; we refer to N as the block size. For all the test problems in this section, time stepping is performed using the low-storage, fourth order Runge-Kutta scheme of Carpenter and Kennedy (1994, (5,4) 2N -Storage RK scheme, solution 3).
In order to assess the stiffness and accuracy of the scheme in two spatial dimensions we use the method of manufactured solutions (MMS) (Roache 1998). In

Non-stiff SBP in Second-Order Form

19


1 1/2 4 1/2 16 1/2 64 1/2 128 1/2

characteristic

u~ H with 
1.39 × 10-9 1.39 × 10-9 1.39 × 10-9 1.39 × 10-9 1.39 × 10-9

(with 2)
(1.64 × 1010) (1.64 × 1010) (1.64 × 1010) (1.64 × 1010) (1.64 × 1010)


1/2 1/2 1/23 1/25 1/26

non-characteristic

u~ H with 
1.23 × 10-9 1.24 × 10-9 1.28 × 10-9 1.34 × 10-9 1.36 × 10-9

(with 2)
(1.64 × 1010) (1.64 × 1010) (1.90 × 10-2) (2.51 × 10-2) (2.62 × 10-2)

Table 1: Stable Courant  for the characteristic and non-characteristic methods
for increasing values of  using the SBP operator with interior accuracy 2p = 6. Shown also are the L2 errors for the stable Courant number  and the unstable
Courant number 2.

particular, we assume an analytic solution and compute the necessary boundary, interface, and volume data. The manufactured solution is taken to be

u(x1, x2, t) =

sin(t)

e 1+e

2 - e-r2

r sin(),

sin(t) (r - 1)2 cos() + (r - 1) sin() ,

(x1, x2)  1 (60) (x1, x2)  2,

where r2 = x21 + x22 and  = atan2(x2, x1). The boundary, interface, and forcing data are found by using assumed solution (60) in governing equations (3). In
order to avoid order reduction with time dependent data, we found it necessary
to define the Dirichlet boundary data by integrating gD using the Runge-Kutta method. Solution (60) satisfies force balance along I , i.e., continuity of traction  , and the interface data g± is used to enforce the assumed solution. In the MMS test the material properties are  = 1 and Cij = ij, with ij being the kroneckor delta; after the mesh warping the effective material parameters C^ij are spatially varying.
To compare the stiffness of the standard and characteristic nonlinear interface
treatment we vary the nonlinear interface parameter  and decrease the time step
size until the simulation is stable for a fixed block size N = 48. For a non-stiff
method, the time step size should be on the order of the effective grid spacing for
all  > 0. In particular, we define the time step size to be

t = h¯,

(61)

where  is the Courant number and a non-stiff scheme should have   1; since
the material properties are taken to be unity the wave speed in this problem is 1. The effective grid spacing h¯ is defined as

h¯ = min(h¯1, h¯2),

h¯ r

=

1 N

^r x1

2
+

^r x2

2
.

(62)

Table 1 gives the Courant number  required for stability of the two methods with various values of  using SBP interior order 2p = 6. Here the value of  was repeatedly halved until the error in the simulation at time t = 0.1 no longer decreased dramatically. As can be seen the characteristic method requires a similar time step for all values of the parameter  whereas the non-characteristic method requires a reduced time step as  increases. Though not shown, results with SBP

20

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

~u H

10-4

2

10-6

10-8

4

10-10

5

h¯0/8 h¯0/4 h¯0/2 h¯0

h¯

2p = 2 2p = 4 2p = 6

Fig. 4: Convergence results for mms solution (60) using SBP interior orders 2p = 2, 4, 6 with the characteristic nonlinear interface treartment. The value of h¯0 
0.019 corresponds to block size N = 17.

0.5 0.6 0.7 0.8 0.9 1.0
(a) material parameter c11

-0.25 -0.125
0.0 0.125 0.25
(b) material parameter c12

0.5 0.6 0.7 0.8 0.9 1.0
(c) material parameter c22

-0.05 -0.025
0.0 0.025 0.05
(d) displacement u at t = 1

(e) displacement u at t = 2

(f) displacement u at t = 3

Fig. 5: Variable material parameters Cij and displacement field u snap shots with block size N = 136 with the mesh show in Figure 3. The colormap for the displacement field is saturated to show features at later times and the green curve indicates the location of the nonlinear interface.

interior orders 2p = 2 and 2p = 4 are similar; for 2p = 2 the characteristic method can use a Courant of  = 1 for all values of  as can the non-characteristic method with  = 1.
To investigate the convergence of the two-dimensional, characteristic method we now run the same MMS solution (60) to time tf = 1 using  = 128 with different levels of refinement and a fixed Courant number  = 1/2. Figure 4 shows the convergence of the scheme using mesh levels N = 17 × 2r where r = 0, 1, 2, 3. As can be seen the convergence order is similar to the one-dimensional case.

Non-stiff SBP in Second-Order Form

21

As a final test, we explore the self-convergence and energy dissipation properties of the characteristic method with variable material properties and no body or boundary data. The same two-dimensional spatial domain is used, but now the material parameters are taken to be

 = 1,

C11

=

cos()2

+

1 2

sin()2,

1 C12 = - 2 cos() sin(),

C22

=

sin()2

+

1 2

cos()2,

(63a) (63b) (63c) (63d)

where

the

angle



=

 4

(2 -

x1) (2 - x2);

colormaps

of

the

material

parameters

are

shown in Figure 5. The Courant number  = 1/2 is used for all the simulations

and the material parameters lead to a maximum wave speed of 1, i.e., maximum

eigenvalue of the matrix defined by Cij/. The initial displacement is taken to be

the product of off-center Gaussians

u0 = exp

- (x1 - µ1)2 - (x2 - µ2)2

21

22

,

(64)

where µ1 = 0.1, µ2 = 0.2, 1 = 0.0025, and 2 = 0.005, and the initial velocity is u 0 = 0. A nonlinear parameter  = 1 is used in order to highlight the effect of the nonlinear interface condition; larger values of  lead to a more continuous solution across the interface since the sliding velocity V will be lower. Snapshots of the displacement field at various times are shown in Figure 5 for the block size N = 136 = 17 × 8 and SBP interior order 2p = 6. As can be seen in the figure, there is a discontinuity in the displacement across the interface as well as reflected waves.
For the self-convergence study we run the simulation until time t = 3 using Nr = 17 × 2r with r = 1, 2, 3. The error is estimated by taking the difference between neighboring resolutions, and the rate is estimated by

rate = log2( 1 H1 ) - log2( 2 H2 ),

(65)

where r is the difference between the solutions using Nr and Nr+1 and Hr indicates that the norm is taken with respect to the metrics defined by Nr. With this, we get an estimate convergence rate for this problem of 4.4 using the SBP operators with interior accuracy 2p = 6.
Using same material properties and initial condition, Figure 6 show the dissipated energy when I is taken to be a locked interface and a nonlinear interface with  = 1; energy is measured using the discrete energy norm (37). In both cases the energy decreases in time as the theory predicts. In the case of the locked interface the dissipation is purely numerical, and as the results show the dissipation decreases as the resolution increases. In the case of the nonlinear interface the amount of energy dissipated is larger since the continuous formulation supports energy dissipation on interface I .

22

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

E (0)-E (t) E (0)
E (0)-E (t) E (0)

10-7

10-10

N = 34 N = 68

N = 136 10-13 0 0.5 1 1.5 2 2.5 3

time t

(a) Locked interface

0.15

0.1

N = 34

0.05

N = 68

N = 136 0
0 0.5 1 1.5 2 2.5 3

time t

(b) Nonlinear interface

Fig. 6: Normalized dissipated energy for a locked and nonlinear interface I with energy is computed discretely using (37) and positive values indicating dissipation.

7 Concluding Remarks
We have developed a characteristic based method for handling boundary and interface conditions with SBP finite difference methods for the second order wave equation. The key idea of the method is the introduction of an additional unknown on the block boundaries which evolves in time and acts as local Dirichlet data for the block. The rate of change of the boundary unknown is defined in an upwind fashion that modifies the incoming characteristic variable, which is similar to the technique previously used to remove stiffness for the wave equation in first order form with nonlinear interfaces (Kozdon et al. 2012).
The main benefit of the scheme is that, when compared with the standard approach (Duru et al. 2019; Virta and Mattsson 2014), the scheme is non-stiff for all characteristic boundary conditions and a class of nonlinear interface conditions that can be written in characteristic form. One benefit of this approach is that it enables the use of a wider class of time stepping methods for earthquake rupture problems with nonlinear interfaces.
The energy method was used to show that the proposed scheme was stable. Numerical experiments showed that the proposed scheme was non-stiff, confirmed the stability results, and also demonstrated the accuracy of the scheme.

A Definition of Two-Dimensional SBP Operators

As an example of how to construct multidimensional SBP operators, we consider the two

dimensional SBP finite difference operators. We describe the operators on the reference block B^ = [0, 1] × [0, 1], where faces 1 and 2 are the right and left faces with faces 3 and 4 being the

top and bottom faces, respectively. For simplicity we let the domain B^ be discretized with an

(N + 1) × (N + 1) grid points with the grid nodes located at {}kl = (kh, lh) for 0  k, l  N with h = 1/N . The projection of u onto the grid is denoted u~, where {u~}kl  u(kh, lh) and is stored as a vector with with 1 being the fastest index; see (28). With this, the volume norm

matrix can be written as

H~ = H  H.

(66)

We define the face restriction operators as

L¯1 = I  eT0 ,

L¯2 = I  eTN ,

L¯3 = eT0  I,

L¯4 = eT0  I,

(67)

Non-stiff SBP in Second-Order Form

23

where the I is the (N + 1) × (N + 1) identity matrix. More generally the restriction to a single grid line in the 1 and 2 directions, respectively, are

L¯l: = eTl  I,

L¯:l = I  eTl .

(68)

In order to construct A~i(iC), no summation over i, we must construct individual one-dimensional second derivative matrices for each grid line with varying coefficients C and place them in the

correct block; expanding a single second derivative matrix with the tensor product and the identity matrix only works in the constant coefficient case. To do this it is useful to define C~

as the projection of C onto the grid, and denote the coefficients along the individual grid lines

as

C:l = diag(C0l, . . . , CNl),

Ck: = diag(Ck0, . . . , CkN ).

(69)

The second derivative operators can then be defined as the sum of the operators along each grid line

A~1(C1 ) = (H  I)

N

L¯:l

T

C :l

A11

L¯:l

,

l=0

A~2(C2 ) = (I  H)

N

L¯k:

T

Ck:

A11

L¯k:

,

k=0

and the mixed derivative operators through a tensor product

(70a) (70b)

A~(1C2 ) = (I  QT )C~(Q  I), A~(2C1 ) = (QT  I)C~(I  Q).

(70c) (70d)

The boundary derivatives parallel to a face are given with the one-dimensional first derivative operators D1,

B¯12 = eT0 D1  I, B¯22 = eTN D1  I, B~13 = I  eT0 D1, B~14 = I  eTN D1,

(71a) (71b) (71c) (71d)

and those perpendicular to the boundary using the boundary first derivative operators b0 and bN from the second derivative operator:

B¯11 = I  bT0 , B¯21 = I  bTN , B~23 = bT0  I, B~24 = bTN  I.

(72a) (72b) (72c) (72d)

B Proof of Lemma 1

Taking the time derivative of energy (9) and substituting in the governing equation (3a) gives

E = (u iCij j u + (iu) Cij (j u )) =

u  +

u - - + u + + ,





I

(73)

where the last equality follows from the divergence theorem and applying the definition of traction (4).

24

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

SBP interior order 2p

¯

¯

mb

2

1/2

1.0

2

4

17/48

0.5776 4

6

13649/43200 0.3697 7

Table 2: Borrowing parameters and SBP norm H matrix corner value for used operators (Almquist and Dunham 2020, Table 1).

Starting with the boundary integral, we apply Dirichlet (3b) and characteristic (3c') boundary conditions and simplify to get

u  =

gD +



D

C

R2 - 1 w2 + (2Rw + gC ) gC . 4Z

(74)

With zero boundary data, gD = gC = 0, the boundary integral becomes

R2 - 1 w2

u  =

 0,



C

4Z

(75)

where the inequality follows from the restriction that -1  R  1. Thus boundary conditions (3b) and (3c') leads to a non-increasing energy.
Now considering the interface integral using that  + = - - and applying interface condition (3d') gives

u - - + u + + =

u - - u +  - = - V -F (V -)  0.

I

I

I

(76)

Thus, the interface leads to a non-increasing energy since V F (V )  0 and the lemma follows.

C Proof of Lemma 2

To show that energy (38) is positive we need the following definition from Mattsson (2012,

Definition 2.4):

A~(ijc) = D~iT C~H~ D~j + R~i(jc).

(77)

The remainder matrix R~i(jc) is symmetric positive semidefinite if the coefficient c is always positive; the remainder matrix is zero when i = j. The remainder matrix can be further
decomposed using a result from (Almquist and Dunham 2020, Lemma 1) as

R~i(ic) = S~i(ic) + 2i f ¯fi T Hf Cf,min¯fi
f =2i-1

(no sum over i).

(78)

Here

the

matrix

S~i(ic)

(no

sum

over

i)

is

a

positive

semidefinite

and

the

matrix

¯fi

=

B¯

f i

- D¯ fi

is the difference between the boundary derivative matrix from D~ii (no summation over i) and

the first derivative matrix D~i at the boundary. Each element of the diagonal matrix Cf,min

is the minimum value of c in the mb points orthogonal to the boundary where mb depends on

the order of accuracy of the SBP operator. The positive constant f = hf¯ where hf is the grid spacing orthogonal to the face and ¯ is a constant which depends on the SBP operator.

The (mb, ¯) values used for the operators in this paper are given in Table 2; see Almquist and

Dunham (2020, Table 1).

Let k be a multi-index denoting a given grid point so that {v}k denotes the value of the

grid function v at grid point k. Similarly, H~ kk denotes the value of a diagonal matrix H~

Non-stiff SBP in Second-Order Form

25

associated with k and

(N,...,N )
k=(0,...,0)

be

the

sum

over

all

grid

points.

With

this,

we

can

then

show the following inequality

(N,...,N )

v~iT C~ij H~ v~j =

{v~i}k

k=(0,...,0)

C~ij

kk

H~

kk{v~j }k

1 d (N,...,N )

=

d

{v~i}k m=1 k=(0,...,0)

C~ij

kk

H~

kk{v~j }k

1d

2m



d

{v~i}k m=1 f =2m-1 kf k

C~ij

kk

H~

kkk{v~j }k

1 =
d

2d
f

L¯f v~if

T

C

f ij

H

f

L¯f

v~jf

.

f =1

(79)

Here f is the value of the {H}00 where H is the norm matrix orthogonal to the face. This

can also be written f k is the set of grid

as f = hf¯ points along

where face f .

¯ depends on We have also

the SBP operator; see Table used positive definiteness of

2. The set the matrix

defined by Cij . This inequality gives a lower bound for the volume solution in terms of fields on the face; the factor 1/d is needed to account for the multiple counting of points on the faces

corners (and edges for d = 3) of the blocks.

We now turn to considering the discrete block energy (38). The first term satisfies

1 u~ T H~ ~u~  0,

(80)

2

because it is in quadratic form and H~ and ~ are diagonal, positive matrices. The remaining terms will be shown to combine in a manner that is also positive semidefinite.
Using relations (77), (78), and (79) we have that

u~T A~(ijCij )u~ = u~T D~iT C~ij H~ D~j u~



d

2k

+

u~T S~k(Ckkk)u~ +

f

k=1

f =2k-1

¯fk u~



T

H

f

C

f,min kk

¯fk

u~



2d f d

D¯ fi u~

T

C

f ij

H

f

D¯ fj

u~

f =1





d
+

2k

f

¯fk u~

T

H

f

C

f,min kk

¯fk

u~

.

k=1 f =2k-1

(81)

We now considering the face term of the discrete block energy (38). Defining uf = uf - uf and using the definition of ^f and T^f in (40) gives

^f T Xf Hf ^f

- T^ T Xf Hf T^

= 2 T^ T Hf uf +

uf

T

Xf

-1
H

f

uf

.

(82)

It is useful to note that T^ can be rewritten using ¯fk as

T^f

=

N^

f i

C

f ij

B¯fj

u~

=

N^

f i

C

f ij

D¯ fj

u~

+

N^

f k

C

f kk

¯fk

u~,

k=

f ;
2

(83)

26

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

this follow because only when f  (2j, 2j - 1) is B¯fj = D¯ fj . Using this then gives

^f T Xf Hf ^f - T^ T Xf Hf T^

=2

D¯ fj u~

T

Hf

N^

f i

C

f ij

uf

+

uf

T

N^

f i

C

f ij

N^

f j



f

H

f

uf

+2

¯fk u~

T

H

f

N^

f k

C

f kk

uf

,

k=

f .
2

(84)

Here we have also used the definition of Xf in (39). To consider the remaining terms of block energy (38), we use (81) and (84) to write

2d
u~T A~(ijCij )u~ +
f =1

^f T Xf Hf ^f - T^ T Xf Hf T^

2d

f =1

f d

D¯ fi u~

T

C

f ij

Hf

D¯ fj

u~

+

2

D¯ fj u~

T

C

f ij

H

f

N^

f i

^uf

d

2k

+

f

¯fk u~

T Cfk,kminHf ¯fk u~ + 2

¯fk u~

T

C

f kk

H

f

N^

f k

^uf

k=1 f =2k-1

2d
+

^uf

T

N^

f i

C

f ij



f

H

f

N^

f j

^uf

.

f =1

(85)

If we choose

f 

d I+

1 Pf,

f

f

Pf

=

C

f kk

C

f,min kk

-1
, k=

f ,
2

(86a) (86b)

then we have that

2d

^uf

T

N^

f i

C fij



f

H

f

N^

f j

^uf

f =1

2d d



f

^uf

T

N^

f i

C

f ij

H

f

N^

f j

^uf

+

2d

1 f

^uf

T

N^

f i

C

f ij

P

f

H

f

N^

f j

^uf

f =1

f =1

2d d

=

f

^uf

T

N^

f i

C

f ij

H

f

N^

f j

^uf

+

d

2k

1 f

^uf

T

C

f kk

P

f

H

f

^uf

f =1

k=1 f =2k-1

2d d

=

f

^uf

T

N^

f i

C

f ij

H

f

N^

f j

^uf

+

d

2k

1 f

P f ^uf

T

C

f,min kk

H

f

P

f

^uf

,

f =1

k=1 f =2k-1

(87)

where

we

have

used

that

N^

f i

C

f ij

N^

f j

=

C

f kk

with

k

=

f 2

(no summation over k). Though a

similar transformation could be used on the first summation it is not needed and complicates

Non-stiff SBP in Second-Order Form

27

the analysis that follows. Returning to (85) then gives with (87)

2d
u~T A~i(jCij )u~ +
f =1

^f T Xf Hf ^f - T^ T Xf Hf T^

2d


f d

D¯ fi u~

T

C

f ij

H

f

D¯ fj

u~

+

2

D¯ fj u~

T

C fij

H

f

N^

f i

^uf

f =1

2d d +
f

^uf

T

N^

f i

C

f ij

H

f

N^

f j

^uf

f =1

d

2k

+

f

¯fk u~

T

C

f,min kk

H

f

¯fk

u~

+

2

¯fk u~

T

C

f kk

H

f

N^

f k

^uf

k=1 f =2k-1

d

2k

1

+

f

k=1 f =2k-1

P f ^uf

T

C

f,min kk

H

f

P

f

^uf

2d f =
d

D¯ fi u~

+

d f

N^

f i

^uf

T

C

f ij

H

f

D¯ fj u~

+

d f

N^

f j

^uf

f =1

d
+

2k

f

¯fk u~

+

1 f

N^

f k

P

f

^uf

T
Cfk,kminH f

¯fk u~

+

1 f

N^

f k

P

f

^uf

,

k=1 f =2k-1

(88)

where

we

have

used

that

C

f kk

=

N^

f k

C

f kk

N^

t k

(no

summation

over

k)

and

Cfk,kminP f

=

C

f kk

(no summation over k). Since this expression is in quadratic form, it is non-negative and the

when combine with (80) shows that the block energy (38) is non-negative which completes the

proof.

D Standard Dirichlet, Neumann, Characteristic, Locked, and Nonlinear Interface Treatment
The standard approach for SBP-SAT for Dirichlet (3b), and characteristic boundaries (3c) as well as locked and nonlinear interfaces from Virta and Mattsson (2014) and Duru et al. (2019) are presented in the notation of this paper; Neumann boundary treatment is the same as the characteristic boundary treat with R = 1.

D.1 Dirichlet Boundary Conditions

When block face f is on a Dirichlet boundary (15b) then the numerical fluxes are chosen to be

uf = gD, ^f = ^f ;

(89a) (89b)

Using these numerical fluxes, the face energy rate of change (43) is

Ef = ^f T Hf u f + ^f T Hf gDf - u f = ^f T Hf gDf ,

(90)

which with gD = 0 gives Ef = 0 and does not lead to energy growth.

28

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

D.2 Characteristic (and Neumann) Boundary Conditions

In order to define the standard treatment of characteristic boundary conditions (3c), it is useful

to solve (3c) for  :

 = -u + gC ,

(91)

with  = -Z(1 - R)/(R + 1)  0 and  = 1/(R + 1). We note again that the Neumann boundary condition is attained when R = 1 in which case  = 0 and  = 1. With this, if block face f is on a characteristic boundary then the numerical fluxes are chosen to be

uf = uf ,

^f

=

S

f J

-f u f + f gC

(92a) (92b)

where the parameters  and  are diagonal matrices of  and  evaluated at each point on face f . Using these numerical fluxes in (43) give

Ef = - u f T SfJ Hf u f + gCf T SfJ Hf u f .

(93)

With gC = 0 we then have that Ef  0 and there is no energy growth due to the characteristic boundary treatment; equality is obtained in the Neumann case.

D.3 Locked Interface

For locked interfaces (e.g., interfaces between purely computational blocks in the domains that have been introduced to mesh to either a material interface and/or needed in the mesh generation) continuity of displacement and traction need to be enforced. That is, across the interface it is required that

u- = u+, n-i Ci-j j u- = -n+i Ci+j j u+.

(94)

Here the superscript ± denotes the value on either side of the interface with the unit normal n± is taken to be outward to each side of the interface, i.e., n- = -n+. The standard approach
to enforcing this is to choose the numerical flux to be the average of the values on the two
sides of the interface,

uf - = 1 uf - + uf + , 2
^f- = 1 ^f- - ^f+ ; 2

(95)

the minus sign in ^f- is due to the unit normals being equal and opposite. Here the two blocks connected across the interface are B± through faces f ±.
The face energy rate of change (43) for locked interfaces is then

Ef± = 1 ^f± - ^f T Hf u f± + 1 ^f± T Hf u f - u f±

2

2

1 =-

^f 

T Hf u f± + 1

^f ±

T Hf u f .

2

2

Adding the two sides of the interface together gives

(96)

Ef = Ef+ + Ef- = 0,

(97)

and energy stability results.

Non-stiff SBP in Second-Order Form

29

D.4 Nonlinear Interface Condition

The approach Duru et al. (2019) for nonlinear interfaces is to define the sliding velocity V ±f directly from the particle velocities on the grid and then the traction  f is defined directly
from the friction law so the numerical fluxes are

uf ± = uf ± ,

^f ±

=

S

f J

F

V f±

, V f± =

u f - u f±

.

(98)

The face energy rate of change (43) for a nonlinear interface is then

Ef± = F V f±

T

S

f J

H

f

u f

±

.

Adding the two sides of the interface together gives

Ef = Ef+ + Ef- = F V f+

T

S

f J

H

f

u f

+

+

F

V f-

= F V f+

T

S

f J

H

f

u f

+

-

F

V f+

= - F V f + T SfJ Hf V f +

 0,

T

S

f J

H

f

u f

-

T

S

f J

H

f

u f

-

(99) (100)

where we have used that V f- = -V f+ and the fact that V F (V )  0.

E Friction Law Root Finding Problem

In general, evaluating Q± for a nonlinear friction law  ± = F V ± requires solving a nonlinear
root finding problem. In particular, using the characteristic variables w± a root finding problem for V ± is solved after which Q± can be determined.
Recall that force balance,  - = - +, and the fact that V - = -V + implies that  - = -F V + . Using this we can compute the Z± weighted-average

Z-+ - Z+- =F

V+

.

Z+ + Z-

(101)

Expressing  ± in terms of Q± and w±, see (8b), then gives

Z-Q+ - Z-w+ - Z+Q- + Z+w- =F

V+

.

2(Z+ + Z-)

(102)

The sliding velocity V + can be written in terms of the characteristic variables using (8a):

V+

= u - - u + =

Q- + w-

-

Q+ + w+

=

Z+Q- + Z+w- - Z-Q+ - Z-w+ .

(103)

2Z -

2Z +

2Z - Z +

Using this, we can rewrite (102) as

Z+Z- V + + Z+w- - Z-w+ = F V + .

(Z+ + Z-)

(Z+ + Z-)

(104)

This expression can be more compactly written by defining

l+

=

Z+w- - Z-w+ ,
(Z+ + Z-)

(105)

30

Jeremy E. Kozdon, Brittany A. Erickson, Tobias Harvey

which depends only on the characteristic variables propagating into the interface and is the traction that would result if the interface were a locked interface; seen by using (18) in (8b). We can now write the final form of the root finding problem as

V + + l+ = F V + ,

(106)

where  = Z+Z-/(Z+ + Z-) is known as the radiation damping coefficient. Once this nonlinear system is solved for V + all other quantities can be determined using (8). When numerically
solving (106) it is useful to realize that sgn V + = sgn l+ and that the root can be brack-

eted: V +  0, F -1 l+ .

References
Almquist, M., Dunham, E.M.: Non-stiff boundary and interface penalties for narrow-stencil finite difference approximations of the laplacian on curvilinear multiblock grids. Journal of Computational Physics 408, 109,294 (2020). DOI 10.1016/j.jcp.2020.109294
Bezanson, J., Edelman, A., Karpinski, S., Shah, V.B.: Julia: A fresh approach to numerical computing. SIAM review 59(1), 65­98 (2017). DOI 10.1137/141000671
Carpenter, M.H., Gottlieb, D., Abarbanel, S.: Time-stable boundary conditions for finitedifference schemes solving hyperbolic systems: Methodology and application to high-order compact schemes. Journal of Computational Physics 111(2), 220­236 (1994). DOI 10. 1006/jcph.1994.1057
Carpenter, M.H., Kennedy, C.A.: Fourth-order 2N-storage Runge-Kutta schemes. Tech. Rep. NASA TM-109112, National Aeronautics and Space Administration, Langley Research Center, Hampton, VA (1994)
Carpenter, M.H., Nordstr¨om, J., Gottlieb, D.: A stable and conservative interface treatment of arbitrary spatial accuracy. Journal of Computational Physics 148(2), 341­365 (1999). DOI 10.1006/jcph.1998.6114
Duru, K., Allison, K.L., Rivet, M., Dunham, E.M.: Dynamic rupture and earthquake sequence simulations using the wave equation in second-order form. Geophysical Journal International 219(2), 796­815 (2019). DOI 10.1093/gji/ggz319
Erickson, B.A., Jiang, J., Barall, M., Lapusta, N., Dunham, E.M., Harris, R., Abrahams, L.S., Allison, K.L., Ampuero, J.P., Barbot, S., Cattania, C., Elbanna, A., Fialko, Y., Idini, B., Kozdon, J.E., Lambert, V., Liu, Y., Luo, Y., Ma, X., Mckay, M.B., Segall, P., Shi, P., van den Ende, M., Wei, M.: The community code verification exercise for simulating sequences of earthquakes and aseismic slip (seas). Seismological Research Letters 91, 874­890 (2020). DOI 10.1785/0220190248
Hicken, J.E., Zingg, D.W.: Summation-by-parts operators and high-order quadrature. Journal of Computational and Applied Mathematics 237(1), 111­125 (2013). DOI 10.1016/j.cam. 2012.07.015
Kopriva, D.A.: Metric identities and the discontinuous spectral element method on curvilinear meshes. Journal of Scientific Computing 26(3), 301­327 (2006). DOI 10.1007/ s10915-005-9070-8
Kozdon, J.E., Dunham, E.M., Nordstro¨m, J.: Interaction of waves with frictional interfaces using summation-by-parts difference operators: Weak enforcement of nonlinear boundary conditions. Journal of Scientific Computing 50(2), 341­367 (2012). DOI 10.1007/s10915-011-9485-3
Kreiss, H., Oliger, J.: Comparison of accurate methods for the integration of hyperbolic equations. Tellus 24(3), 199­215 (1972). DOI 10.1111/j.2153-3490.1972.tb01547.x
Kreiss, H., Scherer, G.: Finite element and finite difference methods for hyperbolic partial differential equations. In: Mathematical aspects of finite elements in partial differential equations; Proceedings of the Symposium, pp. 195­212. Madison, WI (1974). DOI 10. 1016/b978-0-12-208350-1.50012-1
Kreiss, H., Scherer, G.: On the existence of energy estimates for difference approximations for hyperbolic systems. Tech. rep., Department of Scientific Computing, Uppsala University (1977)
Mattsson, K.: Summation by parts operators for finite difference approximations of secondderivatives with variable coefficients. Journal of Scientific Computing 51(3), 650­682 (2012). DOI 10.1007/s10915-011-9525-z

Non-stiff SBP in Second-Order Form

31

Mattsson, K., Ham, F., Iaccarino, G.: Stable and accurate wave-propagation in discontinuous media. Journal of Computational Physics 227(19), 8753­8767 (2008). DOI 10.1016/j.jcp. 2008.06.023
Mattsson, K., Ham, F., Iaccarino, G.: Stable boundary treatment for the wave equation on second-order form. Journal of Scientific Computing 41(3), 366­383 (2009). DOI 10.1007/ s10915-009-9305-1
Mattsson, K., Nordstro¨m, J.: Summation by parts operators for finite difference approximations of second derivatives. Journal of Computational Physics 199(2), 503­540 (2004). DOI 10.1016/j.jcp.2004.03.001
Mattsson, K., Parisi, F.: Stable and accurate second-order formulation of the shifted wave equation. Communications in Computational Physics 7(1), 103 (2010). DOI 10.4208/cicp. 2009.08.135
Nordstr¨om, J.: A roadmap to well posed and stable problems in computational physics. Journal of Scientific Computing 71(1), 365­385 (2017). DOI 10.1007/s10915-016-0303-9
Olsson, P.: Summation by parts, projections, and stability. I. Mathematics of Computation 64(211), 1035­1065 (1995a). DOI 10.2307/2153482
Olsson, P.: Summation by parts, projections, and stability. II. Mathematics of Computation 64(212), 1473­1493 (1995b). DOI 10.2307/2153366
Rice, J.R.: Constitutive relations for fault slip and earthquake instabilities. In: Instabilities in continuous media, pp. 443­475 (1983). DOI 10.1115/1.3167042
Rice, J.R., Lapusta, N., Ranjith, K.: Rate and state dependent friction and the stability of sliding between elastically deformable solids. J. Mech. Phys. Solids 49(9), 1865­1898 (2001). DOI 10.1016/S0022-5096(01)00042-4
Roache, P.: Verification and validation in computational science and engineering. 1 edn. Hermosa Publishers, Albuquerque, NM (1998)
Scholz, C.H.: Earthquakes and friction laws. Nature 391(6662), 37­42 (1998). DOI 10.1038/ 34097
Strand, B.: Summation by parts for finite difference approximations for d/dx. Journal of Computational Physics 110(1), 47­67 (1994a). DOI 10.1006/jcph.1994.1005
Strand, B.: Summation by parts for finite difference approximations for d/dx. Journal of Computational Physics 110(1), 47­67 (1994b). DOI 10.1006/jcph.1994.1005
Virta, K., Mattsson, K.: Acoustic wave propagation in complicated geometries and heterogeneous media. Journal of Scientific Computing 61(1), 90­118 (2014). DOI 10.1007/ s10915-014-9817-1

