arXiv:2106.01139v1 [cs.AR] 2 Jun 2021

How Flexible is Your Computing System?
SHIHUA HUANG, Prodrive Technologies LUC WAEIJEN, GrAI Matter Labs HENK CORPORAAL, Eindhoven University of Technology
In literature computer architectures are frequently claimed to be highly flexible, typically implying there exist trade-offs between flexibility and performance or energy efficiency. Processor flexibility, however, is not very sharply defined, and as such these claims can not be validated, nor can such hypothetical relations be fully understood and exploited in the design of computing systems. This paper is an attempt to introduce scientific rigour to the notion of flexibility in computing systems. A survey is conducted to compile an overview of references to flexibility in literature both in the computer architecture domain as well as related fields. A classification is introduced to categorize different views on flexibility, which ultimately form the foundation for a qualitative definition of flexibility. Departing from the qualitative definition of flexibility, a generic quantifiable metric is proposed, enabling valid quantitative comparison of the flexibility of various architectures. To validate the proposed method, and evaluate the relation between the proposed metric and the general notion of flexibility, the flexibility metric is measured for 25 computing systems, including CPUs, GPUs, DSPs, and FPGAs, and 40 ASIPs taken from literature. The obtained results provide insights into some of the speculative trade-offs between flexibility and properties such as energy efficiency and area efficiency. Overall the proposed quantitative flexibility metric shows to be commensurate with some generally accepted qualitative notions of flexibility collected in the survey, although some surprising discrepancies can also be observed. The proposed metric and the obtained results are placed into context of the state of the art on compute flexibility, and extensive reflection provides not only a complete overview of the field, but also discusses possible alternative approaches and open issues. Note that this work does not aim to provide a final answer to the definition of flexibility, but rather provides a framework to initiate a broader discussion in the computer architecture society on defining, understanding, and ultimately taking advantage of flexibility.
CCS Concepts: · General and reference  Metrics; Surveys and overviews; · Theory of computation  Abstract machines.
Additional Key Words and Phrases: flexibility, versatility, metric
ACM Reference Format: Shihua Huang, Luc Waeijen, and Henk Corporaal. 2021. How Flexible is Your Computing System?. 1, 1 (June 2021), 4 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn
1 INTRODUCTION
Arguably one of the most famous books in the field is "Computer Architecture -- A Quantitative approach" by John L. Hennessy and David A. Patterson [4]. The title itself is concise and apt, so it is interesting the authors opted to add this particular subtitle: a quantitative approach. It implies the belief that quantifying design choices ultimately leads to better computer architectures, a message that certainly could be directed towards those who make claims about flexible architectures without means of quantifying these claims, or even without as much as a commonly accepted qualitative definition of flexibility. With Moore's law seemingly coming to an end, new advancements in computing will have to be made on the architectural side. To advance the state of the art, fundamental
These authors contributed equally
Authors' addresses: Shihua Huang, shihuahuang94@gmail.com, Prodrive Technologies; Luc Waeijen, GrAI Matter Labs, lwaeijen@graimatterlabs.ai; Henk Corporaal, Eindhoven University of Technology, h.corporaal@tue.nl.
2021. XXXX-XXXX/2021/6-ART $15.00 https://doi.org/10.1145/nnnnnnn.nnnnnnn
, Vol. 1, No. 1, Article . Publication date: June 2021.

2

Huang, Waeijen, and Corporaal

understanding of various trade-offs in computer design is vital. The way forward therefore, is a quantitative one.
Many key system properties such as performance, power dissipation, and energy efficiency are all well defined in a quantitative manner. With these metrics in place, quantitative, objective comparisons can be conducted between different machines. For flexibility however, such a quantitative (and even qualitative!) definition is lacking, despite it's increasing importance in system design. In product research and development, computing platforms are required to sufficiently support new or updated algorithms, as algorithms are changing at a striking speed. Exemplary are the current developments in artificial intelligence, which result in new compute-intensive algorithms at a high cadence. Such rapidly developing markets require systems that can deal with changing applications, which is the property flexibility typically seems to refer to. However, in absence of a proper definition, it is impossible to make solid statements, and compare designs on flexibility.
Despite the lack of a formal definition of flexibility, there appear to be some commonly accepted notions surrounding flexibility. In particular, flexibility seems mainly used to refer to the adaptability of processors to different applications. This leads to the common idea that a programmable processor which can be reused across applications is `flexible'. On the other hand, a processor with fixed logic such as an ASIC cannot adapt, exposing its inflexibility [10]. As can be seen in Figure 1 the authors of these figures appear to agree with this sentiment. However there are also some contradictions to this view on flexibility however. For example in Figure 1a, among programmable processors the field-programmable devices are claimed by the authors to be less flexible than software programmable processors due to their inadequate programmability [7]. Unfortunately the term "programmability" is also ill-defined here. Perhaps the best definition of programmability in existence is to check Turing completeness of a programmable device, but this would leave only two classes of programmability making it a measure with low practical value. Another perspective on flexibility refers to how well a processor supports different applications, in which case FPGAs could be seen as the most flexible, since any hardware, including DSPs, GPUs, and CPUs, can be instantiated on FPGAs. Apart from this debate on how to rank the flexibility of architecture classes, perhaps even more worrisome are the contradicting claims on relations between flexibility and other metrics. In Figure 1d Ahmed Osman El-Rayis equates flexibility to area, whereas Tobias Noll sees it as directly related to power dissipation in Figure 1a. While this is definitely not an exhaustive list of views on flexibility, it painfully exposes how the lack of a formal definition leads to a wild-west of claims and conflicting visions, none of which can be backed up with objective measurements.
Despite the greatly varying interpretations of flexibility, many seem to agree that there may be interesting relations and trade-offs between flexibility and other properties, such as performance and energy efficiency. As illustrated in Figure 1, processing platform alternatives have been evaluated and ranked in terms of flexibility, performance, power dissipation, and area [1, 6, 7, 9, 11]. A variety of architectures have been developed which claim to balance energy efficiency and flexibility. The development of domain-specific functional units and a transition to heterogeneous multicore systems are a testament to this notion [2, 3, 8]. These hypothetical relations suggest that understanding flexibility is beneficial when designing a system, enabling informed trade-offs.
To overcome the lack of understanding of flexibility, this work sets out to provide both a qualitative and quantitative definition of flexibility. It should be noted though that, with such a fragmented landscape of interpretations of flexibility, the authors are under no illusion that it is possible to unify the field and reach consensus without a wider discussion. Instead, this work is to be seen as a first attempt, which does not so much aspire to provide a definitive answer, as it hopes to be thought provoking and spark a discussion within the community.

, Vol. 1, No. 1, Article . Publication date: June 2021.

How Flexible is Your Computing System?

3

(a) Flexibility related to performance and power according to Tobias Noll [6, 7]. Note that according to this figure flexibility is directly related to power dissipation.

(b) Flexibility versus performance plot by Geoffrey Ndu [9].The ordering of the flexibility of architecture classes aligns quite well with the ordering given in Figure 1a, although curve is quite different.

(c) `Application Flexibility` versus `Performance Efficiency` by Markus Willems from Synopsys [11]. Unfortunately no further definition of both these metrics is provided in the accompanying text.

(d) An interesting graph by Ahmed Osman El-Rayis [1] which relates many metrics including flexibility.In contrast to Figure 1a flexibility is here claimed to be directly related to area.

Fig. 1. Collection of published figures with claims about the flexibility of architecture classes, and relations between flexibility and other metrics such as performance and power. Note that none of the axis in these figures are labelled with units.

To arrive at a quantitative measure for flexibility, a qualitative definition is established by exploring uses of the term flexibility in literature and then examining various options. Based on this qualitative definition, a quantitative measure is derived. In the translation of flexibility, from a qualitative term to a quantitative definition, there exist several degrees of freedom. The final choices made in this translation are motivated extensively. However, more importantly, the alternatives are discussed systematically in similar detail. The intention is that this systematic approach can provide an initial framework for a broader discussion in the community on how flexibility should be defined, such that eventually a standard accepted metric can be determined.
To validate the metric proposed in this work, in total 14 applications are benchmarked on 25 different commercial off the shelf (COTS) platforms. It is shown that results align with several common concepts of flexibility found in the literature. For example, GPUs deliver the highest performance in general for the used parallel benchmarks but sacrifice in terms of flexibility, compared to general purpose processors (GPPs) in Figure 1a. Furthermore the flexibility of 40 application
, Vol. 1, No. 1, Article . Publication date: June 2021.

4

Huang, Waeijen, and Corporaal

specific architectures from literature is determined, to evaluate the relation between specialisation and flexibility.
The main contributions of this work can be summarized as follows:
(1) Survey of flexibility in computing and other engineering fields; (2) A qualitative and quantitative definition of flexibility; (3) Definition of intrinsic workload to normalize performance, and accompanying open-source
tool [5] for automated extraction; (4) Evaluation of the proposed metric on 25 COTS platforms for 14 benchmarks, and 40 applica-
tion specific processors taken from literature; (5) In-depth Comparison with alternative definitions of flexibility/versatility; (6) Extensive discussion on the proposed metric, and various alternatives, placing it in context
of the current state of the art.
NOTE: This document is a partial preprint. Full text will be made available after pub-
lication elsewhere.
REFERENCES
[1] Ahmed Osman El-Rayis. 2014. Reconfigurable architectures for the next generation of mobile device telecommunications systems. Ph.D. Dissertation.
[2] Robert Fasthuber, Francky Catthoor, Praveen Raghavan, and Frederik Naessens. 2013. Energy-Efficient Communication Processors: Design and Implementation for Emerging Wireless Systems. Springer Publishing Company, Incorporated.
[3] Rehan Hameed. 2013. Balancing Efficiency and Flexibility In Specialized Computing. Ph.D. Dissertation. [4] John L. Hennessy and David A. Patterson. 2011. Computer Architecture, Fifth Edition: A Quantitative Approach (5th ed.).
Morgan Kaufmann Publishers Inc., San Francisco, CA, USA. [5] Shihua Huang and Luc Waeijen. 2021. Intrinsic WorkloadEstimator. https://github.com/lwaeijen/WorkloadEstimator. [6] Götz Kappen and Tobias Noll. 2006. Application specific instruction processor based implementation of a GNSS
receiver on an FPGA. 58­63. [7] Kingshuk Karuri and Rainer Leupers. 2014. Application Analysis Tools for ASIP Design: Application Profiling and
Instruction-set Customization. Springer Publishing Company, Incorporated. [8] R. Kumar, K. I. Farkas, N. P. Jouppi, P. Ranganathan, and D. M. Tullsen. 2003. Single-ISA heterogeneous multi-
core architectures: the potential for processor power reduction. In Proceedings. 36th Annual IEEE/ACM International Symposium on Microarchitecture, 2003. MICRO-36. 81­92. [9] Geoffrey Ndu. 2012. Boosting Single Thread Performance in Mobile Processors using Reconfigurable Acceleration. Ph.D. Dissertation. [10] Linda Null and Julia Lobur. 2014. The Essentials of Computer Organization and Architecture (4th ed.). USA. [11] Markus Willems. 2019. Application-Specific Processors for High Throughput, Low Latency, and Flexible 5G Communication SoCs. Synopsis. https://www.synopsys.com/designware-ip/technical-bulletin/5g-asips-communication-socs.html

, Vol. 1, No. 1, Article . Publication date: June 2021.

