arXiv:2106.01405v1 [hep-th] 2 Jun 2021

Prepared for submission to JHEP
Symbol Alphabets from Tensor Diagrams
Lecheng Ren,1 Marcus Spradlin1,2 and Anastasia Volovich1 1Department of Physics, Brown University, Providence, RI 02912, USA 2Brown Theoretical Physics Center, Brown University, Providence, RI 02912, USA
Abstract: We propose to use tensor diagrams and the Fomin-Pylyavskyy conjectures to explore the connection between symbol alphabets of n-particle amplitudes in planar N = 4 Yang-Mills theory and certain polytopes associated to the Grassmannian G(4, n). We show how to assign a web (a planar tensor diagram) to each facet of these polytopes. Webs with no inner loops are associated to cluster variables (rational symbol letters). For webs with a single inner loop we propose and explicitly evaluate an associated web series that contains information about algebraic symbol letters. In this manner we reproduce the results of previous analyses of n  8, and find that the polytope C(4, 9) encodes all rational letters, and all square roots of the algebraic letters, of nine-particle amplitudes.

Contents

1 Introduction

2

2 Outline of the Paper

4

2.1 Warm-Up: The Polytope C(3, 5)

4

2.2 Cluster Series

5

2.3 Symbol Letters

7

3 Review of Tensor Diagrams and the Fomin-Pylyavskyy Conjectures

9

3.1 sl2 Tensor Diagrams

10

3.2 sl3 Tensor Diagrams

10

3.3 sl4 Tensor Diagrams

11

3.4 Non-Arborizable Web Invariants

13

4 From Tensor Diagrams to Kinematic Functions

13

4.1 sl3 Arborizable Invariants

14

4.2 sl3 Non-Arborizable Invariants

16

4.3 sl4 Arborizable Invariants

19

4.4 sl4 Non-Arborizable Invariants

20

4.5 General Relations Between XL and XR

22

4.6 Kinematic Length

23

5 Web Series

24

5.1 sl3 Almost Arborizable Webs

25

5.2 sl4 Almost Arborizable Webs

27

5.3 A Web Series for Almost Arborizable Webs

28

6 Results and Discussion

29

A Conventions

32

A.1 Web Variables

32

A.2 Kinematic Space and Kinematic Functions

33

A.3 g-Vectors

35

A.4 G(k, n)-Polytopes

36

A.5 Langlands Dual Conventions

36

B Summary of Known Symbol Letters

38

C Some Notation for Kinematic Functions

39

­1­

1 Introduction
The perturbative n-particle scattering amplitudes of planar maximally supersymmetric YangMills (SYM) theory are a remarkable collection of functions that reflect deep but still partially mysterious mathematical structure. A prime example of this structure is the apparent connection [1] between their physical singularities, which for certain amplitudes (those of polylogarithmic type) are encoded in symbol letters [2] indicating where the amplitudes have logarithmic branch points, and the mathematics of cluster algebras [3]. All evidence available to date is consistent with the hypothesis that the symbol letters of all 6, 7-particle amplitudes are cluster variables of the G(4, n) cluster algebra, whereas for n  8 it is known that certain algebraic functions of cluster variables also appear as symbol letters (see Tab. 5 for references on the relevant computations and [4] for a recent review of n = 6, 7)1.
Recently this connection has been approached [7­10] via the study of certain fans one can naturally associate to the tropical positive Grassmannian Trop>0 G(4, n) (generalizing the construction of [11]) or (dually) certain "G(4, n)-polytopes" one can associate to G(4, n) using the construction of [12]2. This approach is appealing because for n  7 the G(4, n)-polytopes are different than cluster polytopes [17] in a way that makes them seem to more faithfully encode the symbol alphabets of SYM theory3. In particular, while the G(4, n) cluster algebra is infinite for n  8, these polytopes are finite for any n, which matches the supposition [19] that the symbol alphabet of n-particle amplitudes might be finite for any fixed n. Moreover, while many facets of the relevant polytopes are naturally associated to certain finite subsets of cluster variables (many of which are known to appear as symbol letters of amplitudes), for n  8 there are also "exceptional" facets that are not associated to any cluster variable. Consequently the G(4, n)-polytopes may have have room to "explain" the algebraic symbol letters that appear in n  8-particle amplitudes4.
There have been several different but related suggestions for how, precisely, algebraic letters are encoded in the structure of polytopes. Here we follow the framework proposed in [7], where partial information about algebraic letters is encoded in certain formal power series associated to exceptional facets. In that paper the authors studied the polytope C(4, 8), finding that the cluster variables associated to its 272 non-exceptional facets include the 172 (non-frozen) cluster variables known to appear as symbol letters of n = 8-particle amplitudes. Moreover they conjectured a formula for the series associated to its 2 exceptional facets based on explicit computation of the first three nontrivial terms in the associated series, extending the results of [22] (whose method they used), and showed that it was consistent with the expected square root of four-mass box type. Together, this was taken as evidence supporting
1The connection between cluster algebras and singularities of amplitudes could extend well beyond SYM theory [5, 6].
2The very same polytopes also appear in the study of Pk-1-generalized scattering equations for biadjoint amplitudes [13­16].
3Some finer aspects of this encoding for n = 7 are discussed in [9, 18]. 4It is an interesting open question whether any information about the more complicated analytic structure of non-polylogarithmic amplitudes (that are known to appear for n  10 [20, 21]) is encoded in polytopes.
­2­

the notion that C(4, 8) encodes information about the n = 8 symbol alphabet (see also [9], and [8, 10] which went further, fully reproducing all algebraic letters). Unfortunately the computational complexity of the series introduced in [7] is such that computing higher order terms for n = 8, or any nontrivial terms for n > 8, seems vastly out of reach.
In this paper we bring new mathematical technology to bear on this problem: the "web diagrams" (called webs for short) and web invariants that star in the beautiful FominPylyavskyy (FP) conjectures [23]. We propose an algorithm for assigning webs to facets of G(k, n)-polytopes. FP conjectured that the invariant associated to a web is a cluster variable if the web can be rearranged into a tree using certain graphical moves (in which case it is called "arborizable"). Exceptional facets therefore correspond to non-arborizable webs. To "almost arborizable webs" (those with only a single inner loop) we are able to associate a formal power series of webs whose invariants we can compute exactly, using a graphical recursion. In this manner we are able to compute the complete series associated to the exceptional facets of C(4, 8), confirming the conjecture of [7] (albeit in a slightly different basis; see Sec. 2.2).
A prime motivation for this work was to construct and study the polytope C(4, 9) as a candidate for encoding information about the n = 9 symbol letters known from [24]. We find that 3078 of its 34239 facets are associated with arborizable webs, and their invariants include all of the 531 cluster variables known to appear in the n = 9 symbol alphabet. We find that 327 facets are associated to almost arborizable webs, and compute their web series exactly. These encode the expected 9 square roots of four-mass box type that appear in [24], as well as 318 additional, more complicated square roots. The apparent overabundance of facets suggests that C(4, 9) might be more complicated than needed to describe 9-particle amplitudes, although more complicated cluster variables and square roots could certainly be discovered in future computations at higher loop.
Some recent papers [25­28] have explored the connection between symbol alphabets and plabic graphs [29, 30], and have in particular shown that the complete symbol alphabets for n = 6, 7, 8 (including the n = 8 algebraic letters) can be "derived" by solving certain polynomial equations associated to plabic graphs. It is intriguing to note that the webs appearing prominently in this paper bear superficial resemblance to plabic graphs (compare for example 6(b) with Fig 5.1 of [25]), and it would be interesting to see if the approach to symbol alphabets taken here could be connected to that of [25­27]. We note that a connection between webs and plabic graphs is known in the math literature; see Example 4.3 and Theorem 4.4 of [31].
The outline of this paper is as follows. In Sec. 2 we briefly review basic information about G(k, n)-polytopes, cluster series, and symbol letters, and in Sec. 3 we review necessary details about webs and the FP conjectures. Sec. 4 explains our main algorithm for associating webs to the facets of G(k, n)-polytopes. In Sec. 5 we define and compute the web series for almost arborizable webs. The results of our computations for (k, n) up to (3, 10) and (4, 9), and the implications thereof for symbol alphabets, are summarized in Sec. 6.
­3­

2 Outline of the Paper
The central objects of study in this paper are certain d = (k-1)(n-k-1)-dimensional polytopes associated to the Grassmannian G(k, n). In particular we are interested in the apparent connection (for k = 4) between their facets and the symbol alphabet of n-particle amplitudes in SYM theory. Our main result, which we apply to some polytopes associated to G(3, n  10) and G(4, n  9), is a new algorithm to address the problem:
How can one efficiently extract the symbol alphabet data associated to a given G(k, n)-polytope? The computational complexity of existing algorithms for answering this question is reviewed in Fig. 2 and Sec. A.3. In this section we very briefly review key features of these polytopes and the relations between the structures associated to their facets, enabling us to outline our new algorithm in Fig. 2.
2.1 Warm-Up: The Polytope C(3, 5)
X2
c235 + c245

c245

c235 c135 +c235 X1

Figure 1: The polytope C(3, 5), combinatorially equivalent to the exchange graph [3] of the G(3, 5) (or A2) cluster algebra.

In order to illustrate some key terminology we begin by considering the 2-dimensional
polytope called C(3, 5) in [7]. It is equivalent to the associahedron [32, 33] K4 as constructed in [34] and can be realized in R2 with coordinates (X1, X2) by the inequalities

X1  0 , X2  0 , c135 + c235 - X1  0 , c235 + c245 - X2  0 , c245 + X1 - X2  0 ,

(2.1)

where the c's are positive constants (see Fig. 1). There are three natural structures we can use to label each facet F of this polytope:

­4­

kinematic function
s125 = c135 + c235 - X1 s234 = c235 + c245 - X2 s145 = c245 + X1 - X2
s123 = X1 s345 = X2

generator
(1, 0) (0, 1) (-1, 1) (-1, 0) (0, -1)

cluster variable
124 134 135 235 245

Table 1: The correspondence between kinematic functions, generators, and cluster variables for the C(3, 5) polytope. Our conventions are summarized in Sec. A, where we also review the definition and properties of the generalized Mandelstam variables sijk.

1. the function in (2.1) that vanishes on F (and is positive inside the polytope),
2. the generator of the ray normal to F (we always choose the generator to be the first integer point along the outward pointing normal ray),
3. or the G(3, 5) cluster variable whose g-vector [35] is normal to F.
The correspondence between these structures for the five facets of C(3, 5) is shown in Tab. 1. Note that by convention we always fix the overall normalization of each kinematic function so that the coefficients of the X's match the components of (the negative of) the corresponding generator.

2.2 Cluster Series
The G(k, n) cluster algebra [3, 36] is finite if and only if n+1 > d = (k-1)(n-k-1). For polytopes associated to these algebras, it has been found (by explicit computation in all cases studied so far) that the generator of each normal ray is a g-vector of the cluster algebra. It is this fact that allowed us to fill in the third column in Tab. 1. In contrast, [7­9] studied polytopes associated to the infinite algebra G(4, 8) having a facet normal to

(-1, 1, 0, 1, 0, -1, 0, -1, 1) ,

(2.2)

which is known to not be a g-vector of G(4, 8) (moreover, it is known to not even be inside the cluster fan [22]). For this reason we call (2.2) an exceptional generator. All exceptional generators of the polytopes studied in [7­9] are related to (2.2) by an element of the cluster modular group5.
Since it is not possible to assign a cluster variable to exceptional facets, [7] suggested instead to assign to each ray R+y the (formal) cluster series (called a cluster algebraic
5In fact, (2.2) may be essentially unique in that all rays in R9 are either inside the G(4, 8) cluster fan or related to the one generated by (2.2) by an element of the cluster modular group [37]. We thank C. Kalousios for providing some data that supports this hypothesis.

­5­

function in [7]) defined by

fy(t) = B(my)tm ,
m0

(2.3)

where B(y) is a cluster algebra basis element associated to the lattice point y  Zd. In [7] it was conjectured that the cluster series associated to the ray generated by (2.2)
takes the form

1 1 - A t + B t2

(2.4)

in the canonical basis [38], where

A = 1256 3478 - 1278 3456 - 1234 5678 , B = 1234 3456 5678 1278 .

(2.5)

This conjecture was checked through O(t3) by explicit computation using the character formula of [22].
In general fg(t) may depend on the choice of basis, but we expect that certain important properties of fg(t) are the same in any suitably reasonable basis. In particular, we expect that it is a rational function of t and that the locations of its poles (in t) are basis-independent and located on the positive t axis when the series is evaluated at any point in the positive Grassmannian G>0(k, n).
In Sec. 5 of this paper we introduce a closely related web series. We conjecture that a web series exists for every ray, but we have not found the specific form of the series in general. However, for certain rays (those corresponding to almost arborizable webs; see Sec. 5) we prove, to all orders in t, that the web series takes the form

1

1 - B t2 -At+B

t2

,

(2.6)

with A, B depending on the ray. In particular we prove that the web series associated to the ray generated by (2.2) takes the form (2.6) with A, B given by (2.5). Evidently our web series use a different basis than the one that gives the series (2.4), but is consistent with the abovementioned expectations (since it has the same poles, at t = A ± A2 - 4B). We also prove that the web series has the form (2.6), and evaluate the corresponding A's and B's, for 324 normal rays of the polytope C(4, 9) that might be relevant to the symbol alphabet of 9-particle scattering amplitudes in SYM theory.
Finally let us note that if g is a g-vector, then B(g) is the associated cluster variable and B(mg) = B(g)m for any choice of basis, so the cluster series is basis-independent and geometric:

fg(t)

=

1

-

1 tB(g)

.

(2.7)

­6­

web diagram W
read off (Sec. 3)
web invariant [W ]
Symbol Alphabet Data

X
X -1
read off (Sec A.3)
[22, Corollary 7.3]

kinematic function Fy

(A.9)

(A.10)

ray y  Zd Polytope Data

Figure 2: An outline of how our work fits into the literature. Recent studies have uncovered an apparent connection between data associated to the facets (with normal ray y) of certain G(4, n)-polytopes (indicated on the first row) and the symbol alphabet of n-particle amplitudes in SYM theory (bottom row). One route from the former to the latter [7] (the dotted line) uses the character formula of [22] and requires the series (2.3) to be computed term by term, with the m-th term having computational complexity O((mw)!), where w is an integer that depends on the facet. In this paper we employ web invariants and the FominPylyavskyy conjectures to provide the alternate route shown on the right. In Sec. 4 we define a map X from web invariants to kinematic functions whose inverse is practicable to compute (by scanning over a manifestly finite preimage). Moreover, we provide a recursive (in m) all-order proof that for certain web invariants (those having a single closed loop), there is a web series that sums exactly to (2.6), with A, B depending on the facet. This proof applies to the exceptional G(4, 8) generators encountered in [7­9], and here we show that it also applies to the generators of 324 facets of the C(4, 9) polytope, for which we compute the exact web series. Other alternate routes have been studied in [8, 10].
In such cases the information content of knowing fg(t) is the same as that of knowing the cluster variable B(g). This provides a sense in which it is reasonable--for infinite algebras--to generalize the third column "cluster variable" of Tab. 1 to "cluster series" as [7] did, or to "web series", as we shall do.
2.3 Symbol Letters
Finally let us briefly review the observed connection between the symbol alphabet of nparticle amplitudes in SYM theory and G(4, n)-polytopes. All known symbol letters (see

­7­

n-particle symbol data for n =
# of rational letters # of algebraic letters # of distinct square roots

67 8 9
9 42 172 522 0 0 18 99 00 2 9

C(4, n) polytope data for n =

67 8 9

# of facets normal to g-vectors of G(4, n) 9 42 272 3078

# of exceptional facets

0 0 2 351

Table 2: Summary of data about known symbol letters of n-particle amplitudes in SYM theory. On the top line we omit the n frozen variables of G(4, n).

Sec. B for more details) fall into two classes: rational letters are cluster variables of G(4, n),

and

algebraic

letters

have

the

form6

a-b a+ b

where

a, b

are

polynomials

in

Plu¨cker

coordinates.

Tab. 2 summarizes the number of each type of letter that is known to appear in various

n-particle amplitudes, as well as the number of distinct square roots (each b appears in

several algebraic letters, i.e. paired with various different a's).

Tab. 2 also summarizes data about the facets of the polytopes called C(4, n) in [12].

There (and also in [8, 9]) they were constructed and studied for n  8, and found to contain

information about the n-particle symbol alphabet in the following sense. First, the cluster

variables associated to the g-vector facets (second to last line) include all of the rational

symbol letters (top line). For n = 8 it was further observed that the square roots appearing

in the poles of the (conjectured) series (2.4) associated to the two exceptional facets (bottom line), given by A2 - 4B in terms of (2.5) and its image under a Z8 cyclic shift, agree precisely with the two distinct square roots known to appear in algebraic symbol letters of 8-particle

amplitudes (third line).

In this paper we extend this analysis to n = 9 using the algorithm summarized in Fig. (2).

We find that the polytope C(4, 9) has 3429 facets; 3078 are normal to g-vectors of G(4, 9)

while the other 351 are exceptional. The 3078 cluster variables associated to the former

include the 531 rational letters shown in Tab. 2. For 324 of the latter we prove that the web series has the form (2.6); the 324 distinct square roots of the form A2 - 4B obtained in this

way include the 9 counted in the third line of the table. The remaining 27 exceptional facets

remain more mysterious. Although we expect that web series exist for them as well, we have

not been able to find their explicit form.

As a further application of our technology we also define and study the polytopes C(3, n).

Interestingly we find that they do not have any exceptional facets for n  10, which is as far

as we have computed (see Sec. 6).

6All algebraic letters currently known have degree 2, but there is no reason to doubt that letters of arbitrarily high degree await discovery.

­8­

3 Review of Tensor Diagrams and the Fomin-Pylyavskyy Conjectures

In this section we review some basic facts about tensor diagrams, which provide a graphical way to encode data about the cluster structure of the Grassmannian. The connection between tensor diagrams and G(k, n) cluster algebras was first studied by Fomin and Pylyavskyy in [23]. The main elements of this connection are given by the Fomin-Pylyavskyy (FP) conjectures, which have been partly proved in [37]. Our work relies on the FP conjectures in a manner discussed in Sec. 6.
An slk tensor diagram is a finite graph drawn inside a disk with n marked points (labeled 1, . . . , n clockwise around its boundary) satisfying the requirements:
1. all boundary vertices are colored black, and may have arbitrary valence,
2. each internal vertex may be either black or white, but must have valence k,
3. and each edge of the graph must connect a black vertex to a white vertex.
A planar tensor diagram is called a web, and a tensor diagram with no closed loops (of internal vertices) is called a tree. If we glue all of the vertices and edges of two or more webs into the same disk, we get a combination of webs.
To each diagram D we can associate a tensor invariant [D] constructed as follows. First, we associate to each boundary vertex i a k-component vector Zia. (For k = 4 these are the familiar momentum twistor variables that encode massless n-particle kinematic data.) Then to each white vertex we associate a1···ak , to each internal black vertex we associate a1···ak , and we contract all indices as indicated by the edges of the graph. The resulting invariant is always a homogeneous polynomial in the Plu¨cker coordinates

i1 i2 . . . ik = det(Zi1 Zi2 · · · Zik )

(3.1)

on G(k, n). This definition suffices for our purposes, but it is not precise because when k is even it leaves the overall sign of [D] undetermined thanks to a2···aka1 = -a1a2···ak . For a
proper definition of tensor invariants, including a detailed discussion of how to fix this sign,
we refer the reader to [31, 39]. In practice we will determine the "correct" overall sign for any invariant by requiring that it evaluates to a positive number when the k × n matrix Zia is an element of the positive Grassmannian G>0(k, n).
If W is a web satisfying certain additional conditions7 we call [W ] a web invariant. If
W is a combination of two or more webs W1, W2, . . . then [W ] is the product of the web invariants [W1], [W2], . . .. If [W ] is not a product of two or more web invariants then we say that [W ] is indecomposable.
As their name suggests, tensor invariants are invariant under certain graphical moves
known as skein relations (see Fig. 5) [23, 39­41]. One important application of these relations

7For k = 3 W must be non-elliptic, which means every pair of vertices is connected by at most one edge and each face formed by interior vertices has at least six sides [23]. For k = 4 W can have at most double edges and must have no 2-cycles [37].

­9­

is that they can sometimes be used to convert a web W with closed loops into a tree diagram D that is equivalent in the sense that [D] = [W ]; if this is possible then the web W is called arborizable (note that D may or may not be a web, i.e. it may be non-planar).
The Fomin-Pylyavskyy conjectures [23] comprise several interesting connections between tensor invariants and cluster variables. These have been proven up to G(3, 9) and G(4, 8) in [37]. For our purposes the key conjecture is: the set of cluster (and frozen) variables coincides with the set of indecomposable arborizable web invariants. Henceforth we only consider indecomposable diagrams.
In order to better familiarize the reader with tensor diagrams let us now introduce some tricks for quickly reading off the invariants associated to certain diagrams.

3.1 sl2 Tensor Diagrams
This case is rather trivial in an instructive way. The only structures an sl2 tensor diagram can have are strands that begin and end on boundary vertices, passing along the way through an odd number of internal vertices alternating between white and black. All internal vertices except for a single white vertex on each strand can be removed by a skein relation. The web invariants have the form [Wij] = i j , corresponding to the web Wij with a single strand connecting boundary vertices 1  i < j  n.

3.2 sl3 Tensor Diagrams
The invariant for any sl3 tree diagram D can be read out in a simple way [23]. First we choose any internal vertex of D to be the central vertex v and assign a direction to each edge in such a way that it points from the boundary of the diagram towards v; this assignment is unambiguous if D is a tree. Then at each internal vertex except v, there must be two inward pointing edges and one outward pointing edge. Having already assigned a vector Zi to each boundary vertex i, we now assign to each internal vertex v = v the cross-product of the two vectors or covectors associated to the two inward edges at v; this is a vector if v is black and a covector if v is white. Then the invariant of D is equal to the determinant of the three (co)vectors assigned to the three incoming edges at the central vertex v.
Some sl3 webs and their corresponding invariants are shown in Fig. 3. For example, let D be the diagram shown in Fig. 3(b). If we choose the black vertex in the middle to be the central vertex, then the covectors assigned to the top, bottom right, and bottom left white vertices are respectively Z1 × Z2 (which we immediately abbreviate to 1 × 2), 3 × 4, and 5 × 6, yielding the tensor invariant [D] = 1 × 2, 3 × 4, 5 × 6 as indicated in the figure. We could also have chosen, say, the top white vertex as the center, in which case the invariant would have been computed as [D] = 1, 2, (3 × 4) × (5 × 6) , but it is easy to check that [D] = [D].
This shortcut for computing a tensor invariant [D] can also be used if D is arborizable. For example, by choosing the white vertex adjacent to 3 as the center, the invariant associated to the diagram shown in Fig. 4 evaluates to

(7 × 8) × (1 × 2), 3, (4 × 5), (6 × 8) .

(3.2)

­ 10 ­

1

2

6

3

5

4

135

1

2

6

3

5

4

1 × 2, 3 × 4, 5 × 6

23 1
4
9
5 8
76 (1 × 2) × (3 × 4), 5, (6 × 7) × (8 × 9)

Figure 3: Examples of sl3 webs and their corresponding invariants.

2

1

3

2

1

3

8

4= 8

4

7

5

6

7

5

6

Figure 4: An example of arborization, where we break the inner hexagon on the left by applying the first and seventh skein relations shown in Fig. 5 to the blue edges. (The blue and red colorings serve only to guide the eye.)

3.3 sl4 Tensor Diagrams

Again we emphasize that we have only explained how to compute tensor invariance mod sign

when k is even. In order to formulate the skein relations for sl4 tensor diagrams, it would be necessary to be careful about the detailed sign convention explained in [39, 41]. In Fig. 5 we

show the equivalence relations (mod sign) that we require for the calculations in this paper.

Freed from having to worry about the sign, we can compute invariants for sl4 trees in a similar manner to those of sl3. If two vertices are connected by a pair of edges then we call the

pair a double edge. After choosing a central vertex v and assigning to each edge a direction

pointing towards v, every other internal vertex v = v has either a double or single outgoing

edge, and the other two or three edges are incoming. Extending the k = 3 analysis in the

obvious way, we now assign to v the 1- or 2-index co- or contravariant tensor constructed

by contracting abcd (if v is white) or abcd (if v is black) with the tensors associated to the

incoming

edges

(multiplied

by

1 2

if

there

is

a

double

edge).

Finally,

at

the

central

vertex

v

all

edges are incoming; contracting their indices with the appropriate  computes the diagram's

invariant (up to overall sign).

­ 11 ­

=

=

= = = = = =3 =0

+ + × ( -2 ) × ( -1 ) × ( -1 )

=

=

= = = = =4

×2 ×2 ×3

=6

=

=0

Figure 5: The skein relations for sl3 and sl4 tensor diagrams, adapted from [23, 40]. As mentioned in the text, the latter graphical relations are equivalences from skein relations between tensor invariants mod overall sign. Additionally, the sl4 relations in the sixth and eighth lines hold with all colors exchanged.

For example, if in the diagram

2

1

3

8

4

7

5

6

(3.3)

­ 12 ­

we choose the internal black vertex as the center, then the top, bottom right, and bottom left vertices are assigned (123), (45), and (678), respectively, where we use the shorthand

(ij)

=

1 2

abcdZiaZjb

,

(ijk) = abcdZiaZjbZkc .

(3.4)

Contracting indices at the central vertex computes the diagram's invariant, which can be expressed as 45(123)  (678) using the notation

ab(cde)  (f gh) = acde bf gh - bcde af gh .

(3.5)

3.4 Non-Arborizable Web Invariants
According to the Fomin-Pylyavskyy conjectures, every cluster monomial (a product of compatible cluster variables) in G(k, n) is an n-point slk web invariant. However, the converse is not true because of the existence of non-arborizable webs. Their invariants are multiplicatively independent of cluster variables and so indicate that bases for cluster algebras must (in general) have elements beyond cluster monomials. The simplest non-arborizable sl3 webs appear at n = 9 and the simplest sl4 webs appear at n = 8. These include for example [23, Figure 31] and [22, (8.2)], shown in Fig. 6.

2 1
9
8 7

3 4
5 6

(a)

2

1

3

8

4

7

5

6

(b)

Figure 6: Two of the simplest non-arborizable webs, for (a) G(3, 9) and (b) G(4, 8).

4 From Tensor Diagrams to Kinematic Functions
In this section we study a map X that associates a kinematic function F = X([D]) to certain tensor invariants [D]. A key property we want the map to have is that if [D] is a cluster variable, then X([D]) should be the kinematic function naturally associated to [D] (in the same sense of association as between the first and third columns of Tab. 1).
More specifically, and more generally, X is defined as follows: if [D] is a tensor invariant whose g-vector (defined as reviewed in Sec. A.3) is y  Zd, and if y is the first integer point along the ray R+g (in which case we say that y and [D] are primitive), then X([D]) is the kinematic function Fy computed according to (A.9). These steps trace counterclockwise

­ 13 ­

around Fig. 2, when applied to a diagram that is not necessarily a web. In the rest of this section we present conjectural formulas that compute X([D]) for k  4 directly, as opposed to tracing around the figure. We have confirmed that our formulas obey the defining property in all cases that we have been able to check, and conjecture them to be valid in general. In Sec. 5 we discuss web series, which extend this discussion to arbitrary integer points along R+y.
It is sufficient to focus our attention on indecomposable invariants; more generally we have X([D1]·[D2]·· · · ) = X([D1])·X([D2])·· · · . In order to make our results easily accessible to users of two different sets of conventions we study two distinct versions of the map: XL and XR. The former is attached to the conventions reviewed in Secs. A.1­A.4 (and used in the example of Sec. 2.1), while the latter is attached to the "Langlands dual" convention where all arrows in Fig. 7 are reversed (see Sec. A.5).
For k = 2 it is possible to write down an explicit general formula for the X-map, exploiting the fact that every indecomposable sl2 tensor invariant has the form i j for i < j (see Sec. 3.1). The associated kinematic function, for the two choices of convention, is simply

XL( a b ) =

sij ,

a+1i<jb

XR( a b ) =

sij .

ai<jb-1

(4.1)

4.1 sl3 Arborizable Invariants

For k > 2 we conjecture a recursive formula for the X-map, first for tree diagrams. In order to apply the recursion, [D] must be written in the form obtained by reading it off from some diagram D as described in Sec. 3.2. If we are handed [D] in some random form (as a polynomial in Plu¨cker coordinates), we would first need to draw some tree diagram D whose invariant is [D]. Next, D must be put into canonical order, which means that all lines and vertices are placed so as to minimize the number of crossed lines but without producing or annihilating any lines or vertices. Specifically, all crossing structures of the type shown in the fourth and fifth lines of the sl3 skein relations (Fig. 5, left panel) should be cleared, but without using the moves shown on the first and second lines.
The recursion is seeded by the simplest possible sl3 tensor diagrams: those with only a single internal vertex (see for example the left panel of Fig. 3), for which we have

XL( a b c ) = Sa+1,...,b(b+1,...,c) , XR( a b c ) = S(a,...,b-1)b,...,c-1 ,

(4.2)

using notation reviewed in Sec. C. For more general diagrams, our definition of the X-map is motivated by the G(3, 6)
"bipyramid relation" of [11] (see for example (6.10) of [15] for more specificity) which in our notation reads

S(12)34 + S12(34) = S1234 + S3456 + S1256 .

(4.3)

­ 14 ­

Working for a moment with the "left" conventions, we can use (4.2) to rewrite all but the first term as XL images of cluster variables:

S(12)34 + XL( 6 2 4 ) = XL( 6 3 4 ) + XL( 2 5 6 ) + XL( 4 1 2 ) .

(4.4)

We don't yet know what to do with the first term, but one can calculate that the g-vector of S(12)34 is the same as that of the cluster variable 5 × 6, 1 × 2, 3 × 4 , which motivates us to define

XL( 5 × 6, 1 × 2, 3 × 4 ) := XL( 6 3 4 ) + XL( 2 5 6 ) + XL( 4 1 2 ) - XL( 6 2 4 ) . (4.5)

Our recursive definition of XL (and similar for XR) is motivated by the desire to extend (4.5) to more general cases without having to rely on computing g-vectors at intermediate stages.
Therefore we now consider more complicated tensor diagrams whose invariants involve cross-products of the form a × b, c × d, e × f . Here a, b, . . . , f are either all vectors or all covectors (the expression makes no sense otherwise), and each could itself be a string of nested cross-products such as a = (1 × 2) × (3 × 4). The generalization of (4.5) is

XL( a × b, c × d, e × f ) = XL( a, b, d ) + XL( c, d, f ) + XL( e, f, b ) - XL( b, d, f ) , XR( a × b, c × d, e × f ) = XR( a, c, d ) + XR( c, e, f ) + XR( e, a, b ) - XR( a, c, e )
(4.6)

for vectors and XL( a × b, c × d, e × f ) = XL( a, c, d ) + XL( c, e, f ) + XL( e, a, b ) - XL( a, c, e ) ,
XR( a × b, c × d, e × f ) = XR( a, b, d ) + XR( c, d, f ) + XR( e, f, b ) - XR( b, d, f ) (4.7)

for covectors. The formulas (4.2), (4.6) and (4.7) provide a recursive formula for XL and XR for all sl3
tree diagrams, but it may not immediately be clear how to apply the recursion to a diagram like the one in the right panel of Fig. 3 because its invariant has no manifest cross-product in the middle entry. However, it is always possible to rewrite an invariant in an equivalent way that exposes a cross-product in each entry; in this case via the identity

(1 × 2) × (3 × 4), 5, (6 × 7) × (8 × 9) = 1 × 2, 3 × 4, 5 × ((6 × 7) × (8 × 9)) , (4.8)

to which one can now apply (4.7). In this example one has to perform further rearrangements at the next step in the recursion; the important point is that it is always possible to do so.
As emphasized above, although we have written the above recursion in a seemingly general way in terms of nested brackets, it will give inconsistent results unless [D] is expressed as the invariant read off from a canonically ordered diagram. One obvious manifestation of the inconsistency for improper ordering is the fact that we clearly have

1 × 2, 4 × 3, 6 × 5 = 1 × 2, 3 × 4, 5 × 6 ,

(4.9)

but (4.6) and (4.7) are not invariant under c  d, e  f ; the recursion must be applied only to the right-hand side of (4.9).

­ 15 ­

4.2 sl3 Non-Arborizable Invariants
Now we provide recursion relations for computing X([D]) when [D] is a non-arborizable invariant. The basic step is to "unroll" each internal loop by appropriately cutting one of its edges. Consider first the case when [D] is the invariant of a diagram having a single internal loop. Then, for any choice of edge on the internal loop (shown in red) we have





 a b c



a

m c

ab



XL

 

 

=

XL

 

c

 

-

XL

m, a, c ) ,

















 a b c



bc

m a

c



XR

 

 

=

XR

 

a

 

-

XR

a, c, m ) ,













(4.10)

where we have removed the red edge of the loop and replaced it with the new red edges shown, the blue dashed lines denote an arbitrary (even) number of additional vertices on the inner loop, and m is an arbitrary reference point. One can check that all terms involving the reference point m cancel out when the recursion is applied and the right-hand sides are expanded out. We emphasize again that (4.10) is only valid when the diagram is drawn in canonical order, with minimal number of crossings.
To see an example of the recursion at work, let us compute the kinematic functions associated to Fig. 6(a). Applying (4.10) and then (4.6), (4.7) we have



2

1 



XL

 

9



 

8

7



3 

4

 



5

 



6

(4.11) = XL (m × 3) × (4 × 5) × 6, 7 × 8, 9 × (1 × 2) × (3 × 5) - XL( m, 3, 5 )

= XL( m × 3, 4 × 5, 6 × 8 ) + XL( 7 × 8, 1 × 2, 3 × 5 ) + XL( 6 × 9, 1 × 2, 3 × 5 ) - XL( 6 × 8, 1 × 2, 3 × 5 ) - XL( m, 3, 5 )
= XL( 1, 2, 5 ) + XL( 4, 5, 8 ) + XL( 7, 8, 2 ) + XL( 2, 6, 9 ) + XL( 3, 5, 9 ) + XL( 3, 6, 8 ) - XL( 2, 5, 9 ) - XL( 2, 6, 8 ) - XL( 3, 5, 8 ) ,

­ 16 ­

and similarly



2

1 



XR

 

9



 

8

7



3 

4

 



5

 



6

= XR (1 × 3) × (4 × 5) × 6, 7 × 8, 9 × (1 × 2) × (3 × m) - XR( 1, 3, m )

= XR( 1 × 3, 4 × 5, 7 × 8 ) + XR( 7 × 9, 1 × 2, 3 × m ) + XR( 1 × 3, 4 × 5, 6 × 9 )

- XR( 1 × 3, 4 × 5, 7 × 9 ) - XL( 1, 3, m )

= XR( 7, 1, 2 ) + XR( 1, 4, 5 ) + XR( 4, 7, 8 ) + XR( 4, 6, 9 ) + XR( 3, 7, 9 )

+ XR( 1, 3, 6 ) - XR( 4, 7, 9 ) - XR( 1, 3, 7 ) - XR( 1, 4, 6 ) .

(4.12)

A diagram with  > 1 inner loops can be treated similarly, by recursively unrolling each

loop via introduction of a new reference point. All  reference points will disappear in the

final result.

Of course, some diagrams with internal loops are equivalent to trees by the skein relations

and it is important to check that the recursion relations we have given respect this equivalence.

To see this we must look at the two types of arborization processes. First we consider

a b
-
c

a b
c

(4.13)

Applying XL to the left-hand side and using (4.10) gives

a





XL

 









m

b

a b





 

=

XL

 

c









a



b



 

-

XL

m, a, b ).

c



(4.14)

The first term on the right has the form XL( m × a, a × b, c × · · · ) where "· · · " stands for everything along the dotted blue semicircle and to its left in the figure. Then using (4.6) we have
(4.14) = XL( m, a, b ) + XL( a, b, · · · ) + XL( c, · · · , a ) - XL( a, b, · · · ) - XL( m, a, b ) = XL( a, c, · · · ) , (4.15)

­ 17 ­

but this is the same as XL applied to the right-hand side of (4.13), as required. Next consider applying XL to the left-hand side of

b

c

b

c

-

a

a

which by (4.10) gives



a



XL

 









 b

ma

a c

b







 

=

XL

 

 

-

XL

m, a, c )

c

 



c





(4.16)

= XL( m × a, b × c, c × · · · ) - XL( m, a, c) = XL( m, a, c ) + XL( b, c, · · · ) + XL( c, · · · , a ) - XL( a, c, · · · ) - XL( m, a, c) = XL( b, c, · · · ) ,
(4.17)
which again is the required answer: XL applied to the right-hand side of (4.16). We omit the proof for XR, which is essentially the same, and instead illustrate with the
example shown in Fig. 4:

2

1

3

2

1

3

8

4= 8

4 = (7 × 8) × (1 × 2), 3, (4 × 5) × (6 × 8)

7

5

6

7

5

6

Using (4.10) to unroll the red edge on the inner loop of the left diagram gives

(4.18)

XR( ((1 × 3) × (4 × 5)) × 6, 7 × 8, 8 × ((1 × 2) × (3 × m)) ) - XR( 1, 3, m )

= XR( 7, 1, 2 ) + XR( 1, 4, 5 ) + XR( 4, 6, 8 ) + XR( 3, 7, 8 )

(4.19)

+ XR( 1, 3, 6 ) - XR( 1, 3, 7 ) - XR( 1, 4, 6 ).

On the other hand, the right diagram in (4.18) is a tree; according to (4.7) its image under the XR map is

XR( (7 × 8) × (1 × 2), 3, (4 × 5) × (6 × 8) ) = XR( 7, 1, 2 ) + XR( 1, 4, 5 ) + XR( 4, 6, 8 ) + XR( 3, 7, 8 ) + XR( 1, 3, 6 ) - XR( 1, 3, 7 ) - XR( 1, 4, 6 ) ,

(4.20)

­ 18 ­

in agreement with (4.19).

4.3 sl4 Arborizable Invariants For k = 4 the recursion for calculating the X-map is seeded by

XL( a b c d ) = Sa+1,...,b|b+1,...,c(c+1,...,d)] , XR( a b c d ) = S[(a,...,b-1)b,...,c-1]c,...,d-1 ,

(4.21)

using notation reviewed in Sec. C. There are two basic types of structures that can appear in place of simple vectors a, b, c, d
in (4.21) when we look at more general tree invariants. We must describe separately how to recursively handle each type of structure.
The first type of structure that can appear in place of a vector is a tensor product involving 5 points:

[(ab)  (cde)]µ :=

1 2

a

b



cd e   µ

(4.22)

where all Greek subscripts and superscripts run from 1 to 4 and  is the antisymmetric LeviCivita symbol with 1234 = 1234 = 1; recall (3.4). For invariants involving one of these we have

XL( a, b, c, (d, e)  (f, g, h) ) = XL( a, b, c, e ) + XL( d, e, g, h ) + XL( f, g, h, c ) - XL( c, e, g, h ) ,
XR( a, b, c, (d, e)  (f, g, h) ) = XR( a, b, d, e ) + XR( d, f, g, h ) + XR( f, a, b, c ) - XR( a, b, d, f ) .

(4.23)

We could also have a structure like (4.22) but with a lower µ index--as would be the case for example if all of a, . . . , e were not individual vectors but triple-products like aµ = µa1a2a3 for some ai. (Note that aµ represents the plane in P3 containing the three ai.). In this case
we would have

XL( a, b, c, (d, e)  (f, g, h) ) = XL( a, b, d, e ) + XL( d, f, g, h ) + XL( f, a, b, c ) - XL( a, b, d, f ) ,
XR( a, b, c, (d, e)  (f, g, h) ) = XR( a, b, c, e ) + XR( d, e, g, h ) + XR( f, g, h, c ) - XR( c, e, g, h ) .

(4.24)

The second type of structure that can appear in tree invariants is a tensor product involving 9 points:

[(a1a2a3)(b1b2b3)(c1c2c3)]µ := (a11 a22 a33 1234 )(b11 b22 b33 1234 )(c11 c22 c33 1234 )444µ ,

(4.25)

­ 19 ­

which can appear in combinations of the form (again recall (3.4))

Cabc := (a1a2a3), (b1b2b3), (c1c2c3), (d1d2d3) = a1, a2, a3, (b1b2b3)(c1c2c3)(d1d2d3) . (4.26)

For this kind of invariant we have

XL(Cabc) = XL( a1, a2, a3, b3 ) + XL( b1, b2, b3, c3 ) + XL( c1, c2, c3, d3 ) + XL( d1, d2, d3, a3 ) + XL( a2, a3, c2, c3 ) + XL( b2, b3, d2, d3 ) - XL( a2, a3, b3, c3 ) - XL( b2, b3, c3, d3 ) - XL( c2, c3, d3, a3 ) - XL( d2, d3, a3, b3 ) + XL( a3, b3, c3, d3 ) ,
XR(Cabc) = XR( a1, b1, b2, b3 ) + XR( b1, c1, c2, c3 ) + XR( c1, d1, d2, d3 ) + XR( d1, a1, a2, a3 ) + XR( a1, a2, c1, c2 ) + XR( b1, b2, d1, d2 ) - XR( a1, b1, c1, c2 ) - XR( b1, c1, d1, d2 ) - XR( c1, d1, a1, a2 ) - XR( d1, a1, b1, b2 ) + XR( a1, b1, c1, d2 ) .

(4.27)

Alternatively, in the contravariant case (that is, when each of the nine entries in (4.25) represents a plane) we have

XL(Cabc) = XL( a1, b1, b2, b3 ) + XL( b1, c1, c2, c3 ) + XL( c1, d1, d2, d3 ) + XL( d1, a1, a2, a3 ) + XL( a1, a2, c1, c2 ) + XL( b1, b2, d1, d2 ) - XL( a1, b1, c1, c2 ) - XL( b1, c1, d1, d2 ) - XL( c1, d1, a1, a2 ) - XL( d1, a1, b1, b2 ) + XL( a1, b1, c1, d2 ) ,
XR(Cabc) = XR( a1, a2, a3, b3 ) + XR( b1, b2, b3, c3 ) + XR( c1, c2, c3, d3 ) + XR( d1, d2, d3, a3 ) + XR( a2, a3, c2, c3 ) + XR( b2, b3, d2, d3 ) - XR( a2, a3, b3, c3 ) - XR( b2, b3, c3, d3 ) - XR( c2, c3, d3, a3 ) - XR( d2, d3, a3, b3 ) + XR( a3, b3, c3, d3 ) .

(4.28)

All of the above relations are valid only when each invariant is read off from a tree diagram drawn in canonical order, as in the previous subsection.

4.4 sl4 Non-Arborizable Invariants
Here we consider only inner loops which have no double edges. We have found this to be sufficient to analyze the C(4, 8) and C(4, 9) polytopes (see Sec. 6); it would be interesting to formulate a recursive rule for more general diagrams. We find that single-edged inner loops

­ 20 ­

of sl4 diagrams can be unrolled with the rule



b

a



XL

 













c

d







 

=

XL

 





c
b a

d m2 m1 a

b

c d

    

-

XL

m1, a, b, (c, d)  m2

,













 b

a



XR

 













c

d







 

=

XR

 





c
b a

d m1 m2 a

b

c d

    

-

XR

m2  (a, b), c, d, m1

.













(4.29)

Here we need two reference points m1, m2 for each unrolled loop. Actually, since m2 is associated to a white vertex, it is better thought of as a reference plane, i.e. a triple of reference points. All dependence on these reference points drops out of any invariant. Of course, as always, the recursion rule can only be applied to canonically ordered diagrams.
By way of example let us apply XL to the non-arborizable G(4, 8) web shown in Fig. 6(b):





2

1

3









XL

 

8

4

 





 

7

5

 

6

= XL (m112)  (34), 5, 6, (78)  1, 2, (34)  (m2) - XL( m1, 1, 2, (34)  (m2) )

= XL (m112)  (34) , 5, 6, 8 + XL 7, 8, 2, (34)  (m2)

+ XL 6, 1, 2, (34)  (m2) - XL 6, 8, 2, (34)  (m2)

- XL m1, 1, 2, (34)  (m2)

= XL( 1246 ) + XL( 3468 ) + XL( 5682 ) + XL( 7824 ) - 2XL( 2468 ) ,

(4.30)

which shows the cancellation of the reference points.

Like we discussed for the sl3 case, it is of course important that the recursive relations we have given for the k = 4 X-map respect the skein equivalences shown in Fig. 5, in particular

applied to the arborization of an inner loop. The proof is similar to the k = 3 case but there

are more cases of the equivalence to check. We omit the details here and instead consider the

­ 21 ­

illustrative example

2

1

3

2

1

3

8

4 =8

4.

(4.31)

7

5

6

7

5

6

According to (4.29), the XL image of the web on the left is

XL( 1346 ) + XL( 3468 ) + XL( 5683 ) + XL( 7834 ) - 2XL( 3468 ) = XL( 1346 ) + XL( 5683 ) + XL( 7834 ) - XL( 3468 ) , (4.32)

which agrees as required with the XL image of the web on the right computed from (4.23).

4.5 General Relations Between XL and XR
Here we point out a few general relations between XL and XR that can be derived from the above definitions. First, for k = 3, it follows from (4.6) and (4.7) that

XL(W ) = XR(W 3 ) ,

(4.33)

where W is any web invariant, either arborizable or non-arborizable, and W 3 is obtained

from W by the replacement

a  (a+1) × (a+2)

(4.34)

(which exchanges vectors and covectors). Note that if W involves something like b × (b+1) then according to (4.34) we have

b × (b+1)  [(b+1) × (b+2)] × [(b+2) × (b+3)] = b+1, b+2, b+3 (b+2) .

(4.35)

Apart from a trivial overall factor of the frozen variable b+1, b+2, b+3 we can effectively regard the above transformation as

b × (b+1)  b+2 .

(4.36)

One can check that this makes sense because for both XL and XR it follows from (4.6) and (4.7) that

XL( ..., [(b+1) × (b+2)] × [(b+2) × (b+3)], ... ) = XL( ..., b+2, ... ) , XR( ..., [(b+1) × (b+2)] × [(b+2) × (b+3)], ... ) = XR( ..., b+2, ... ) .
Therefore we can phrase the inverse of (4.33) and (4.34) as XR(W ) = XL(W 3 ) ,

(4.37) (4.38)
(4.39)

­ 22 ­

where W 3 is obtained from W by taking

a  (a-2) × (a-1) .

(4.40)

Another relation between XL and XR involves reflection. For an arbitrary web invariant W , either arborizable or non-arborizable, we have

Refs(XL(W )) = XR(Ref(W )) ,

(4.41)

where Ref relabels the external vertices of W according to a  n+1-a, and Refs acts on

kinematic space by sa,b,c  sn+1-c,n+1-b,n+1-a. By combining (4.33) and (4.41) we can also say

that

Refs(XL(W )) = XR(Ref(W )) = XL(Ref(W )3 ) = XL(Ref(W 3)) .

(4.42)

Analogous relations also exist for k = 4. First we have

XL(W ) = XR(W 4 ) , XR(W ) = XL(W 4 ) ,

(4.43)

where W 4 and W 4 are defined respectively by

a  (a+1, a+2, a+3)

(4.44)

and

a  (a-3, a-2, a-1) .

(4.45)

The composition of 4 and 4 is again equivalent to the identity transformation, up to overall factors of frozen variables. For k = 4 we again have

Refs(XL(W )) = XR(Ref(W ))

(4.46)

(where Refs acts in the obvious way on indices of Mandelstam variables) and hence

Refs(XL(W )) = XR(Ref(W )) = XL(Ref(W )4 ) = XL(Ref(W 4)) .

(4.47)

4.6 Kinematic Length

It is intuitively clear that "more complicated" webs have "more complicated" invariants, and

are assigned by the X-map to "more complicated" kinematic functions. In this section we

formalize this notion of complexity in a way that will play an important role in Sec. 6. To

that end we first define two bases of the generalized kinematic space Kk,n (different from the ABHY basis constructed in Sec. A.2). The left kinematic basis is the set {XL(p) :

p is a non-frozen Plu¨cker coordinate}, and the right kinematic space is defined analogously

using XR. Note that each set contains

n k

- k elements, the same as the dimension of Kk,n,

and one can check that they are linearly independent in Kk,n, so each is indeed a basis.

We define the left (right) kinematic length of a kinematic function F as the sum of the

coefficients of F when expressed in the left (right) kinematic basis. Next, we define the cluster

­ 23 ­

length of a web invariant [W ] to be equal to 1/k times the number of external legs of the associated web; this is the same as the degree of [W ] when expressed as a polynomial in G(k, n) Plu¨cker coordinates.
Now the notion that more complicated invariants are associated to more complicated kinematic functions is formalized in the statement that the left (or right) kinematic length of XL([W ]) (or XR([W ])) is equal to the cluster length of [W ]. It is easy to verify that this statement is true by recursion. If p is a non-frozen Plu¨cker coordinate then by definition its cluster length is 1 and the left (or right) kinematic length of XL(p) (or XR(p)) is 1. For more complicated invariants, we note that in all of the recursive definitions (4.6), (4.7), (4.24), (4.27) and (4.28), each side is linear in both kinematic and cluster length; this establishes the equality.

5 Web Series

A web series W is a formal power series of webs W1, W2, . . .

W = 1 + tmWm ,
m=1

(5.1)

to which we associate the invariant

[W] = 1 + tm[Wm] .
m=1

(5.2)

We are interested in web series whose invariants are cluster series of the type reviewed in Sec. 2.2. Once a cluster algebra basis is specified (for example, the one provided by the character formula of [22]), then each such series is (in principle) completely determined by its first nontrivial term W1. Therefore, we are interested to study natural ways to associate an entire web series W(W ) to a single web W , with W1 = W and with the higher-order terms W2, W3, . . . being determined from W in some manner.
One simple way to do this is via the "web thickening" procedure of [23, Definition 10.8]. If W is any web and we take Wm to be the combination of m copies of W , then [Wm] = [W ]m and the web series invariant is geometric:

1+



tm[Wm]

=

1

1 - t[W ]

,

m=1

(5.3)

just like the series (2.7) for cluster variables. According to the FP conjectures, [W ] is a cluster variable precisely when W is an indecomposable arborizable web, so for such W we define the web series W(W ) by the aforementioned thickening procedure.
However if W is a non-arborizable web we seek a different definition of the web series W(W ) because we want its invariant to not be geometric, but rather to evaluate to more complicated rational functions such as (2.4) or (2.6). In Sec. 5.3 we provide such a definition

­ 24 ­

for a class of indecomposable webs that we call almost arborizable--these are non-arborizable webs that can be converted, via skein relations, to tensor diagrams (possibly non-planar) with a single closed inner loop. (For k > 3 we further require every edge of that closed inner loop to be a single line.) We leave for future work the study of web series associated to more complicated non-arborizable webs. In order to connect to the notation used in Sec. 2.2 let us define A(W ) = [W ], the usual web invariant, and now take a short diversion to define a new type of invariant B(W ) that we can associate to certain almost arborizable webs.

5.1 sl3 Almost Arborizable Webs Let W be an almost arborizable sl3 web and let D be the equivalent tensor diagram with exactly one inner loop. We first define B1(W ) and B2(W ) as follows:
· (a) Starting with D, delete all the edges on the loop that go in clockwise order from a white vertex to a black vertex.
· (b) Now all vertices originally on the loop are divalent. Delete those vertices, fusing the two edges at each vertex into a single edge.
· (c) Now we have a new tensor diagram where all inner vertices are trivalent, and all edges connect a black vertex with a white vertex. Define B1(W ) to be the invariant of this diagram.
· (d) Repeat steps (a)­(c) but delete edges that go from white vertices to black vertices in counter-clockwise order. Define B2(W ) to be the invariant of this diagram.
Then define B(W ) = B1(W )B2(W ). As an example let W (1) be our old friend, Fig. 6(a), whose invariant is
A(W (1)) = 145 278 369 - 245 178 369 - 123 456 789 - 129 345 678 . (5.4)
To compute B1(W (1)) we delete the edges shown here as dotted red lines, and then remove the divalent vertices, which gives:

2 1
9
8 7

3

2

1

4 9

5

8

6

7

3 4
5 6

(5.5)

­ 25 ­

Similarly for B2(W (1)) we look at

2 1
9
8 7

3

2

1

4

9

5

8

6

7

3 4
5 6

(5.6)

and so we can read off

B(W (1)) = 123 456 789 345 678 129 .

(5.7)

To see a less trivial example, we move on to n = 10 and consider the web W (2) given by

2 1
10

3 4
5

(5.8)

9

6

87

whose invariant is

A(W (2)) = 3 × 6, 8 × 9, 10 × 1 1 × 2, 4 × 5, 7 × 8 - 1, 2, 3 4, 5, 6 7, 8, 9 1, 8, 10 - 3, 4, 5 6, 7, 8 1, 8, 9 1, 2, 10 . (5.9)
To compute B1(W (2)) we look at

2 1
10
9 8

3 4

2 1

5  10

6 7

9 8

3 4

2 1

5 ==sk=ei=n=r=el=at=io=n= 10

6 7

9 8

3 4
5 (5.10)
6 7

and to compute B2(W (2)) we look at

2 1
10
9 8

3 4

2 1

5  10

6 7

9 8

3 4

2 1

5 ==sk=ei=n=r=el=at=io=n= 10

6 7

9 8

3 4
5 (5.11)
6 7

­ 26 ­

from which we read off

B(W (2)) = 1, 2, 3 4, 5, 6 7, 8, 9 1, 8, 10 1, 2, 10 3, 4, 5 6, 7, 8 1, 8, 9 .

(5.12)

5.2 sl4 Almost Arborizable Webs
Let W be an almost arborizable sl4 web and let D be the equivalent tensor diagram with exactly one inner loop. As mentioned above, require that all edges on the inner loop of D are single lines; this is sufficient to cover all webs we encounter in Sec. 6. In such cases we define B1(W ) and B2(W ) as follows:
· (a) Starting with D, delete all the edges on the loop that go in clockwise order from a white vertex to a black vertex.
· (b) If there were initially e edges on the inner loop, then there are now e/2 pairs of connected trivalent vertices where the loop used to be. For each pair of vertices we add another edge, giving altogether e/2 2-cycles, and then multiply each new 2-cycle by a factor of 1/2.
· (c) Then use the skein relations to cancel each 2-cycle, which removes the factors of 1/2 introduced in the previous step.
· (d) At this stage we have a valid sl4 tensor diagram (all inner vertices are quadrivalent, and all edges connect a black vertex to a white vertex). Define B1 to be the invariant of this diagram.
· (e) Repeat steps (a)­(d) but delete edges that go from white vertices to black vertices in counter-clockwise order. Define B2(W ) to be the invariant obtained in this way.
Then define B(W ) = B1(W )B2(W ). To illustrate these definitions let W (3) be our other friend, Fig. 6(b), whose invariant is

A(W (3)) = 1 2 5 6 3 4 7 8 - 1 2 7 8 3 4 5 6 - 1 2 3 4 5 6 7 8 .

(5.13)

Then to compute B1 we look at

2

1

3

2

1

3

2

1

3

8

4



1 4



8

4 ==sk=ei=n=r=el=at=io=n= 8

4

7

5

6

7

5

6

7

5

6

(5.14)

­ 27 ­

and to compute B2 we look at

2

1

3

2

1

3

2

1

3

8

4



1 4



8

4 ==sk=ei=n=r=el=at=io=n= 8

4

7

5

6

from which we see that

7

5

6

7

5

6

(5.15)

B(W (3)) = 1 2 3 4 5 6 7 8 1 2 7 8 3 4 5 6 .

(5.16)

Note that (5.13) and (5.16) agree with (2.5).

5.3 A Web Series for Almost Arborizable Webs
We now define a web series W(W ) associated to every almost-arborizable web W via a slight modification of the thickening procedure of [23]. Let W be a given almost-arborizable web and let D be a tensor diagram with a single inner loop such that [D] = [W ]. To define the O(t2) term W(2) in the web series we first draw a combination of two copies of D and then connect the two inner loops by twisting any pair of edges. For example, if the inner loop is a hexagon then we take

=

(5.17)

where we suppress the rest of the diagram, showing only the internal loop. The generalization is clear: W(m) is defined by combining m copies of W , cutting one identical edge on each of the m inner loops, and gluing them back together after a (cyclic) "shift-by-one" permutation.
Using skein relations and the definitions given in the previous two subsections, it is easy to see that

[W(2)] = A(W )2 - 2 B(W ) , [W(m)] = A(W ) [W(m-1)] - B(W ) [W(m-2)]

m > 2,

(5.18)

where A(W ) = [W ] is the web invariant we start with and B(W ) = B1(W )B2(W ). Thanks to (5.18), the invariant of the web series W(W ) can be written in the form of (2.6):

[W(W )]

=

1

-

1 - B(W ) t2 A(W ) t + B(W ) t2

.

(5.19)

To summarize: we have shown that there is a natural web series W(W ) one can associate to any almost arborizable web W , and that the invariant of this series evaluates to (5.19) in

­ 28 ­

terms of the usual web invariant A(W ) = [W ] and a second quantity B(W ) that admits a simple diagrammatic definition. (The definition of the web series can be considered to include arborizable webs as a special case for which B(W ) = 0.)
We conjecture that for any almost arborizable W , A(W ) and B(W ) agree with the quantities A and B appearing in the series (2.4) associated (via the character formula of [22]) to the ray R+y, where y is the g-vector of [W ]. It is furthermore natural to speculate that more complicated webs (that are not almost arborizable) are associated to series with higher-order polynomials in their denominators. We leave such questions to future work.
6 Results and Discussion
Now that all the pieces are finally in place we detail the application of our algorithm to the polytopes C(3, n  10), C(3, n  10), C(4, n  8) and C(4, n  9), the definitions of which are reviewed in Sec. A.4. All of these have been constructed or analyzed in the literature, to varying degrees, and by various methods, although only the k = 4 polytopes are of direct relevance to SYM theory. In particular, the cluster variables associated to C(4, 8) and C(4, 8) were determined in [7­9] and the cluster series associated to them were determined in [7]. These prior results serve as checks on the correctness of our methods; however our results for C(3, 10), C(3, 10) and C(4, 9) are genuinely new8.
For each polytope P on the above list, our algorithm (summarized in Fig. 2) proceeds as follows. Let i = 1, 2, . . . index the facets of P, with yi being the generator of the ray normal to facet i9 and Fyi being the associated kinematic function. Our first goal is to assign a web Wi to each facet such that XR(Wi) = Fyi10. A priori it is not guaranteed that it always possible to find such a Wi. In practice, searching for Wi is feasible since for any given Fyi, we only need to scan over a manifestly finite set of sufficiently simple candidate webs--specifically, those whose length (defined in Sec. 4.6) is at most that of Fyi. Actually we can exploit the general relations derived in Sec. 4.5 for considerable simplification: for each facet i we only need to scan up to the length set by the shortest image of i under the Dn dihedral group. In this manner we have found webs associated to all facets of C(3, 10), C(3, 10) and C(4, 9) by scanning webs of length up to 5, 7, and 6, respectively.
The webs Wi we encounter fall into three types:
1. If Wi is arborizable, then (according to the FP conjectures) yi is a g-vector of the G(k, n) cluster algebra and [Wi] is a cluster variable that we associate to facet i. (Equivalently, we associate to facet i the cluster series 1/(1 - t[Wi])).
2. If Wi is almost arborizable, then we can compute A(Wi) and B(Wi) as described in Sec. 5 and the cluster series associated to facet i is (1 - B(Wi) t2)/(1 - A(Wi) t + B(Wi) t2).
8We thank N. Henke for independently corroborating our results for C(4, 9); see [42]. 9This data, which is the "raw input" to our computation, was first computed in [11] for (3, 6) and (3, 7) (see also [43]), [7, 44] for (3, 8), [44] for (3, 9), [7­9, 15, 44] for (4, 8), [45] for (3, 10) and [44] for (4,9). 10We choose XR to match the conventions of [22], following [7].
­ 29 ­

web type:
cluster series type: C(3, 5) = C(3, 5) C(3, 6), C(3, 6) C(3, 7), C(3, 7)
C(3, 8)
C(3, 8) C(3, 9)
C(3, 9) C(3, 10)
C(3, 10) C(4, 6), C(4, 6) C(4, 7), C(4, 7)
C(4, 8)
C(4, 8) C(4, 9)

(1) arborizable (2.7) (i.e., cluster variable)
5 16 42 112 120 327 468 1060 2860 9 42 252 354 3078

(2) almost arborizable
(5.19) 0 0 0 0 0 0 3 0 280 0 0 2 4 324

(3) neither unknown
0 0 0 0 0 0 0 0 0 0 0 0 0 27

Table 3: The number of facets of types (1), (2) and (3) (defined in the text) for various polytopes. Note that the facets of C(k, n) are always (by construction) a subset of those of
C(k, n). The set of facets associated to each polytope is closed under the action of the Zn cyclic group, and for the C polytopes they are closed under the full Dn dihedral group as well as under parity (see Appendix A of [1] for a discussion of parity symmetry.)

3. In other cases we don't yet know how to associate a web series to Wi, although we conjecture that there exists a natural way to do so; the cluster series associated to these facets may have polynomials of degree higher than 2 in their denominators.
We summarize the number of facets of each type for various polytopes in Tab. 3. We also include ancillary files that list, for each of these polytopes, the kinematic function Fyi and web invariant [Wi] associated to each facet. For each almost arborizable web we also include the A and B invariants appearing in the associated series (5.19).
A few important comments about our algorithm are in order. First of all, we cannot exclude in generality the possibility that there might exist two webs W1, W2 with [W1] = [W2] that have the same image XR(W1) = XR(W2) = F . If this were to happen for a kinematic function F associated to some facet of a polytope of interest, then we would not know which web to assign to that facet. However, we have not encountered such a situation as far as we have computed: for given F , we have always found there is (up to skein relations, of course) precisely one web W such that XR(W ) = F (among all possible webs below the maximum lengths we have checked).

­ 30 ­

Second, we must of course mention the possibility that the FP conjectures could be wrong for (k, n) = (3, 10) or (4, 9). Then we would have to worry that there could be some web W and some non-web D such that (1) XR(W ) = XR(D) = F and (2) [D] is a cluster variable but [W ] is not. In such a case our algorithm would suggest associating W to the facet F , when it might be more appropriate to associate D instead. The fact that we have not encountered any apparent inconsistency in our calculations for C(4, 9), which furthermore are corroborated by the independent work of [42], suggests that such worries may be postponed to higher (k, n), if not indefinitely.
Next let us comment on a few interesting features of our results. First of all we note that while C(3, n) has facets associated to non-arborizable webs for n = 9, 10 (and, presumably, for all n  9), these are absent from the C(3, n) polytopes that we have studied: all facets of C(3, n  10) are associated to cluster variables. It would be interesting to see if this continues to hold for higher n.
The 3 non-arborizable webs associated to C(3, 9) are the three cyclic images of Fig. 6(a) and the 4 non-arborizable webs associated to C(4, 8) are the four cyclic images of Fig. 6(b). Out of the 324 almost arborizable webs associated to C(4, 9), 315 have an inner quadrilateral loop and 9 have an inner hexagon. The latter are the cyclic images of

2 1
9
8 7

3

2

1

4

=9

5

8

6

7

3 4 , 5
6

(6.1)

which are skein equivalent. The figure on the left is a web with many inner loops which is almost arborizable, as apparent by the skein-equivalent figure on the right where the inner hexagon is highlighted in red.
The 27 webs of type (3) listed for C(4, 9) fall into three cyclic classes. Instead of drawing the (very complicated) webs, we display here a 2-loop non-planar tensor diagram for one representative of each cyclic class:

2 1
9
8 7

3 4
5 6

2 1
9
8 7

3 4
5 6

2 1
9
8 7

3 4
5 6

(6.2)

where we highlight the two loops in color. Each of these is skein-equivalent to a valid web (that means, with no 2-cycles or triple edges; see footnote 7).

­ 31 ­

As already noted above, it would be very interesting to find a natural web series to associate to these more complicated webs; the corresponding invariants might evaluate to rational functions with higher (than quadratic) order polynomials in their denominators. It is interesting to note that the approaches of [8, 10] also seem to encounter some difficulty when passing from G(4, 8) to G(4, 9), for essentially the same reason: Whereas the G(4, 8) cluster algebra has finite mutation type [46], and all exceptional rays can be asymptotically approached by repeated mutation on some quiver containing an A1,1 subalgebra, G(4, 9) does not have finite mutation type and has arbitrarily complicated quivers. It would be interesting to more precisely understand how (if at all) this fact relates to webs of the type shown in (6.2).

Acknowledgments
We are grateful to N. Arkani-Hamed, S. He, N. Henke, A. Herderschee, T. Lam, J. Mago, G. Papathanasiou, A. Schreiber and A. Yelleshpur Srikant for encouraging discussions, correspondence, and collaboration on closely related work. This work was supported in part by the US Department of Energy under contract DE-SC0010010 Task A and by Simons Investigator Award #376208 (AV).

A Conventions

A.1 Web Variables We begin by reviewing the web variables of [11]. First consider the k × n web matrix

1k×k W

(A.1)

where W is the k × (n-k) matrix constructed as follows. Draw a (k-1)× (n-k-1) array with faces labeled by web variables x1 through xd (reading down each column, from left to right). Label the horizontal lines 1, . . . , k from top to bottom and the vertical lines k + 1, . . . , n from left to right. Give each horizontal edge a rightward orientation and each vertical edge an upward orientation. To each path p through the diagram we associate the product of all web variables above p, which we denote by p(x). Then the i, j element of W is given by

Wij = (-1)k-i

p(x) .

p:ij+k

For example, for k = 3 the array looks like

(A.2)

456

n-1 n

>>> >>> >>> >>> >>>

3> > >
x1 x3 2> > >
x2 x4 1> > >

··· >

···

x2n-9

>

···

x2n-8

>

­ 32 ­

from which we can read off the G(3, n) web matrix

 100

1

1+x1+x1x2 1+x1+x1x2+x1x3+x1x2x3+x1x2x3x4 · · · 

 0 1 0 -1 

-1-x1

-1-x1-x1x3

· · ·  . (A.3) 

001 1

1

1

···

The web matrix associated to G(k, n) provides a parameterization of G+(k, n)/T as the d web variables range over Rd>0, and (importantly for our purposes) the web variables are precisely the cluster X -coordinates associated to the initial seed of G(k, n) shown in Fig. 7. Specifically: when evaluated on the web matrix (A.1), the cluster X -coordinate (see Sec. A.3) attached to any mutable node of the initial quiver is equal to the web variable x that appears in the same position of the web array described above.
a0,0

a1,1

a1,2

...

a1,l-1

a1,l

a2,1

a2,2

...

a2,l-1

a2,l

...

...

...

...

...

ak,1

ak,2

...

ak,l-1

ak,l

Figure 7: Initial seed for the G(k, n) cluster algebra [47, 48], where l = n-k and ax,y denotes the Plu¨cker coordinate 1, . . . , k-x, k+y-x+1, . . . , k+y . The arrows here are reversed (and the figure is transposed) with respect to that used in [22]; see the discussion in Sec. A.5.

A.2 Kinematic Space and Kinematic Functions

Next we review the planar kinematic variables first employed for k = 2 in the construction

of [34]. We introduce

n k

(generalized) Mandelstam variables [13] si1,i2,...,ik , fully symmetric

in all indices, subject to the "on-shell" condition si,i,... = 0 and the "momentum conservation"

condition

si1,i2,··· ,ik = 0 i1 .
{i2,··· ,ik}{1,··· ,n}\{i1}

(A.4)

The resulting

n k

- n-dimensional space spanned by these variables is called the kinematic

space Kk,n.

­ 33 ­

Since the Mandelstam variables are not linearly independent, our next step is to define a particular basis for Kk,n [12]. To that end we consider

Rk,n =

i1, i2, . . . , ik si1,i2,...,ik

1i1 <i2 <···<ik n

(A.5)

where  is a positive constant that is irrelevant for our purposes. Note that thanks to (A.4),

Rk,n is invariant under the torus action that rescales each Zia independently, and therefore is well-defined on G(k, n)/T .

Something remarkable happens when Rk,n is evaluated on the G(k, n) web matrix. The

n k

minors fall into two categories. First, there are n + d trivial minors that evaluate to 1 or

to monomials in web variables; these include the n frozen variables

1, 2, . . . , k , 2, 3, . . . , k+1 , . . . , 1, 2, . . . , k-1, n

(A.6)

as well as the d non-frozen variables of the form

1, 2, . . . , j, l, l+1, . . . l+k-j-1 1  k, j + 1  l  n - (k - j - 1) .

(A.7)

Each of the remaining

n k

- n - d minors

I

factors into a monomial in web variables times

a single polynomial PI (x) that is unique to each minor. Moreover, each of these polynomials

is subtraction free and has constant term 1. By collecting all of the overall monomials from

both the trivial and non-trivial minors, we can rewrite [12]

d
Rn,k(x1, . . . , xd) = xaXa

PI (x)-cI ,

a=1

I

(A.8)

where the product runs over all non-trivial minors, the power of each overall xa is  times

some linear combination of Mandelstam variables that we denote Xa, and we set sI = -cI .

Altogether the total number of Xa and cI variables is

n k

- n, and they provide the desired

basis for Kk,n.

Here we explain the kinematic functions that first appeared in Sec. 2.1. We associate

to any point y = (y1, . . . , yd) in the integer lattice Zd the function Fy on kinematic space

defined by

Fy

=

1 

Res
=0

d log Rk,n(-y1 , . . . , -yd ) .

(A.9)

The properties of Rn,k ensure that Fy is always an integer linear combination of the Xa and cI . In fact the coefficient of Xa is just ya, so we have

y = -(X1 Fy, . . . , Xd Fy) .

(A.10)

Using (A.9) and (A.10) we can pass back and forth between y and Fy at ease. The two horizontal arrows at the top of Fig. 2 apply this correspondence to the case when y is taken to be the generator y of an outward-pointing normal ray to a G(k, n)-polytope.

­ 34 ­

For example, for G(3, 5) a simple calculation reveals that

R3,5(x1, x2) = x1 X1 x2 X2 (1 + x1)-c135 (1 + x2)-c245 (1 + x1 + x1x2)-c235

(A.11)

where X1 = s123 and X2 = s345, and it is also easy to check that (A.9) computes the first column of Tab. 1 from the data given in the second column.
Note it is manifest (by homogeneity) that Fmy = mFy for any non-negative integer m. This bears resemblance to the statement about cluster algebra bases that B(my) = B(y)m, but the former holds for any lattice point y while the latter holds only if y is inside the cluster fan.

A.3 g-Vectors
Next we review the vertical arrows on the right side of Fig. 2. We order the d + n cluster variables (A-coordinates) appearing in the initial quiver (Fig. 7) a1, a2, . . . , ad+n, first reading the mutable variables down each column from left to right, and then the frozen variables counterclockwise starting from a0,0. Next recall that the associated exchange matrix is given by Bij = (#arrows i  j) - (#arrows j  i) where i, j run over the nodes, and the cluster X -coordinate associated to node i is related to the A-coordinates of its neighbors by xi = j aBj ji .
To any monomial i agi i we associate the vector of powers g = (g1, . . . , gd+n). We introduce a partial order on such vectors by saying that g g iff g - g is a non-negative linear combination of the first d columns of B (the columns corresponding to mutable nodes). If a is a sum of monomials in the ai we define the g-vector of a to be that of the term whose g-vector is largest with respect to (if such a term exists). It is always sufficient to truncate g to its first d components. If a is a cluster variable of G(k, n), then the g-vector of a exists and it is said to be a g-vector of the cluster algebra.
We have therefore explained the upward pointing arrow in Fig. 2. For example, for G(3, 5) we have

BT =

0 -1 1 0 0 1 -1 1 0 0 -1 1 -1 0

,

(A.12)

the initial cluster variables (given in the caption) are

(a1, . . . , a7) = ( 1 2 4 , 1 3 4 , 1 2 3 , 2 3 4 , 3 4 5 , 1 4 5 , 1 2 5 ) ,

and the remaining three cluster variables are given in terms of these by

235

=

a3a5 a2

+

a3a4a6 a1a2

+

a4a7 a1

,

245

=

a1a5 a2

+

a4a6 a2

,

135

=

a3a6 a1

+

a2a7 a1

.

(A.13) (A.14)

­ 35 ­

Here we have written the terms in each sum in increasing order with respect to so it is easy to read off, from the last term in each line, the g-vectors (-1, 0), (0, -1) and (-1, 1), as shown in Tab. 1.
Going the other way, down the dotted arrow in Fig. 2 to compute the cluster variable (or more general basis element) associated to a given lattice vector x, is not so simple. In practice one often resorts to a computer search by repeatedly mutating away from the initial seed until one has the fortune to chance upon a cluster variable whose g-vector is x. Of course for infinite algebras this algorithm may take an indefinite amount of time. Even worse, x may lie outside the cluster fan in which case one will never find a match.
One alternative, suggested in [7], is to read Corollary 7.3 of [22] as providing an explicit formula for an element of the canonical basis [38] associated to every g that agrees with the usual cluster algebraic definition when g lies inside the cluster fan. Although the required computation is manifestly finite for any g, its enormous computational complexity makes it impractical in many cases of interest.
A.4 G(k, n)-Polytopes
Before ending this section, we are finally in a position to review the construction of the G(k, n)polytopes of interest, which generalize the well-known Stasheff polytope [32, 33] building on a construction introduced in [34]. These polytopes lie in the d-dimensional subspace Hk,n of Kk,n obtained by setting all of the cI to positive constants. Here we see that the purpose of defining X1, . . . , Xd in the previous subsection is that we can take these as coordinates on Hk,n.
The polytope called C(k, n) in [7] (called P(k, n) or dual Trop G(k, n) in some other references) is defined by taking the Minkowski sum of the Newton polytopes (with respect to x1, . . . , xd) associated to the polynomials PI appearing in (A.8). Other polytopes can be constructed by only including proper subsets of the PI in the Minkowski sum. For example, of particular interest is the polytope called C(4, n) in [7] (also studied in [8, 9]). It is defined as the polytope obtained by including only polynomials associated to I 's of the form i i+1 j j+1 or i-1 i i+1 j , and may be obtained from C(4, n) by setting to zero all cI except those corresponding to these I's. Here we define C(3, n) to be the polytope obtained by keeping only I 's of the form i i+1 j .
More general polytopes of the same basic type can be constructed by including other proper subsets of the PI in the Minkowski sum, or by including polynomials obtained by evaluating more complicated G(k, n) cluster variables on the web matrix. An example of the latter was considered in [8].
A.5 Langlands Dual Conventions
Because our work touches on a wide range of previous work in the physics and math literature, we find it helpful to clearly connect to two different choices of convention that are related to each other by what could be called "Langlands duality." By this we mean performing the following compatible set of changes:
­ 36 ­

X2 c235 + c245
c235

c135

c135 +c235 X1

Figure 8: The polytope C(3, 5) according to the "right" conventions; see Tab. 4 and contrast with Fig. 1.

kinematic function
s123 = c135 + c235 - X1 s345 = c235 + c245 - X2
s125 = X1 s234 = X2 s145 = c135 - X1 + X2

generator
(1, 0) (0, 1) (-1, 0) (0, -1) (1, -1)

cluster variable
124 134 135 235 245

Table 4: The correspondence between kinematic functions, generators, and cluster variables for the C(3, 5) polytope according to the "right" conventions, shown in Fig. 8, in contrast to Tab. 1 which shows the correspondence for the "left" conventions.

1. inverting each xi  1/xi in the web parameterization of Sec. A.1,
2. reversing each arrow in Fig. 7,
3. and, correspondingly, changing the sign of the B-matrix with respect to which g-vectors are computed as described in Sec. A.3.
The conventions outlined in Sec. A.1 through Sec. A.3 correspond to what we call the "left" convention starting in Sec. 4. To illustrate the different conventions we present in Tab. 4 the "right" convention version of the G(3, 5) data from Tab. 1. Note that the form of the equations (A.14) is the same for both choices, and while the "left" g-vectors shown in Tab. 1 can be read off from the last term in each line, we can similarly read off the "right" g-vectors (shown in Tab. 4) from the first term on each line. We explain a general relation between the two conventions, at the level of our X-map applied to general tensor diagrams, in Sec. 4.5.

­ 37 ­

1

2

6

3

5

4

1234

1

2

3

7

4 6
5 1(23)(45)(67)

2

1

3

8

4

7

5

6

45(678)(123)

2

1

3

8

4

7

5

6 (123), (345), (567), (781)

23 1
4
9
5 8
76 1, 2, (34)  (567), (567)  (89)

Figure 9: Examples of webs, and their corresponding invariants (cluster variables), for the five different basic types (defined in the text) of rational symbol letters that are known to appear in SYM theory.

B Summary of Known Symbol Letters
Here we summarize what is known about the symbol alphabet Sn of n-particle amplitudes in SYM theory. In this discussion we of course restrict our attention to those amplitudes which are of polylogarithmic type, and so have conventionally-defined symbols.
Let us begin with the rational letters. All currently known rational letters are cluster coordinates of G(4, n), which (according to the FP conjectures) means that we can represent them as arborizable webs. It expected that the n-particle symbol alphabet is a strict subset of the n-particle symbol alphabet for all n > n, which corresponds to the fact that we can always make a valid n-particle web by adding n-n boundary vertices, with no edges attached, to an n-particle web. Therefore it is convenient to categorize different types of symbol letters according to the smallest value of n at which they first appear; we also categorize them by Plu¨cker degree. In this way we encounter five basic types of rational letters for n  9:
(1) Sn6 contains the Plu¨cker coordinates of the form 1 2 a b for 3  a < b  n, and their cyclic images. (For n < 8 all Plu¨cker coordinates are of this type.)
(2) Sn7 contains letters that are quadratic in Plu¨cker coordinates having the form a(b c)(d e)(f g) := a b d e a c f g - a b f g a c d e . Specifically, S7 contains the 14 nonPlu¨cker cluster variables of G(4, 7): 1(23)(45)(67) , 1(72)(34)(56) and their cyclic images. The letters of this type for n = 8, 9 are listed in [24, 61].
(3) Sn8 contains additional quadratic letters having the form (3.5); specifically 12(abc) (def ) for 3  a < b < c < d < e < f  n and their cyclic images.

­ 38 ­

n (1) (2) (3) (4) (5)

References

6 15 0 0 0 0

[2, 4, 49­53]

7 35 14 0 0 0

[49, 54­58]

8 68 88 8 16 0 [49, 55, 59­61]

9 117 270 63 72 9 [24, 49, 55, 59, 60]

Table 5: Enumeration of rational symbol letters of n-particle amplitudes in SYM, based on the results of all explicit computations available to date, and categorized according to the five types defined in the text. The lines n = 6, 7 are believed to be complete (see [19]), comprising the 15 and 49 cluster variables of G(4, 6) and G(4, 7), respectively. For n > 7 the counts may grow as computations are pushed to higher order in the future; additional types of rational letters may also appear.

(4) Sn8 also contains certain cubic letters listed for n = 8, 9 in [24, 61]. (5) For n  9 Sn contains a second type of cubic letter; see [24]. In Tab. 5 we tabulate the number of cluster variables of each type that appear in the n  9-particle amplitudes whose symbols have been explicitly computed to date. For n  8 the numbers are expected to grow as higher-loop calculations are carried out, and there is no reason to expect that more complicated types will not be encountered. However, some evidence suggests that for every fixed value of n, the total number of symbol letters (at arbitrary finite order in perturbation theory) might be finite [19] (unlike the number of cluster variables, which is infinite). Next we turn to the algebraic letters that are known to start appearing in Sn for n  8. The two-loop NMHV amplitudes have 18, 99 multiplicatively independent algebraic letters respectively for n = 8, 9 [24, 61]. As reviewed in Tab. 2, these respectively involve 2,9 distinct square roots of Plu¨cker polynomials; all are of four-mass box type, having the form A2 - 4B in terms of (2.5), or cyclic images thereof. In our approach, as we found in Sec. 5, each of these arises from a web series associated to (a cyclic image of) the almost arborizable web shown in Fig. 6(b) (or, for n = 9, the same web but with a ninth boundary point added anywhere in the diagram).

C Some Notation for Kinematic Functions

In this appendix we collect some notation, originally introduced in [45], to efficiently encode certain kinematic functions. If A is a subset of {1, . . . , n}, we define

SA =

sa1a2a3 .

a1 <a2 <a3 A

(C.1)

­ 39 ­

If A, B are two subsets, then we define

SA(B) = S(B)A = SA + S(B) + SA|B where SA|B =

sa1 a2 b

a1 <a2 A,bB

(C.2)

and, on the right-hand side, (B) means the complement of B in {1, . . . , n}. For k = 4 we require some additional notation. If A, B and C are subsets of {1, . . . , n}
then we define

SA[B(C)] = S[(C)B]A = SA + S[B(C)] +

sa1a2a3i +

sa1a2b1b2 +

sa1 a2 bc

a1 <a2 <a3 A iBC

a1 <a2 A b1 <b2 B

a1 ,a2 A bB,cC

(C.3)

where

S[B(C)] = S[B] + S(C) +

sb1b2ci +

sb1b2b3c +

sb1 b2 c1 c2

b1 <b2 B cC,i/BC

b1 <b2 <b3 B cC

b1 <b2 B c1<c2C

and

SA =

sa1a2a3a4 ,

a1 <a2 <a3 <a4 A

S[B] =

2sb1b2b3b4 +

sb1b2b3i ,

b1 <b2 <b3 <b4 B

b1 <b2 <b3 B i/B

S(C) =

3sc1c2c3c4 +

2sc1c2c3i +

sc1c2ij .

c1<c2<c3<c4C

c1<c2<c3C i/C

c1<c2C i,j/C

(C.4) (C.5)

References
[1] J. Golden, A.B. Goncharov, M. Spradlin, C. Vergu and A. Volovich, Motivic Amplitudes and Cluster Coordinates, JHEP 01 (2014) 091 [1305.1617].
[2] A.B. Goncharov, M. Spradlin, C. Vergu and A. Volovich, Classical Polylogarithms for Amplitudes and Wilson Loops, Phys. Rev. Lett. 105 (2010) 151605 [1006.5703].
[3] S. Fomin and A. Zelevinsky, Cluster algebras i: foundations, Journal of the American Mathematical Society 15 (2002) 497 [math/0104151].
[4] S. Caron-Huot, L.J. Dixon, J.M. Drummond, F. Dulat, J. Foster, O. Gu¨rdogan et al., The Steinmann Cluster Bootstrap for N = 4 Super Yang-Mills Amplitudes, PoS CORFU2019 (2020) 003 [2005.06735].
[5] D. Chicherin, J.M. Henn and G. Papathanasiou, Cluster algebras for Feynman integrals, Phys. Rev. Lett. 126 (2021) 091603 [2012.12285].
[6] S. He, Z. Li and Q. Yang, Notes on cluster algebras and some all-loop Feynman integrals, 2103.02796.

­ 40 ­

[7] N. Arkani-Hamed, T. Lam and M. Spradlin, Non-perturbative geometries for planar N = 4 SYM amplitudes, JHEP 03 (2021) 065 [1912.08222].
[8] J. Drummond, J. Foster, O. Gu¨rdogan and C. Kalousios, Algebraic singularities of scattering amplitudes from tropical geometry, JHEP 04 (2021) 002 [1912.08217].
[9] N. Henke and G. Papathanasiou, How tropical are seven- and eight-particle amplitudes?, JHEP 08 (2020) 005 [1912.08254].
[10] A. Herderschee, Algebraic branch points at all loop orders from positive kinematics and wall crossing, 2102.03611.
[11] D. Speyer and L. Williams, The tropical totally positive grassmannian, Journal of Algebraic Combinatorics 22 (2005) 189 [math/0312297].
[12] N. Arkani-Hamed, S. He and T. Lam, Stringy canonical forms, JHEP 02 (2021) 069 [1912.08707].
[13] F. Cachazo, N. Early, A. Guevara and S. Mizera, Scattering Equations: From Projective Spaces to Tropical Grassmannians, JHEP 06 (2019) 039 [1903.08904].
[14] F. Cachazo and J.M. Rojas, Notes on Biadjoint Amplitudes, Trop G(3, 7) and X(3, 7) Scattering Equations, JHEP 04 (2020) 176 [1906.05979].
[15] J. Drummond, J. Foster, O. Gu¨rdogan and C. Kalousios, Tropical Grassmannians, cluster algebras and scattering amplitudes, JHEP 04 (2020) 146 [1907.01053].
[16] F. Cachazo and N. Early, Minimal Kinematics: An all k and n peek into Trop+G(k, n), 2003.07958.
[17] S. Fomin and A. Zelevinsky, Y-systems and generalized associahedra, Annals of Mathematics 158 (2003) 977 [hep-th/0111053].
[18] J. Drummond, J. Foster, O. Gu¨rdogan and C. Kalousios, Tropical fans, scattering equations and amplitudes, 2002.04624.
[19] I. Prlina, M. Spradlin and S. Stanojevic, All-loop singularities of scattering amplitudes in massless planar theories, Phys. Rev. Lett. 121 (2018) 081601 [1805.11617].
[20] S. Caron-Huot and K.J. Larsen, Uniqueness of two-loop master contours, JHEP 10 (2012) 026 [1205.0801].
[21] J.L. Bourjaily, A.J. McLeod, M. Spradlin, M. von Hippel and M. Wilhelm, Elliptic Double-Box Integrals: Massless Scattering Amplitudes beyond Polylogarithms, Phys. Rev. Lett. 120 (2018) 121603 [1712.02785].
[22] W. Chang, B. Duan, C. Fraser and J.-R. Li, Quantum affine algebras and grassmannians, Mathematische Zeitschrift 296 (2020) 1539 [1907.13575].
[23] S. Fomin and P. Pylyavskyy, Tensor diagrams and cluster algebras, Advances in Mathematics 300 (2016) 717 [1210.1888].
[24] S. He, Z. Li and C. Zhang, The symbol and alphabet of two-loop NMHV amplitudes from Q¯ equations, JHEP 03 (2021) 278 [2009.11471].
[25] J. Mago, A. Schreiber, M. Spradlin and A. Volovich, Symbol alphabets from plabic graphs, JHEP 10 (2020) 128 [2007.00646].
­ 41 ­

[26] S. He and Z. Li, A note on letters of Yangian invariants, JHEP 02 (2021) 155 [2007.01574]. [27] J. Mago, A. Schreiber, M. Spradlin, A. Yelleshpur Srikant and A. Volovich, Symbol alphabets
from plabic graphs II: rational letters, JHEP 04 (2021) 056 [2012.15812]. [28] J. Mago, A. Schreiber, M. Spradlin, A. Yelleshpur Srikant and A. Volovich, to appear (2021)
[yymm.nnnnn]. [29] A. Postnikov, Total positivity, grassmannians, and networks, math/0609764. [30] N. Arkani-Hamed, J.L. Bourjaily, F. Cachazo, A.B. Goncharov, A. Postnikov and J. Trnka,
Grassmannian Geometry of Scattering Amplitudes, Cambridge University Press (4, 2016), 10.1017/CBO9781316091548, [1212.5605]. [31] C. Fraser, T. Lam and I. Le, From dimers to webs, Transactions of the American Mathematical Society 371 (2019) 6087 [1705.09424]. [32] J.D. Stasheff, Homotopy associativity of h-spaces. i, Transactions of the American Mathematical Society 108 (1963) 275. [33] J.D. Stasheff, Homotopy associativity of h-spaces. ii, Transactions of the American Mathematical Society 108 (1963) 293. [34] N. Arkani-Hamed, Y. Bai, S. He and G. Yan, Scattering Forms and the Positive Geometry of Kinematics, Color and the Worldsheet, JHEP 05 (2018) 096 [1711.09102]. [35] S. Fomin and A. Zelevinsky, Cluster algebras iv: coefficients, Compositio Mathematica 143 (2007) 112 [math/0602259]. [36] J.S. Scott, Grassmannians and cluster algebras, Proceedings of the London Mathematical Society 92 (2006) 345. [37] C. Fraser, Braid group symmetries of grassmannian cluster algebras, Selecta Mathematica 26 (2020) 1 [1702.00385]. [38] G. Lusztig, Canonical bases arising from quantized enveloping algebras, Journal of the American Mathematical Society 3 (1990) 447. [39] S. Cautis, J. Kamnitzer and S. Morrison, Webs and quantum skew howe duality, Mathematische Annalen 360 (2014) 351 [1210.6437]. [40] G. Kuperberg, Spiders for rank 2 lie algebras, Communications in mathematical physics 180 (1996) 109 [q-alg/9712003]. [41] D. Kim, Graphical calculus on representations of quantum lie algebras, math/0310143. [42] N. Henke and G. Papathanasiou, Singularities of eight- and nine-particle amplitudes from cluster algebras and tropical geometry, to appear (2021) [yymm.nnnnn]. [43] S. Herrmann, A. Jensen, M. Joswig and B. Sturmfels, How to draw tropical planes, 0808.2383. [44] F. Cachazo, A. Guevara, B. Umbert and Y. Zhang, Planar Matrices and Arrays of Feynman Diagrams, 1912.09422. [45] S. He, L. Ren and Y. Zhang, Notes on polytopes, amplitudes and boundary configurations for Grassmannian string integrals, JHEP 04 (2020) 140 [2001.09603]. [46] A. Felikson, M. Shapiro and P. Tumarkin, Skew-symmetric cluster algebras of finite mutation type, Journal of the European Mathematical Society 14 (2012) 1135 [0811.1703].
­ 42 ­

[47] M. Gekhtman, M. Shapiro and A. Vainshtein, Cluster algebras and Poisson geometry, no. 167, American Mathematical Soc. (2010), [math/0208033].
[48] B. Keller, Cluster algebras, quiver representations and triangulated categories, 0807.1960. [49] Z. Bern, L.J. Dixon, D.C. Dunbar and D.A. Kosower, One loop n point gauge theory
amplitudes, unitarity and collinear limits, Nucl. Phys. B 425 (1994) 217 [hep-ph/9403226]. [50] Z. Bern, L.J. Dixon, D.C. Dunbar and D.A. Kosower, Fusing gauge theory tree amplitudes into
loop amplitudes, Nucl. Phys. B 435 (1995) 59 [hep-ph/9409265]. [51] L.J. Dixon, J.M. Drummond and J.M. Henn, Bootstrapping the three-loop hexagon,
JHEP 11 (2011) 023 [1108.4461]. [52] L.J. Dixon, J.M. Drummond and J.M. Henn, Analytic result for the two-loop six-point NMHV
amplitude in N=4 super Yang-Mills theory, JHEP 01 (2012) 024 [1111.1704]. [53] S. Caron-Huot and S. He, Jumpstarting the All-Loop S-Matrix of Planar N=4 Super
Yang-Mills, JHEP 07 (2012) 174 [1112.1060]. [54] Z. Bern, V. Del Duca, L.J. Dixon and D.A. Kosower, All non-maximally-helicity-violating
one-loop seven-gluon amplitudes in N=4 super-yang-Mills theory, Phys. Rev. D 71 (2005) 045006 [hep-th/0410224]. [55] S. Caron-Huot, Superconformal symmetry and two-loop amplitudes in planar N=4 super Yang-Mills, JHEP 12 (2011) 066 [1105.5606]. [56] J.M. Drummond, G. Papathanasiou and M. Spradlin, A Symbol of Uniqueness: The Cluster Bootstrap for the 3-Loop MHV Heptagon, JHEP 03 (2015) 072 [1412.3763]. [57] L.J. Dixon, J. Drummond, T. Harrington, A.J. McLeod, G. Papathanasiou and M. Spradlin, Heptagons from the Steinmann Cluster Bootstrap, JHEP 02 (2017) 137 [1612.08976]. [58] J. Drummond, J. Foster, O. Gu¨rdogan and G. Papathanasiou, Cluster adjacency and the four-loop NMHV heptagon, JHEP 03 (2019) 087 [1812.04640]. [59] R. Britto, F. Cachazo and B. Feng, Generalized unitarity and one-loop amplitudes in N=4 super-Yang-Mills, Nucl. Phys. B 725 (2005) 275 [hep-th/0412103]. [60] Z. Bern, L.J. Dixon and D.A. Kosower, All Next-to-maximally-helicity-violating one-loop gluon amplitudes in N=4 super-Yang-Mills theory, Phys. Rev. D 72 (2005) 045014 [hep-th/0412210]. [61] S. He, Z. Li and C. Zhang, Two-loop Octagons, Algebraic Letters and Q¯ Equations, Phys. Rev. D 101 (2020) 061701 [1911.01290].
­ 43 ­

