A robust controller for stable 3D pinching using tactile sensing

Efi Psomopoulou, Nicholas Pestell, Fotios Papadopoulos, John Lloyd, Zoe Doulgeri, Nathan F. Lepora

arXiv:2106.01110v1 [cs.RO] 2 Jun 2021

Abstract-- This paper proposes a controller for stable grasping of unknown-shaped objects by two robotic fingers with tactile fingertips. The grasp is stabilised by rolling the fingertips on the contact surface and applying a desired grasping force to reach an equilibrium state. The validation is both in simulation and on a fully-actuated robot hand (the Shadow Modular Grasper) fitted with custom-built optical tactile sensors (based on the BRL TacTip). The controller requires the orientations of the contact surfaces, which are estimated by regressing a deep convolutional neural network over the tactile images. Overall, the grasp system is demonstrated to achieve stable equilibrium poses on a range of objects varying in shape and softness, with the system being robust to perturbations and measurement errors. This approach also has promise to extend beyond grasping to stable in-hand object manipulation with multiple fingers.

I. INTRODUCTION
Achieving human-like dexterity with robot hands has been a major goal of robotics for many years. Various novel robot hands have been built, often focusing on their morphology to resemble the human hand and imitate its functionality with use of soft materials and underactuation [1]­[4]. However, our understanding of how signals interact between the brain, the sensory system and the fingers is still limited. Several review papers summarizing progress on multi-finger robot grasping and dexterous object manipulation have been published in the last decade [5], [6]. A central message is that it remains a challenge to combine all of the mechanical and tactile sensing components necessary to achieve the performance of the human hand with robots.
Although robotic hands with integrated soft tactile sensors are becoming more common, almost all of the research focuses on object recognition, slip detection and grasp success prediction [7]­[9], with little work on applying tactile sensing to achieve or improve grasp stability. However, grasp stability and manipulation dexterity would appear to be closely connected to the rolling ability of the human fingertips, which allows for fine adjustment of the contact positions with an object [10], [11]. Therefore, being able to robustly control fingertip rolling via proprioceptive and tactile feedback could bridge the gap between human and
This work was supported by a Leverhulme Leadership Award on an "A biomimetic forebrain for robot touch" (RL-2016-39). (Corresponding author: Efi Psomopoulou.)
EP, NP, JL and NFL are with the Department of Engineering Mathematics and Bristol Robotics Laboratory, University of Bristol, Bristol BS8 1QU, U.K. (e-mail: efi.psomopoulou@bristol.ac.uk; n.pestell@bristol.ac.uk; jl15313@bristol.ac.uk; n.lepora@bristol.ac.uk).
FP is with the Shadow Robotics Company, London NW5 1LP, U.K. (email: fotios@shadowrobot.com).
ZD is with the Department of Electrical and Computer Engineering, Aristotle University of Thessaloniki, 54124 Thessaloniki, Greece. (e-mail: doulgeri@ece.auth.gr).

Fig. 1: The Shadow Modular Grasper, with two tactile fingertips, stably grasping a brain-shaped stress toy. The controller has rolled the fingertips so that the two lines connecting the fingertips and the contact points are parallel. Tactile images from the two fingertips are also shown.
robot grasping/manipulation in unstructured and unknown environments.
The present work makes progress in this direction by proposing and implementing a control law that makes use of tactile feedback to roll the fingertips of two robotic fingers on an object's surface into a stable grasp. We focus on the grasp itself, assuming that the robot hand has already reached the object in a ready-to-grasp configuration. Our previous work focused on the planar case where no tactile sensing was needed [12]. Here we extend the controller to 3D where tactile information is necessary to achieve grasp stability. The proposed control law allows pinching of an arbitrary-shaped object, using tactile information about the contact orientation to attain a stable equilibrium state by fingertip-rolling motions. No knowledge of the system dynamics is needed nor any trajectory planning performed for the finger movement. A preset desired grasping force is further achieved and the control law can be extended to achieve in-hand manipulation using touch.
The main contributions of this work concern a robust controller for stable pinch grasping using tactile sensing: 1) We implement a low-complexity controller that robustly achieves grasp stability with two fingers, using only proprioceptive and contact information from tactile sensing. 2) The controller is validated by both simulations and experiments on novel objects with a fully-actuated hand (Shadow

Modular Grasper) with custom tactile-sensing fingertips. 3) We show that the system dynamically achieves an equilibrium with a pre-set grasping force from varied initial configurations, assuming it is reachable by a rolling motion.
II. BACKGROUND AND RELATED WORK
Early research work on grasp control has focused on detailed grasp analysis and planning of form and force closure grasps involving the accurate planning of fixed contact locations and contact forces [13]­[15]. More recently, the availability of grasp planning simulators has helped datadriven methods become popular. These approaches rely on sampling grasp candidates from some knowledge base and ranking them according to a specified metric [16], [17]. All the above approaches are characterized by static analysis.
Although force closure implies the existence of an equilibrium, this is not sufficient for ensuring grasp stability [13]. The need for further study of grasp dynamics and the development of analytical models that better resemble reality is identified in Bohg et al. [5]. One way to work towards this is to design model-free grasp controllers that dynamically achieve a stable grasp equilibrium state. Previous research work in this direction includes feedback control laws of low complexity based on rolling contacts [11], [18].
Grasp control needs state information about the contact, which is provided by tactile sensing at the fingertips. There has been much work on tactile sensing in robot hands using capacitive sensors, tactile skin, BioTac sensors, barometric sensors [19]­[21] or optical tactile sensors, such as the GelSight [22] and the BRL TacTip [23]. This work focusses on the TacTip because it has been integrated recently into a fully-actuated hand, the Shadow Modular Grasper [24]. The TacTip is a biomimetic optical tactile sensor based on the dermal papillae structure in human tactile skin, and is fabricated by 3D-printing pinlike structures in a compliant skin imaged with a camera. Estimating contact state information, such as the pose of an object's surface, has been recently demonstrated using deep learning on the tactile images [25].
This paper focuses on controllers that dynamically achieve a stable grasp equilibrium state. It extends previous work that focused on a planar problem of achieving a stable grasp and desired relative finger orientation by rolling the fingertips on the object's surface, the direction of which is singular [12]. In this work, the full 3D case is considered, where system dynamics are more complex and rolling motion on the contact surface has two degrees of freedom (DOF). As the complexity of the problem increases, the need for tactile information arises. By using a tactile sensor which accurately perceives the orientation of the contacted surface, such as the TacTip, we propose a robust controller that dynamically achieves grasp stability.
III. METHODS
A. System modelling
Consider two robotic fingers of ni DOF, labelling the fingers i = 1, 2, with revolute joints and rigid hemispherical tips of radius r1 = r2 = r in contact with a rigid object of

arbitrary shape. This paper makes the following assumptions:
i) An equilibrium state is assumed reachable by fingertip
rolling motion on the object surface.
ii) Friction at the contacts is sufficient to sustain tangential
contact forces so that a rolling constraint holds at all times.
iii) Both fingertips and the objects are assumed rigid.
iv) The mass of the object is small enough to ignore gravity. The vector qi = qi1 qi2 . . . qini T denotes the joint
angles for the ith finger and po  R3 is the object's position vector. Let pci  R3 describe the position vector of each finger's contact point with the object. The contact frame's
orientations are defined by the normal unit vector pointing inwards nzi  R3 and the tangential unit vectors to the contact surface, txi , tyi  R3 (Fig. 2).
The system is modelled under the following contact and
rolling constraints:

 q i 

 q i 

Dii Di3 p o  = 0, Aii Ai3 p o  = 0, (1)

o

o

where q i  Rni are the joint velocities of the ith finger, p o, o are the object's translational and rotational velocities, and

Dii = nTzi Jvi ,

Aii =

tTxi Jvi + rtTyi Ji tTyi Jvi - rtTxi Ji

,

Di3 = Ai3 =

-nTzi
-tTxi -tTyi

nTzi p^oci
tTxi p^oci tTyi p^oci

with Jvi = Jvi (qi)  R3×ni , Ji = Ji (qi)  R3×ni being the translational and rotational Jacobian matrices, poci = pci - po and p^oci is the skew-symmetric matrix formed by the elements of poci . The symbol " " over a vector denotes the above diffeomorphism.
The first equation in (1) is the contact constraint implying that the fingertip cannot leave the object's surface. This is true as the system is considered after initial contact with the object is established and as long as the proposed controller applies contact forces inwards the object. The second equation in (1) is the rolling constraint denoting that the velocity of the contact point on the fingertip surface is equal to the velocity of the contact point on the object surface; i.e. that the friction at the contact is sufficient to sustain the tangential contact forces for the rolling motion.
The system dynamics under the contact and rolling constraints (1) is described by the following equations for both fingers and the object:

Mi(qi)q¨i + Ci(qi, q i)q i + DiiT fi + AiiT i,

+ JTi Ksi Qsreli = ui

(2)

M

p¨o  o

+ D13T f1 + D23T f2 + A13T 1 + A23T 2

-

03×3 Ks1

Qsrel1 -

03×3 Ks2

Qsrel2 = 0,

(3)

where Mi(qi)  Rni×ni, Ci(qi, q i)q i  Rni denote the
positive definite inertia matrix and the vector of Coriolis and centripetal forces of the ith finger respectively. The lagrange multipliers fi and i = yi zi T are associated with the

contact and rolling constraints, respectively. ui  Rni is the

vector of applied joint torques, M =diag (moI3, Io) is the

object's positive definite inertia matrix with object mass mo

and moment of inertia matrix Io, with I3 the identity matrix

of size 3. The relative rotational velocity between a fingertip

and the object is reli = ti - o  R3, with rotational velocities ti  R3. The friction coefficients Ksi are a

diagonal matrix associated with the object's spinning motion

which may occur around the interaction line pc1 - pc2

-c-1c2 and which Qs

Qs =

is the projection -c-1c2-c-1c2T .

matrix

on

the

pc1 - pc2 interaction

line

B. Controller for stable pinching

The rolling motion of the fingertips on the contact surface
can be separated into two tangential components. The two tangential directions txi , tyi and their corresponding contact normals nzi define the contact frames (see Fig. 2).

Fig. 2: Contact point {ci} and fingertip {ti} frames at the equilibrium state of grasping a trapezoidal object. The lines connecting the contact points and the fingertips are parallel.

The rolling motion of each fingertip on the contact surface can be analysed into its two components as follows:
· Rolling in the txi direction, around tyi by angle i. · Rolling in the tyi direction, around txi by angle i. These angles i, i represent the rolling distances covered by each fingertip i = 1, 2: 1 = tTy1 t1 , 2 = -tTy2 t2 , 1 = tTx1 t1 , 2 = tTx2 t2 . We propose the following grasping controller for each finger's joint torques:

ui = - Kviq i - (-1)ifdJvTi

pt2 - pt1 pt2 - pt1

- rfdJTi (-1)i+1txi sin  - tyi sin  , (4)

where

 = 1 - 2,

 = 2 - 1

(5)

and pti is the fingertip position vector. The controller's tunable parameters are fd which is a
positive constant setting the desired grasping force magnitude

at each contact and Kvi  Rni×ni which is a positive definite

diagonal matrix denoting the damping gain of each joint and

its values are chosen empirically such that, given a desired

fd, the system's performance is as smooth as possible. The first term of (4) is introduced for joint damping. The

second term represents applied forces of magnitud-e-fd at the direction of the line connecting the fingertips t1t2
pt2 - pt1 and the third term expresses the tangential pt2 - pt1 contact forces at equilibrium.

The closed-loop system under the proposed controller

as proved in the Appendix is passive and asymptotically

converges to an equilibrium state manifold that satisfi--es :

1) The line connecting the centre of the parallel to the line connecting the contact 2) The contact forces that are applied along

pfithoneign-tet-1rstti-c2p-1sdcit2r1e. ctt2ioins

have a magnitude of fd N .

3) tTyi

-tA-1tt2e,qsuinilibriu=m(-1)=i+1tTxi

and -- t1t2.



=



with

sin 

=

Notice that the equilibrium state manifold describes an-

tipodal grasps along -c-1c2 of fd magnitude. Hence, the

proposed controller achieves convergence to an equilibrium

state in this manifold without presetting or measuring po-

sitions of contacts {c1}, {c2}. We remark that as there are

multiple equilibrium states that satisfy the above conditions,

different initial states lead to different equilibrium states

in the manifold. In consequence, the initial state of the

system does not necessarily correspond to an equilibrium.

The closed-loop system's passivity means that after any non-

persistent disturbance the system will always converge to a

state in the equilibrium manifold.

Further notice that the proposed control law (4), (5) as-

sumes knowledge of the tangential directions at the contacts

and therefore an estimate of the contact surface orientation

is needed, here using tactile sensing. This is in contrast to

our previous work where tactile sensing was not utilised

[12]. However, we will show that the controller is robust to

measurement errors of the contact surface orientation. Other

quantities are calculated using only the robotic finger forward

kinematics and the radius of the hemispherical tips.

The proposed control law dynamically stabilises the grasp

of an object of any shape via fingertip rolling on the contact

surfaces with a desired grasp force fd. The fd parameter

should be set so that assumption (ii) holds and contact forces

stay within the friction cone. The controller does not assume

solving the inverse kinematics of the system for trajectory

planning neither does it depend on the knowledge of its

dynamic parameters.

C. Tactile data acquisition and processing for the Shadow Modular Grasper
The Shadow Modular Grasper is a fully-actuated threefingered robotic hand with 9 DoF (3 DoF per finger). The hand has a payload of 2 kg, with each finger applying up to 10 N of normal continuous force and each joint has a dedicated torque sensor for a 10 kHz closed-loop control [2]. The hand is fully integrated with ROS and is provided with open APIs for grasping control.

Tactile sensing is enabled on the hand by replacing the fingertips of the Modular Grasper with custom-built tactile sensors [24] (see Fig 1). The tactile fingertips are adapted from an optical biomimetic tactile sensor developed in Bristol Robotics Laboratory, the BRL TacTip [23]. Deformation of the tactile sensing pad is imaged with the internal camera at its native resolution of 1920 x 1080, then adaptively thresholded with a Gaussian filter (width 27, mean 0 pixels) and subsampled/cropped to 240x135-pixel greyscale images (Fig. 1). All image acquisition and processing was carried out in Python OpenCV.
The tactile image data was used to estimate the pose from a contacted surface relative to the sensor (Fig. 3) and thus estimate the contact frame orientation of each finger with respect to the hand base. The tactile image data was also used for contact deformation measurement. A simple yet robust measure of the difference in tactile images can be found from the Structural Similarity Index Measure (SSIM) [26], which can be used to measure contact deformation by comparing a tactile image against a non-deformed reference image [9]. Here we use eSSIM(I) = 1 - SSIM(I, Iref ) as a measure of the deformation of image I compared with the reference image Iref , with SSIM implemented using Python SciKit-Image and computed from the local means, variances and cross-covariance of the two images [27]. The SSIMbased deformation measure changed gradually as the contact intensified, making it suitable for use in a feedback controller.
The fingertip is mounted as an end-effector on a 6 DoF robot arm (IRB120, ABB Robotics). The fingertip then repeatedly contacted a flat surface to gather labelled contact data to train, validate and test a deep neural network. For details of the deep learning method used, we refer to [25]. Each of the 5000 samples of data had a random labelled pose (ranges in Table inside Fig. 3). The network hyperparameters were optimized (Table I) with the training implemented in the Python Keras library using a GeForce GTX 1660 GPU.

Hyperparameters
# convolutional hidden layers, Nconv # convolutional kernels, Nfilters # dense hidden layers, Ndense # dense hidden layer units, Nunit hidden layer activation function dropout coefficient L1-regularization coefficient L2-regularization coefficient batch size

Optimized values
5 256 2 64 eLU 0.01 0.0001 0.01 16

TABLE I: Neural network and learning hyperparameters.

Fig. 3: Data collection set-up with tactile fingertip mounted as an end-effector on a ABB robot arm. The pose components collected are roll , pitch  and depth z relative to the sensor frame. Pose ranges used as labels to train/test the neural network are shown in the table.
predicted sensor deformation z is used to detect contact with an object. Two Python models, one per sensor, run on the host PC and interact with the grasp controller (in C++) which runs in a Docker container via a ROS-network (Fig. 4).
Each finger's joint can be controlled in either position or torque mode. The control is implemented within a 1 kHz update loop running inside the Docker container. The two fingertip poses are predicted with an update rate of 100 ms and then broadcasted to the grasping controller inside the Docker container via ROS topics.
A grasp is comprised of two distinct phases: (i) Closing phase During this phase all joints are controlled in position mode and commanded to a set of target angles via a PID which is an implementation of the rosControl ROSpackage. The hand controller switches to the next phase once contact is detected using the SSIM (Section III-C). (ii) Grasping phase After both sensors have detected contact, all joints switch to torque mode and the grasping controller (Section III-B) is activated, which leads to the hand stably grasping the object.

This work considers a two-fingered grasp; thus, the above model procedure was repeated for both tactile fingertips.

D. System Integration
For the purpose of this study, we use the predicted contact orientation from the tactile sensor (Section III-C) inside the controller of Section III-B. To that end, the predicted Euler angles are transformed into the unit vectors txi and tyi and expressed in the Shadow Modular Grasper's base frame. The

Fig. 4: Block diagram of the proposed controller with feedback derived from the tactile images.

(a) Initial Configuration (b) Final Configuration

Fig. 5: Initial configuration and system equilibrium state for the pinching controller in simulation for three different objects of mass 0.0021 kg. A cube of side length 0.048 m, a trapezoidal object (height 0.048 m, small base 0.0277 m side angles 30 & 15 deg) and a sphere of radius 0.024 m (zoom-in detail of the parallel lines)

IV. RESULTS
A. Simulation of stable pinching
Two identical robotic fingers with rigid fingertips (radii r = 0.015 m) are simulated in MATLAB. Three different object shapes are used; a cube, a trapezoidal object and a sphere. They are considered rigid and their parameters are given in the caption of Fig. 5. The system is simulated under the proposed controller with damping gains Kvi = 0.07I4 for both fingers i = 1, 2 and desired grasping force fd = 4 N.

50

50

0

0

-50

-50

0

1

2

3

4

5

0

0

-0.5

-0.5

-1

-1

0

1

2

3

4

5

The initial system configuration is shown in the top row of Fig. 5. The bottom row shows the system's equilibrium state where it is clear that the lines connecting the fingertips and the contact points are parallel. System time responses are shown indicatively for the trapezoidal object in Fig. 6 and are consistent with theoretical expectations. Joint and object velocities converge to zero and the grasping force converges to the desired magnitude fd = 4 N.
The only external measurements used by the proposed controller come from the tactile sensing. Therefore, we investigate the robustness to measurement errors in the contact surface orientation. To demonstrate this, we simulate a measurement error of 30, 15 for each contact surface orientation respectively. This is implemented for the trapezoidal object, but practically it is like the fingers `feel' they are holding a cube. Simulation results show that the system converges to a different equilibrium state of the manifold with respect to the final finger-object pose (Fig. 7, equilibrium configurations with (grey fingers) and without

4

3

2

0

1

2

3

4

5

Fig. 6: Finger joint and object velocities for the trapezoidal object as well as grasping force response.

Fig. 7: Equilibrium configuration without (brown fingers) and with (grey fingers) tactile measurement errors of 30, 15 per
contact surface orientation.

Fig. 8: Tactile sensor's training and validation loss as well as performance of the trained models for depth, roll and pitch.

(brown fingers) errors are overlayed).
B. Tactile perception of contact surface orientation
Two deep convolutional neural networks were trained to regress pose over the labelled tactile images (Section III-C). The training involved Bayesian optimization over the network architecture and hyperparameters [25] (optima reported in Table I). Pose estimation was then assessed on distinct test sets for each sensor. Plots of the predictions versus ground truth show good performance for all pose components (z, , ) (Fig. 8). As is evident from errors due to small vertical pose component (Fig. 8 colourmap according to z), the outliers are caused by little or no contact with the surface. In the scope of this paper, information from the sensors is only needed when there is contact with the object. The overall accuracy is similar for both sensors and typically below 0.1 mm and 0.5 (Table II). Small differences between the two sensors are negligible with respect to their ranges and can be attributed to variations in their fabrication and optics, such as the amount of injected gel and the camera placement. These variations are also a reason for training a network for each sensor.
C. Stable pinching experimental results on the tactile Shadow Modular Grasper
We consider four different objects of different shapes and softness (Figs 1, 9-10). The system runs under the proposed controller with damping gains Kvi = 0.07I4, desired grasping force fd = 10 N and fingertip radius r = 0.015 m.
The controller achieves a stable grasp by rolling the fingertips on the contact surfaces. The finger configuration is kept as close as possible to the initial one. Figure 9 shows the initial configuration and the system's equilibrium state for households objects whose shapes resemble those used in simulation (Section IV-A). Note the empty cardboard box in the middle deforms under grasping into a trapezoid. The

Pose component
vertical z roll  pitch 

Sensor 1 MAE
0.05 mm 0.22 0.18

Sensor 2 MAE
0.08 mm 0.45 0.38

range
2.5 mm 16 12

TABLE II: Pose prediction performance.

experiments in this section show that the controller achieves stability even in the case of soft materials.
Figure 1 shows the system's equilibrium state for the brain-shaped object which is the most challenging to control because it is soft and has an uneven texture. The fingertip and contact frames are captured from the online rendition of the frames in RVIZ, a 3D visualisation tool of ROS, and are overlaid on the experimental setup photo.
In both Figs 1 and 9, it is clear that the lines connecting the fingertips and contact points are parallel, which matches the theoretical results from Section III-B. To further test the stability of the system, two external perturbations were applied by pushing the right finger just before t = 235 sec and t = 245 sec. Fig. 10 shows the finger joint angle velocities which return to zero after perturbations; hence, the system converges to an equilibrium state.
V. DISCUSSION
In this paper, we have presented a dynamically stable controller for pinching an arbitrary-shaped object with two robotic fingers. The novelty with respect to our previous work in this area [12] lies in the use of tactile sensing to address grasp stability in a 3D setting. This was attained by using a convolutional neural network to extract the orientation of the contact frames for use in the controller. We showed that the system is robust to tactile measurement errors, in that a systematic error in estimating the contact orientation leads to a new equilibrium nearby the original system pose. While our tactile measurements were accurate on test data (to within 0.5), systematic measurement errors could occur on objects that are distinct from the planar surface used in training, such as for very curved or soft regions of the object. That objects of these types (a squidgy brain and lemon) were stably grasped indicates the method's robustness. The control also appeared to be robust to other sources of error. In particular, the theoretical analysis of the system was based on the assumptions that the fingertips and objects are rigid and that the mass of the object is small enough to ignore gravity. However, the controller performed well with soft, curved tactile fingertips and the objects ranged in softness, curvature and weight.
The controller's performance depends however on the assumption of rolling fingertips. In practice, this means that

(a) Initial Configuration (b) Final Configuration

Fig. 9: Initial configuration and system equilibrium state for the pinching controller on the tactile Shadow Modular Grasper for three different objects, a stack of post-it notes, an empty cardboard box and a plastic lemon.

100 100
50

0

0

-50 -100

-100

220

230

240

250

Fig. 10: Joint angle velocities with external perturbation while grasping an object. Initial grasp at 220 sec, large perturbation at 235 sec, smaller perturbation at 245 sec.

the friction at each contact is such that the contact force remains in the friction cone during the grasp so that there is no slippage in the fingertip-object contact and hence rolling is possible. The value of fd as well as soft contacts by the deformable fingertips play a role in satisfying this constraint. If a non-satisfaction of assumptions causes slippage (eg. heavy object, persistent external perturbation, -c-1c2 outside of the friction cones at the contacts), the grasp will fail.
Finally, although the scope of the present work was stable pinch grasping, we would like to emphasise that the controller should extend to a broader range of capabilities, including stable in-hand manipulation of unknown objects using touch. By introducing additional control parameters in the rolling angles  and  of (5), the rolling of the fingertips on the contact surface can be controlled to manipulate the object's in-hand orientation. In consequence, the controller could be used to adjust the hand-object composite to the environment's geometry, for example to place an object inside a constrained space. It could also be used to adjust the

internal force to ensure the safety of the grasp by increasing the grasping force in case of slippage [28]. These topics will be examined in future work, along with extending the controller to use multiple fingers of the robot hand.

APPENDIX: SYSTEM EQUILIBRIUM AND STABILITY ANALYSIS

Substituting (4) into (2), the closed loop system can be written as:

Miq¨i + (Ci + Kvi)q i + JTi Ksi Qsreli + DiTi fi

+ ATii

xi yi

+ rJTi Ni = 0

(6)

2

Mop¨o - (nzi fi + txi xi + tyi yi ) = 0 (7)

i=1

2
Io o + po^ci T (nzi fi + txi xi + tyi yi )

i=1

2

- Ksi Qsreli + SN = 0

(8)

i=1

w((t--yhi11esr))ieiin++11fffddait(ntTxdyi=i-tSt-1TxtNfi2i,=--ftd(xy(-iip^t=1ToTy)ci1i)+-t-y-11itf-p^2dTon(c+-2Tzi)1-t-tf)--11ditt+22(1,.-fd1t)Tyii+x-t1i-1ttx2=i, sinNxii

- = -

The system equilibrium is found by setting velocities

and accelerations to zero in (6-8). This leads to: fi =

yi = zi = Ni = SN = 0, which then gives:

p^Toc2 - p^Toc1

-- t1t2 = 0

(9)

1 - 2 = , 2 - 1 =  (10)

with sin  = tTyi -t-1t2, sin  = (-1)i+1tTxi -t-1t2,

av--necdNtoothrt;iecheseuntbhcsaectr(i9pp)toicn2d-idceapnteoostci1ang=zeerqo-cu-1oiclui2bteririsupmtrhoevdaulicunteteosr.fac-ct-1ico2n

line with

t1t2, which implies that these lines are parallel to each other

at equilibrium. Notice also that fi = yi = zi = 0 satisfy the object's translational motion equation (7) at

esiqnucielib-tr-1iut2m||.-c-1Tch2e,

physical meaning contact forces lie

is that, on the

at equilibrium, interaction line

with magnitude fd.

To facilitate the stability analysis, we rewrite the closed

loop system equation in a compact form, collecting all Lagrange multipliers in the vector  = [f1 f2 T1 T2 ]T and all system position variables in x = [qT1 qT2 pTo To ]T :

Msx¨+(Cs + Kv)x +A+BJ Qrel +fdJvT
 tx1 sin  - ty1 sin   + rfdJT -tx2 sin  - ty2 sin  = 0
06×1

pt2 - pt1 pt2 - pt1
(11)

with Ms = diag (M1, M2, M ), Cs = diag (C1, C2, 06×6),

Kv = diag (Kv1 , Kv2 , 06×6), Jv = -Jv1 Jv2 03×6 ,

J = J1 J2 03×6 , Q = diag [Ks1 Qs, Ks2 Qs],

rel = Trel1

Trel2

T
,

A=

D11T 0n1×1 A11T 0n1×2
, 0n2×1 D22T 0n2×2 A22T
D13T D23T A13T A23T

  JT1 05×3

B = J

04×3 03×3

JT2 03×3

.

Similarly,

the

constraints

can

be

written

-I3 -I3
as: AT x = 0. Left-multiplying (11) by x T yields dV +W = dt

0, where:

V

=

1 2

x T

Ms

x

+

fd

pt2 - pt1

+ rfd z1(t) + z2(t)

n1

n2

2

W=

kv1j q12j +

kv2j q22j +

Treli Ksi Qsreli

j=1

j=1

i=1

where z1(t) =

 0

sin 1d1,

z2(t)

=

 0

sin

2d2

and

kvij

are the diagonal elements of the matrix Kvi . Clearly V is

positive definite with respect to x , pt2 - pt1 , z1(t) and

z2(t)

for

-

 2

<<

 2

and

-

 2

<

<

 2

in

the

constraint

manifold defined by Mc(x) = {x  Rn1+n2+6 : AT x = 0}.

Given V = -W  0, it is clear that V (t)  V (0) holds and

consequently x , pt2 - pt1 , z1(t) and z2(t) are bounded. Following the proof line in [12], it is proved that the system

velocities and accelerations converge to zero x , x¨  0 and

that x converges to zero exponentially as t  .

REFERENCES

[1] C. Piazza, G. Grioli, M. Catalano, and A. Bicchi, "A century of robotic hands," Annual Review of Control, Robotics, and Autonomous Systems, vol. 2, no. 1, pp. 1­32, 2019.
[2] Shadow Robot Company. (2021) Modular grasper documentation. [Online]. Available: https://modular-grasper.readthedocs.io/en/latest/
[3] R. Deimel and O. Brock, "A novel type of compliant and underactuated robotic hand for dexterous grasping," The International Journal of Robotics Research, vol. 35, no. 1-3, pp. 161­185, 2016.
[4] M. Catalano, G. Grioli, E. Farnioli, A. Serio, C. Piazza, and A. Bicchi, "Adaptive synergies for the design and control of the Pisa/IIT softhand," The International Journal of Robotics Research, vol. 33, no. 5, pp. 768­782, 2014.

[5] J. Bohg, A. Morales, T. Asfour, and D. Kragic, "Data-Driven Grasp Synthesis ­ A Survey," IEEE Transactions on Robotics, vol. 30, no. 2, pp. 289­309, 2013.
[6] A. Billard and D. Kragic, "Trends and challenges in robot manipulation," Science, vol. 364, no. 6446, 2019.
[7] Z. Kappassov, J.-A. Corrales, and V. Perdereau, "Tactile sensing in dexterous robot hands ­ Review," Robotics and Autonomous Systems, vol. 74, pp. 195­220, 2015.
[8] H. Yousef, M. Boukallel, and K. Althoefer, "Tactile sensing for dexterous in-hand manipulation in robotics ­ A review," Sensors and Actuators A: Physical, vol. 167, no. 2, pp. 171­187, 2011.
[9] J. W. James, A. Church, L. Cramphorn, and N. F. Lepora, "Tactile Model O: Fabrication and testing of a 3d-printed, three-fingered tactile robot hand," Soft Robotics, 2020.
[10] S. Arimoto, Control Theory of Multi-fingered Hands: A Modelling and Analytical-mechanics Approach for Dexterity and Intelligence. Springer-Verlag London Limited, 2008.
[11] R. Ozawa and K. Tahara, "Grasp and dexterous manipulation of multifingered robotic hands: a review from a control view point," Advanced Robotics, vol. 31, no. 19-20, pp. 1030­1050, 2017.
[12] E. Psomopoulou, D. Karashima, Z. Doulgeri, and K. Tahara, "Stable pinching by controlling finger relative orientation of robotic fingers with rolling soft tips," Robotica, vol. 36, no. 2, p. 204­224, 2018.
[13] D. Prattichizzo and J. C. Trinkle, "Grasping," in Springer Handbook of Robotics. Springer Berlin Heidelberg, 2008, pp. 671­700.
[14] T. Wimbock, C. Ott, a. Albu-Schaffer, and G. Hirzinger, "Comparison of object-level grasp controllers for dynamic dexterous manipulation," The International Journal of Robotics Research, vol. 31, no. 1, pp. 3­23, Sep. 2011.
[15] D. Prattichizzo, M. Malvezzi, M. Gabiccini, and A. Bicchi, "On the manipulability ellipsoids of underactuated robotic hands with compliance," Robotics and Autonomous Systems, vol. 60, no. 3, pp. 337 ­ 346, 2012.
[16] C. Goldfeder, P. K. Allen, C. Lackner, and R. Pelossof, "Grasp planning via decomposition trees," in IEEE International Conference on Robotics and Automation, April 2007, pp. 4679­4684.
[17] M. T. Ciocarlie and P. K. Allen, "Hand Posture Subspaces for Dexterous Robotic Grasping," The International Journal of Robotics Research, vol. 28, no. 7, pp. 851­867, June 2009.
[18] M. Grammatikopoulou, E. Psomopoulou, L. Droukas, and Z. Doulgeri, "A controller for stable grasping and desired finger shaping without contact sensing," in IEEE International Conference on Robotics and Automation, May 2014, pp. 3662­3668.
[19] R. Ko~iva, M. Zenker, C. Schu¨rmann, R. Haschke, and H. Ritter, "A highly sensitive 3D-shaped tactile sensor," in IEEE/ASME International Conference on Advanced Intelligent Mechatronics, 2013.
[20] F. Veiga, B. B. Edin, and J. Peters, "In-hand object stabilization by independent finger control," CoRR, vol. abs/1806.05031, 2018.
[21] L. U. Odhner, L. P. Jentoft, M. R. Claffee, N. Corson, Y. Tenzer, R. R. Ma, M. Buehler, R. Kohout, R. D. Howe, and A. M. Dollar, "A compliant, underactuated hand for robust manipulation," The International Journal of Robotics Research, vol. 33, no. 5, pp. 736­752, 2014.
[22] S. Dong, W. Yuan, and E. H. Adelson, "Improved GelSight tactile sensor for measuring geometry and slip," IEEE/RSJ International Conference on Intelligent Robots and Systems, Sep 2017.
[23] B. Ward-Cherrier, N. Pestell, L. Cramphorn, B. Winstone, M. E. Giannaccini, J. Rossiter, and N. F. Lepora, "The TacTip Family: Soft Optical Tactile Sensors with 3D-Printed Biomimetic Morphologies," Soft Robotics, vol. 5, no. 2, pp. 216­227, 2018.
[24] N. Pestell, L. Cramphorn, F. Papadopoulos, and N. F. Lepora, "A sense of touch for the shadow modular grasper," IEEE Robotics and Automation Letters, vol. 4, no. 2, pp. 2220­2226, April 2019.
[25] N. F. Lepora and J. Lloyd, "Optimal deep learning for robot touch: Training accurate pose models of 3d surfaces and edges," IEEE Robotics Automation Magazine, vol. 27, no. 2, pp. 66­77, 2020.
[26] S. Luo, W. Yuan, E. Adelson, A. G. Cohn, and R. Fuentes, "ViTac: Feature Sharing Between Vision and Tactile Sensing for Cloth Texture Recognition," in IEEE International Conference on Robotics and Automation, 2018, pp. 2722­2727.
[27] Zhou Wang, A. C. Bovik, H. R. Sheikh, and E. P. Simoncelli, "Image quality assessment: from error visibility to structural similarity," IEEE Transactions on Image Processing, vol. 13, no. 4, pp. 600­612, 2004.
[28] J. W. James and N. F. Lepora, "Slip detection for grasp stabilization with a multifingered tactile robot hand," IEEE Transactions on Robotics, pp. 1­14, 2020.

