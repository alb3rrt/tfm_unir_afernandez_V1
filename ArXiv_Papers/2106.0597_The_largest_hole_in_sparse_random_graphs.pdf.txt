The largest hole in sparse random graphs

Nemanja Dragani 

Stefan Glock 

Michael Krivelevich 

arXiv:2106.00597v1 [math.CO] 28 May 2021

Abstract

We show that for any d = d(n) with d0()  d = o(n), with high probability, the size

of

a

largest

induced

cycle

in

the

random

graph

G(n, d/n)

is

(2

±

)

n d

log d.

This settles a

long-standing open problem in random graph theory.

1 Introduction

Let G(n, p) denote the binomial random graph on n vertices, where each edge is included inde-

pendently with probability p. In this paper, we are concerned with induced subgraphs of G(n, p),

specifically trees, forests, paths and cycles.

The study of induced trees in G(n, p) was initiated by Erds and Palka [11] in the 80s. Among

other things, they showed that for constant p, with high probability (whp) the size of a largest

induced

tree

in

G(n, p)

is

asymptotically

equal

to

2 logq(np),

where

q

=

1 1-p

.

The

obtained

value

coincides asymptotically with the independence number of G(n, p), the study of which dates

back even further to the work of Bollobás and Erds [5], Grimmett and McDiarmid [18] and

Matula [23].

As a natural continuation of their work, Erds and Palka [11] posed the problem of determ-

ining the size of a largest induced tree in sparse random graphs, when p = d/n for some fixed

constant d. More precisely, they conjectured that for every d > 1 there exists c(d) > 0 such

that whp G(n, p) contains an induced tree of order at least c(d) · n. This problem was settled

independently in the late 80s by Fernandez de la Vega [12], Frieze and Jackson [16], Kucera and

Rödl [20] as well as Luczak and Palka [22]. In particular, Fernandez de la Vega [12] showed that

one

can

take

c(d)



log d

d

,

and

a

simple

first

moment

calculation

reveals

that

this

is

tight

within

a factor of 2.

Two natural questions arise from there. First, one might wonder whether it is possible to

find not only some arbitrary induced tree, but a specific one, say a long induced path. Indeed,

Frieze and Jackson [15] in a separate paper showed that whp there is an induced path of length

c~(d) · n. Two weaknesses of this result were that their proof only worked for sufficiently large d,

and that the value obtained for c~(d) was far away from the optimal one. Later, Luczak [21] and

Suen [27] independently remedied this situation twofold. They proved that an induced path of

length linear in n exists for all d > 1, showing that the conjecture of Erds and Palka holds

even

for

induced

paths.

Moreover,

they

showed

that

one

can

take

c~(d)



log d d

as

in

the

case

of

arbitrary trees.

A second obvious question is to determine the size of a largest induced tree (and path)

more precisely. The aforementioned results were proved by analysing the behaviour of certain

2020 Mathematics Subject Classification. Primary 05C80, 05C38; Secondary 05C05, 05D40.
Key words and phrases. random graph, induced path, hole. Department of Mathematics, ETH, 8092 Zürich, Switzerland. Email: nemanja.draganic@math.ethz.ch. Institute for Theoretical Studies, ETH, 8092 Zürich, Switzerland. Email: dr.stefan.glock@gmail.com.
Research supported by Dr. Max Rössler, the Walter Haefner Foundation and the ETH Zürich Foundation. School of Mathematical Sciences, Raymond and Beverly Sackler Faculty of Exact Sciences, Tel Aviv University,
Tel Aviv, 6997801, Israel. Email: krivelev@tauex.tau.ac.il. Research supported in part by USA-Israel BSF
grant 2018267, and by ISF grant 1261/17.

1

constructive algorithms which produce large induced trees and paths.

The

value

log d d

seems

to constitute a natural barrier for such approaches. On the other hand, recall that in the

dense case, the size of a largest induced tree coincides asymptotically with the independence

number.

In

1990,

Frieze

[14]

showed

that

the

first

moment

bound



2

n d

log d

is

tight

for

the

independence number, also in the sparse case. His proof is based on the profound observation

that the second moment method can be used even in situations where it apparently does not

work, if one can combine it with a strong concentration inequality. Finally, in 1996, Fernandez

de la Vega [13] observed that the earlier achievements around induced trees can be combined

with

Frieze's

breakthrough

to

prove

that

the

size

of

a

largest

induced

tree

is

indeed



2

n d

log

d.

This complements the result of Erds and Palka [11] in the dense case. (When p = on(1), we

have

2

logq (np)



2

n d

log

d.)

Fernandez de la Vega [13] also posed the natural problem of improving the Luczak­Suen

bound [21, 27] for induced paths, for which his approach was "apparently helpless". Despite the

widely

held

belief

(see

[7,

10]

for

instance)

that

the

upper

bound



2

n d

log

d

obtained

via

the

first

moment method is tight, the implicit constant 1 has not been improved in the last 30 years.

1.1 Long induced paths and cycles

Our main result is the following, which settles this problem and gives an asymptotically optimal result for the size of a largest induced path in G(n, p).

Theorem 1.1. For any  > 0 there is d0 such that whp G(n, p) contains an induced path of

length

at

least

(2

-

)

n d

log d

whenever

d0



d

=

pn

=

o(n).

For the sake of generality, we state our result for a wide range of functions d = d(n). However, we remark that the most interesting case is when d is a sufficiently large constant. In fact, for dense graphs, when d  n1/2 log2 n, more precise results are already known (cf. [10, 25]).
Some of the earlier results [10, 15, 21] are phrased in terms of induced cycles (holes). This does not make the problem much harder (see Remark 4.2). We also note that our proof is self-contained, except for well-known facts from probability and graph theory.
We now briefly outline our strategy. Roughly speaking, the idea is to find a long induced path in two steps. First, we find many disjoint paths of some chosen length L = L(d), such that the subgraph consisting of their union is induced. To achieve this, we generalize a recent result of Cooley, Dragani, Kang and Sudakov [7] who obtained large induced matchings. We will discuss this further in Section 1.2. Assuming now we can find such an induced linear forest F , the aim is to connect almost all of the small paths into one long induced path, using a few additional vertices. As a "reservoir" for these connecting vertices, we find (actually, even before finding F ) a large independent set I which is disjoint from F . To model the connecting step, we give each path in F a direction, and define an auxiliary digraph whose vertices are the paths, and two paths (P1, P2) form an edge if there exists a "connecting" vertex a  I that has some edge to the last L vertices of P1 and some edge to the first L vertices of P2, but no edge to the rest of F . Our goal is to find an almost spanning path in this auxiliary digraph. Observe that this will provide us with a path in G(n, p) of length roughly |F |. The intuition is that the auxiliary digraph behaves quite randomly, which gives us hope that, even though it is very sparse, we can find an almost spanning path.
Crucially, we do not perform this connecting step in the whole random graph. This is because ensuring that the new connecting vertices are only connected to two vertices of F is too costly, making the auxiliary digraph so sparse that it is impossible to find an almost spanning path. Instead, we use a sprinkling argument, meaning that we view G(n, p) as the union of two independent random graphs G1 and G2, where the edge probability of G2 is much smaller than p. We then reveal the random choices in several stages. When finding F and I as above, we make sure that there are no G1-edges between F and I. Then, in the final connecting step, it remains

2

to expose the G2-edges between F and I, with the advantage that now the edge probability is much smaller, making it much more suitable for a desired "sparse" connection.

1.2 Induced forests with small components

As outlined above, in the first step of our argument, we seek an induced linear forest whose components are reasonably long paths. For this, we generalize a recent result of Cooley, Dragani, Kang and Sudakov [7]. They proved that whp G(n, p) contains an induced matching with  2 logq(np) vertices, which is asymptotically best possible. They also anticipated that using a similar approach one can probably obtain induced forests with larger, but bounded components. As a by-product, we confirm this. To state our result, we need the following definition. For a given graph T , a T -matching is a graph whose components are all isomorphic to T . Hence, a K2-matching is simply a matching, and specifying the following statement for T = K2 implies the main result of [7].

Theorem 1.2. For any  > 0 and a fixed tree T , there exists d0 > 0 such that whp the

order

of

the

largest

induced

T -matching

in

G(n, p)

is

(2

±

) logq(np),

where

q

=

1 1-p

,

whenever

d0 n



p



0.99.

We use the same approach as in [7], which goes back to the work of Frieze [14] (see also [4, 26]). The basic idea is as follows. Suppose we have a random variable X and want to show that whp, X  b-t, where b is some "target" value and t a small error. For many natural variables, we know that X is "concentrated", say P [|X - E [X] |  t/2] <  for some small . This is the case for instance when X is determined by many independent random choices, each of which has a small effect. However, it might be difficult to estimate E [X] well enough. But if we know in addition that P [X  b]  , then we can combine both estimates to P [X  b] > P [X  E [X] + t/2], which clearly implies that b  E [X] + t/2. Applying now the other side of the concentration inequality, we infer P [X  b - t]  P [X  E [X] - t/2] < , as desired.
In our case, say X is the maximum order of an induced T -matching in G(n, p). Since adding or deleting edges at any one vertex can create or destroy at most one component, we know that X is |T |-Lipschitz and hence concentrated (see Section 3). Using the above approach, it remains to complement this with a lower bound on the probability that X  b. Introduce a new random variable Y which is the number of induced T -matchings of order b (a multiple of |T |). Then we have X  b if and only if Y > 0. The main technical work is to obtain a lower bound for the probability of the latter event using the second moment method. We note that by applying the second moment method to labelled copies (instead of unlabelled copies as in [7]) we obtain a shorter proof even in the case of matchings (see Section 2). More crucially, it turns out that one can even find induced forests where the component sizes can grow as a function of d, which we need in the proof of Theorem 1.1 (specifically, we need L  log d). This is provided by the following auxiliary result. We note that the same holds for forests with arbitrary components of bounded degree, and one can also let the degree slowly grow with d, but we choose to keep the presentation simple.

Lemma 1.3. For any  > 0, there exists d0 > 0 such that whp G(n, p) contains an induced linear forest of order at least (2 - )p-1 log(np) and component paths of order d1/2/ log3 d, whenever d0  d = np  n1/2 log2 n.

1.3 Notation
We use standard graph theoretical notation. In particular, for a graph G and U  V (G), we let e(G) denote the number of edges, (G) the maximum degree and G[U ] the subgraph induced by U . Recall that a forest is called linear if its components are paths.

3

For

functions

f (n), g(n),

we

write

f



g

if

limn

f (n) g(n)

=

1.

We also use the standard

Landau symbols o(·), (·), (·), O(·), (·), where subscripts disclose the variable that tends to

infinity if this is not clear from the context. We use  non-rigorously in informal discussions

and ask the reader to interpret it correctly.

An event En holds with high probability (whp) if P [En] = 1 - on(1). We use log to denote

the natural logarithm with base e. Also, [n] = {1, . . . , n} and (n)k = n(n - 1) · · · (n - k + 1).

Recall the standard estimates

n k



en k

k,

1 + x  ex

and log(1 + x) = x + O

x2 1-|x|

, where

the latter holds for |x| < 1 and implies 1 - x  e-x-O(x2) for 0  x  0.99, say. As customary,

we tacitly treat large numbers like integers whenever this has no effect on the argument.

2 Second moment

In this section, we use the second moment method to derive a lower bound on the probability

that

G(n, d/n)

contains

a

given

induced

linear

forest

of

size



2

n d

log d.

Here,

it

does

not

matter

that the components are small. More precisely, we prove that for fixed  > 0 and d  d0(),

any

bounded

degree

forest

F

on

k



(2

-

)

n d

log d

vertices

is

an

induced

subgraph

of

G(n, d/n)

with

probability

at

least

exp(-O(

n

log2 d2

d

)).

Moreover, when d = (n1/2 log n), the obtained

probability bound tends to 1. In particular, in this regime, the lemma readily implies the

existence

of

an

induced

path

of

the

asymptotically

optimal

length



2

n d

log

d

whp.

Lemma 2.1. For any  > 0, there exists d0 such that the following holds for all d0  d < n,

where

p=

d n

and

q

=

1 1-p

.

For

any

forest

F

on

k

 (2 - ) logq d

vertices

with

maximum

degree

  d/6, the probability that G(n, p) contains an induced copy of F is at least

exp

-104

2

n

log2 d2

d

-

2d-/7

.

The proof of Lemma 2.1 is based on the second moment method and will be given below. We start off with some basic preparations which will also motivate the main counting tool.
Fix a forest F of order k. Let Y be the random variable which counts the number of labelled induced copies of F in G(n, p). More formally, let F be the set of all injections  : V (F )  [n], and for   F, let F be the graph with vertex set {(x) : x  V (F )} and edge set {(x)(y) : xy  E(F )}. Let A be the event that F is an induced subgraph of G(n, p). Hence,

P [A] = pe(F )(1 - p)(k2)-e(F ),

and setting Y =

F ½(A), we have
E [Y ] = (n)kpe(F )(1 - p)(k2)-e(F ).

(2.1)

Ultimately, we want to obtain a lower bound for P [Y > 0]. Fix some 0  F. By symmetry, the second moment of Y can be written as

E Y 2 = E [Y ] P [A | A0 ] .
F

Applying the Paley­Zygmund inequality, we thus have

P [Y

> 0] 

E [Y ]2 E [Y 2]

=

E [Y ]

.

F P [A | A0 ]

(2.2)

The remaining difficulty is to control the terms P [A | A0 ]. We say that   F is compatible (with 0) if P [A | A0] > 0. This means that, in the intersection V (F)  V (F0 ), a pair uv

4

which is an edge in F cannot be a non-edge in F0 , and vice versa, as otherwise F and F0 could not be induced subgraphs of G(n, p) simultaneously. From now on, we can ignore all 

that are not compatible with 0.

If   F is compatible with 0, we denote by I := F F0 the graph on S = V (F)V (F0 ) with edge set E(F[S]) = E(F0 [S]). This "intersection graph" assumes a crucial role in the analysis. Suppose that I has s vertices and c components. Since I is a forest, we have

e(I) = s - c. These are the edges of F that we already know to be there when conditioning

on A0, and for F, we need e(F )-e(I) "new" edges. Moreover, there are

k 2

-

s 2

-e(F )+e(I)

additional non-edges. Therefore,

P [A | A0 ] = pe(F )-s+c(1 - p)(k2)-(2s)-e(F )+s-c.

(2.3)

Note here that when the number of components c is large, then the exponent of p is large and hence we have a stronger upper bound on P [A | A0]. On the other hand, if c is small, then P [A | A0] is larger, but this will be compensated by the fact that there are fewer such . In the following, we bound the number of compatible   F for which I has s vertices and c components. We remark that this kind of analysis was also carried out in [9] in the study of dense random graphs. We include the details for completeness, with an improved dependence on . We make use of the following well-known counting result, see, e.g., [3] for the proof.

Proposition 2.2. For a graph H with (H)   and v  V (H), the number of (unlabelled) trees in H of order s which contain v is at most (e)s-1.

Proposition 2.3. For all 0  c  s, the number of compatible   F for which I has s vertices

and c components is at most

k c

kc(62)s(n - k)k-s.

Proof. Fix s and c. We can obviously assume that s  c  1, as otherwise the bound is

easily seen to hold. The first claim is that the number of subgraphs of F0 with s vertices and

c components is at most

k c

(2e)s.

To

see

this,

we

first

choose

root

vertices

v1, . . . , vc

for

the

components, for which there are at most

k c

choices. For i  [c], let Ti denote the component

which will contain vi. Next, we fix the sizes of the components. Writing si = |Ti|, the number of

possibilities is bounded by the number of positive integer solutions of s1 + · · · + sc = s, which is

s-1 c-1

 2s by a well-known formula. Now, having fixed the sizes, we can apply Proposition 2.2

for each i  [c], with F0 , vi playing the roles of H, v, to see that the number of choices for Ti is

at most (e)si-1, which combined amounts to (e)s-c. This implies the claim, and immediately

yields an upper bound on the number of possibilities for the intersection graph I. Now, fix a choice of I. Since I is a forest with c components, its vertices can be ordered
such that every vertex, except for the first c vertices in the ordering (which we can set to be
the root vertices of the components), has exactly one neighbour preceding it. In order to count

the number of possibilities for , we proceed as follows. First, choose the preimages under  for

the first c vertices, for which there are at most (k)c choices. Now, we choose the preimages of the remaining vertices of I one-by-one in increasing order. In each step, there are at most  choices, since one neighbour of the current vertex has already chosen its preimage, and I has to be an induced subgraph of F. Hence, there are at most s-c choices for the preimages of the remaining vertices of I. Finally, we have used s vertices of F as preimages for the vertices in I. The remaining k - s vertices of F must be mapped to [n] \ V (F0 ), so there are at most (n - k)k-s possibilities.

With the preparations done, the proof of the lemma reduces to a chain of estimates.

Proof of Lemma 2.1. By (2.2), it suffices to show that

F

P [A E [Y ]

|

A0 ]



exp

1042

n

log2 d2

d

+

2d-/7

.

5

We split the sum over compatible   F according to the number of vertices and components of I. Applying (2.1), (2.3) and Proposition 2.3, we obtain

F P [A | A0 ]  k s

E [Y ]

s=0 c=0

k c

kc(62)s(n - k)k-spe(F )-s+c(1 - p)(k2)-(s2)-e(F )

(n)kpe(F )(1 - p)(k2)-e(F )

=

k s=0

(n

- k)k-s (n)k

p-sq(2s)(62)s

s c=0

k c

(kp)c



k

(4/n)s

p-sqs2

/2

(62

)s

(16k

log s!

d)s

s=0

k
=
s=0

3842 k d

log

d

qs/2

s!

s
.

To

verify

the

last

inequality,

note

that

we

always

have

k



2

logq (np)



2

n d

log

d

since

log(q)



p.

Hence,

kp  2 log d.

Moreover,

we

have

(n-k)k-s (n)k



1 (n)s

 (4/n)s

since

sk

 2n/e.

We

also

used the fact that

k c

 4s

k s



(4k)s s!

.

To

see

this,

observe

that

when

s



k/2,

we

have

k c



k s

,

and otherwise,

k c

 2k  22s. Finally, c takes only s + 1  2s values.

We split the final sum into two terms. First, consider the range s  k/ log d. Then qs/2 

q1/ log q = e. Hence, recalling that ex =

s0

xs s!

,

we

obtain

the

bound

k/ log d s=0

3842 k d

log

d

qs/2

s
 exp

s!

384e2k log d d

 exp

1042n log2 d d2

.

Finally, for s  k/ log d, we use s!  (s/e)s to bound each summand as

3842 k d

log

d

qs/2

s!

s


384e2k ds

log

d

qs/2

s


384e2 d

log2

d

qs/2

s
.

Crucially, since s  k  (2 - ) logq d, we have qs/2  q(1-/2) logq d = d1-/2. Now, for sufficiently

large d  d0 the exponent base above is bounded by

384e2 log2 d d/2

 d-/7 < 1.

Therefore the

geometric series tells us that

k s=k/ log d

3842 k d

log

d

qs/2

s!

s



1 1 - d-/7

-1



2d-/7.

Altogether, we conclude that

F

P [A E [Y ]

|

A0 ]



exp

1042n log2 d d2

+ 2d-/7  exp

1042n log2 d2

d

+

2d-/7

,

completing the proof.

3 Concentration

In this section, we deduce Theorem 1.2 and Lemma 1.3 from Lemma 2.1. We will use Talagrand's

inequality. To state it, we need the following definitions. Given a product probability space

=

n i=1

i

(endowed

with

the

product

measure)

and

a

random

variable

X:





R,

we

say

that X is

6

· L-Lipschitz (for some L > 0) if for any ,    which differ only in one coordinate, we have |X() - X()|  L;
· f -certifiable (for a function f : N  N) if for every s and    such that X()  s, there exists a set I  [n] of size  f (s) such that X()  s for every  that agrees with  on the coordinates indexed by I.
Theorem 3.1 (Talagrand's inequality, see [1]). Suppose that X is L-Lipschitz and f -certifiable. Then, for all b, t  0,
P X  b - tL f (b) P [X  b]  exp -t2/4 .

Our probability space is of course G(n, p). Although this comes naturally as a product of

n 2

elementary probability spaces ij, one for each potential edge ij, it can be more effective,

depending on the problem, to consider a description that is vertex-oriented, where the edges

incident to a vertex are combined into one probability space ("vertex exposure"). Concretely,

for i  [n - 1], let i = j>i ij represent all edges from vertex i to vertices j > i. Then

G(n, p) =

n-1 i=1

i.

Note

here

that

the

vertices

are

ordered

to

describe

the

product

space

in

a

way that every edge appears exactly once. Apart from that, this ordering plays no role.

Proof of Theorem 1.2. Fix  > 0, a tree T , and assume d0 is sufficiently large. Let L = |V (T )| and d = np. We first show the upper bound, by arguing that whp every set of size at least
t = (2 + ) logq(np) spans at least t edges, which prevents us from finding any induced forest of order t. Indeed, the probability that a fixed t-set spans at most t edges is at most

(t + 1)

t 2
t

pt(1 - p)(2t)-t,

as the number of edges in such a set follows a binomial distribution Bin

t 2

,p

,

with

the

mean

being larger than t (where we used that p < 0.99). Hence we have that the expected number of

t-sets which span at most t edges is at most

(t + 1)

n t

t 2
t

pt(1 - p)(2t)-t  (t + 1)

en t

t

e

t 2

t

t

d n

t
d-(1+/3)t

< (t + 1)10td-t/3 = o(1).

We now turn to the lower bound. Let X be the maximum order of an induced T -matching
in G(n, p). Our goal is to show that X  (2 - ) logq d whp. Set b = (2 - /2) logq d. First, by Lemma 2.1, we have

P [X  b]  exp

-104L2

n

log2 d2

d

-

2d-()

.

This means that in the case d  n1/2 log2 n, we are already done. Assume now that d  n1/2 log2 n. Then the above bound simplifies to

P [X  b]  exp

-

n

log3 d2

d

.

(3.1)

Recall

also

that

in

the

regime

d

=

o(n)

we

have

logq

d



n d

log

d.

It is easy to check that X is L-Lipschitz and f -certifiable, where f (s) = s + L. Indeed,

adding or deleting edges arbitrarily at one vertex can change the value of X by at most L, hence

X is L-Lipschitz. Moreover, if X  s, this means there is a set I  [n] of size s  |I| < s + L

7

which induces a T -matching. If we leave the coordinates indexed by I unchanged, this means in

particular that I still induces a T -matching, hence Hence, Talagrand's inequality applied with t =

wne

still
log2 d

d

have X yields



s.

 P X  b - tL b + L P [X  b]  exp

-

n

log4 4d2

d

.

Together with (3.1) and since

 tL b

+

L



 n

log2

dL

d

2

n d

log d



n d

,

(3.2)

we

infer

that

the

probability

of

X



b-

n d

is

at

most

exp

-

n

log4 5d2

d

= on(1). This completes

the

proof

since

b

-

n d



(2

-

) logq

d.

In the above proof, we had some room to spare in (3.2). We will now exploit this to allow the component sizes to grow with d. The proof is almost verbatim the same, so we only point out the differences.
Proof of Lemma 1.3. Note that we are only interested in the case d  n1/2 log2 n and when T is a path of order L. Since (T )  2, Lemma 2.1 still provides the lower bound in (3.1). All we have to ensure now is that (3.2) still holds, and this is easily seen to be the case as long as L  d1/2/ log3 d.

4 Connecting

In this section, we use Lemma 1.3 to prove Theorem 1.1 as outlined in Section 1.1. Recall that we intend to define an auxiliary digraph on the components of a linear forest, where an edge corresponds to a suitable connection between two paths. Our goal is to find an almost spanning path in this random digraph. The tool which enables us to achieve this, Lemma 4.1 below, is based on the well-known graph exploration process depth-first-search (DFS). The usefulness of DFS to find long paths in random graphs was demonstrated by Krivelevich and Sudakov [19] in a paper where they give rather short and simple proofs of classical results in random graph theory. In our proof, we use the following straightforward consequence of DFS.

Lemma 4.1 ([2]). Let D be a digraph on N vertices and suppose that for any two disjoint sets S, T  V (D) of size k, there exists an edge directed from S to T . Then D contains a path of length N - 2k + 1.

Proof of Theorem 1.1. Fix  > 0 and assume that d  d0 is sufficiently large. We will

assume that d = o(n1/2 log2 n). For the case d = (n1/2 log n), Lemma 2.1 implies that whp

there

exists

an

induced

path

of

length

(2

-

)

n d

log

d.

We expose the random graph in several stages, and will after each step fix an outcome that

holds with high probability. First, we consider G  G(n, p) as the union of two independent

random

graphs

G1

and

G2,

where

G2



G(n, p2)

with

p2

=

n

d log

d

,

and

G1



G(n, p1)

with

p1

such that 1 - p = (1 - p1)(1 - p2). (Hence, G1  G2 has the same distribution as G.) Note that

clearly p1  p = d/n.

Fix a subset edges from G =

V0 G1

 [n] of size

n 2d

.

Now, in the

 G2 inside V0. The expected

first exposure round, number of edges is at

we reveal all

most

n 8d

,

and

random using a

standard Chernoff bound, it is easily seen that whp, the number of edges inside V0 is at most

n 6d

,

say.

From now

an independent set

on, fix I  V0

such an outcome. By

in

G[V0]

of

size

n 3d

.

deleting

a

vertex

from

each

edge,

we

can

find

8

In the second round, we expose all edges with one vertex in I and the other in [n] \ V0, but only those which belong to G1. The expected number of such edges is at most n/3. Using again a Chernoff bound, the number of G1-edges leaving I is at most 2n/5 whp. From now on, fix such an outcome. Let V1 = [n] \ (I  NG1(I)). Since |NG1 (I)| + |I|  n/2, we have |V1|  n/2.
In the third step, we reveal the random edges of G = G1  G2 inside V1. Now we apply Lemma 1.3 to G[V1]; we get that whp there exists an induced forest F of order

(2

-

)

p-1

log

(np/2)



(2

-

2)

n d

log

d



whose components are paths of order L = 

d log3 d

.

Again, we fix such F .

Note that F is

induced in G = G1  G2 and that I is independent in G = G1  G2. Moreover, by definition of

V1, we know that there are no edges in G1 between F and I.

In the fourth and final step, we reveal all the remaining random edges, which in particular

includes the G2-edges between F and I. Our goal is to use some vertices from I to connect most
of the paths of F into one long induced path. To achieve this, we define the following auxiliary digraph D. Give each of the component paths P of F an arbitrary direction, and let P - denote the initial L vertices and P + the last L vertices on P . Now, the vertex set of D is simply the

set of components of F . For two paths P1, P2, we include (P1, P2) as an edge in D if there exists a vertex a  I such that a has exactly one edge (of G2) to both P1+ and P2-, but no other edge

(of G2) to any vertex of F . Note that D is a random digraph. Our claim is that, with high

probability, it contains an almost spanning path. Let N = |V (D)| = 

n dL

log d

.

Consider

any

two disjoint sets S, T  V (D) of size N . For each a  I and all P1  S, P2  T , the probability

that a is a suitable connection from P1 to P2 is the sum of probabilities over the (L)2 possible

pairs to form a suitable connection (since those events are disjoint) and equals to

(Lp2)2(1 - p2)|F |-2  (Lp2)2e-2p2|F | =  2L2p22

since p2|F | = (1) by our choice of p2. Moreover, for distinct pairs (P1, P2) and fixed a, these

events are disjoint. Hence, the probability of a giving some good connection from S to T is

(4N 2L2p22) = (4). Finally, for distinct a, these events are determined by disjoint sets of edges, and hence independent, so the probability that there is no edge from S to T in D is at

most

1 - (4) |I|  exp -(4n/d) .

The total have that

number of choices for S and T is at L  log d/4, a union bound yields

most 4N

=

exp((

n dL

log d)).

Thus,

that whp, we can apply Lemma 4.1

since we to get a

path P1P2 . . . Pt in D of length (1 - 2)N . This translates to an induced path of G as follows:

for each i  [t - 1], since PiPi+1  E(D), there exists a vertex ai  I which has exactly one edge (of G2) to both Pi+ and Pi-+1, but no other edge (of G2) to any vertex of F . Clearly, the ai's are distinct, hence we obtain a path in G in the obvious way (start with P1, then from the appropriate vertex in P1+, go via a1 to P2-, follow P2, and then go from P2+ via a2 to P3-, etc.). As remarked earlier, there are no G1-edges between F and I, hence by the definition of E(D),
the path will be induced. Finally, from each Pi, we only lose at most 2L vertices, hence the
length of the path will be at least

(L

-

2L)(1

-

2)N

=

(1

-

2)2|F |



(2

-

O())

n d

log d,

completing the proof.

Remark 4.2. The condition in Lemma 4.1 actually implies also the existence of a cycle of length

N - 4k + 4 (since there is an edge from the last k vertices on the obtained path to the first k

vertices). Using this, in the above proof, we can connect the paths of F into an induced cycle of

length

(2

-

O())

n d

log

d.

9

5 Concluding remarks

· Our proof is not constructive, since the first part of the argument uses the second moment

method.

The

previously

best

bound



n d

log

d

due

to

Luczak

[21]

and

Suen

[27]

was

obtained via certain natural algorithms. It seems that this could be a barrier for such

approaches. A (rather unsophisticated) heuristic giving evidence is that when we have

grown an induced tree of this size, and assume the edges outside are still random, then

the expected number of vertices which could be attached to a given vertex of the tree is

less

than

one

for

|V (T )|



(1

+

)

n

log d

d

.

Moreover, such an "algorithmic gap" has been

discovered for many other natural problems. In particular, despite decades of research, no

polynomial-time

algorithm

is

known

which

finds

an

independent

set

of

size

(1

+

)

n d

log d

for any fixed  > 0, and evidence has emerged that in fact such an algorithm might not

exist (see e.g. [6, 17, 24]).

· In [7] it is conjectured that one should not only be able to find an induced path of size



2

n d

log d,

but

an

induced

copy

of

any

given

bounded

degree

tree

of

this

order.

For

dense

graphs, when d = (n1/2 log n), this follows from the second moment method (see [9]).

In fact, Lemma 2.1 shows that the maximum degree can even be a small polynomial.

On the contrary, the sparse case seems to be more difficult, mainly because the vanilla

second moment method does not work. However, Dani and Moore [8] demonstrated that

one can actually make the second moment method work, at least for independent sets, by

considering a weighted version. This even gives a more precise result than the classical one

due to Frieze [14]. It would be interesting to find out whether this method can be adapted

to induced trees.

Acknowledgement
The first two authors are grateful to Benny Sudakov for very useful discussions.

References
[1] N. Alon and J. H. Spencer, The probabilistic method, 4th ed., Wiley-Intersci. Ser. Discrete Math. Optim., Wiley, 2016.
[2] I. Ben-Eliezer, M. Krivelevich, and B. Sudakov, The size Ramsey number of a directed path, J. Combin. Theory Ser. B 102 (2012), 743­755.
[3] A. Beveridge, A. Frieze, and C. McDiarmid, Random minimum length spanning trees in regular graphs, Combinatorica 18 (1998), 311­333.
[4] B. Bollobás, The chromatic number of random graphs, Combinatorica 8 (1988), 49­55.
[5] B. Bollobás and P. Erds, Cliques in random graphs, Math. Proc. Cambridge Philos. Soc. 80 (1976), 419­427.
[6] A. Coja-Oghlan and C. Efthymiou, On independent sets in random graphs, Random Structures Algorithms 47 (2015), 436­486.
[7] O. Cooley, N. Dragani, M. Kang, and B. Sudakov, Large induced matchings in random graphs, SIAM J. Discrete Math. 35 (2021), 267­280.
[8] V. Dani and C. Moore, Independent sets in random graphs from the weighted second moment method, Approximation, randomization, and combinatorial optimization, Lecture Notes in Comput. Sci. 6845, Springer, 2011, pp. 472­482.
10

[9] N. Dragani, Large induced trees in dense random graphs, arXiv:2004.02800 (2020).

[10] K. Dutta and C. R. Subramanian, On induced paths, holes and trees in random graphs, 2018 Proceedings of the Fifteenth Workshop on Analytic Algorithmics and Combinatorics (ANALCO), SIAM, Philadelphia, PA, 2018, pp. 168­177.

[11] P. Erds and Z. Palka, Trees in random graphs, Discrete Math. 46 (1983), 145­150.

[12] W. Fernandez de la Vega, Induced trees in sparse random graphs, Graphs Combin. 2 (1986), 227­231.

[13]

, The largest induced tree in a sparse random graph, Random Structures Algorithms 9

(1996), 93­97.

[14] A. M. Frieze, On the independence number of random graphs, Discrete Math. 81 (1990), 171­175.

[15] A. M. Frieze and B. Jackson, Large holes in sparse random graphs, Combinatorica 7 (1987), 265­274.

[16]

, Large induced trees in sparse random graphs, J. Combin. Theory Ser. B 42 (1987),

181­195.

[17] D. Gamarnik and M. Sudan, Limits of local algorithms over sparse random graphs, Ann. Probab. 45 (2017), 2353­2376.

[18] G. R. Grimmett and C. J. H. McDiarmid, On colouring random graphs, Math. Proc. Cambridge Philos. Soc. 77 (1975), 313­324.

[19] M. Krivelevich and B. Sudakov, The phase transition in random graphs: a simple proof, Random Structures Algorithms 43 (2013), 131­138.

[20] L. Kucera and V. Rödl, Large trees in random graphs, Comment. Math. Univ. Carolin. 28 (1987), 7­14.

[21] T. Luczak, The size of the largest hole in a random graph, Discrete Math. 112 (1993), 151­163.

[22] T. Luczak and Z. Palka, Maximal induced trees in sparse random graphs, Discrete Math. 72 (1988), 257­265.

[23] D. W. Matula, The largest clique size in a random graph, Department of Computer Science, Southern Methodist University, Tech. Report CS 7608, 1976.

[24] M. Rahman and B. Virág, Local algorithms for independent sets are half-optimal, Ann. Probab. 45 (2017), 1543­1577.

[25] A. Ruciski, Induced subgraphs in a random graph, Ann. Discrete Math. 33 (1987), 275­296.

[26] E. Shamir and J. Spencer, Sharp concentration of the chromatic number on random graphs Gn,p, Combinatorica 7 (1987), 121­129.
[27] W. C. S. Suen, On large induced trees and long induced paths in sparse random graphs, J. Combin. Theory Ser. B 56 (1992), 250­262.

11

