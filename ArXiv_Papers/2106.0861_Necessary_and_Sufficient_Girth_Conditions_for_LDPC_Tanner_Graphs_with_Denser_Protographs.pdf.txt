Necessary and Sufficient Girth Conditions for LDPC Tanner Graphs with Denser Protographs
Anthony Gзmez-Fonseca, Roxana Smarandache, and David G. M. Mitchell Departments of Mathematics and Electrical Engineering, University of Notre Dame, Notre Dame, IN 46556, USA
{agomezfo, rsmarand}@nd.edu Klipsch School of Electrical and Computer Engineering, New Mexico State University, Las Cruces, NM 88003, USA
dgmm@nmsu.edu

arXiv:2106.00861v1 [cs.IT] 1 Jun 2021

Abstract--This paper gives necessary and sufficient conditions for the Tanner graph of a quasi-cyclic (QC) low-density paritycheck (LDPC) code based on the all-one protograph to have girth 6, 8, 10, and 12, respectively, in the case of parity-check matrices with column weight 4. These results are a natural extension of the girth results of the already-studied cases of column weight 2 and 3, and it is based on the connection between the girth of a Tanner graph given by a parity-check matrix and the properties of powers of the product between the matrix and its transpose. The girth conditions can be easily incorporated into fast algorithms that construct codes of desired girth between 6 and 12; our own algorithms are presented for each girth, together with constructions obtained from them and corresponding computer simulations. More importantly, this paper emphasizes how the girth conditions of the Tanner graph corresponding to a paritycheck matrix composed of circulants relate to the matrix obtained by adding (over the integers) the circulant columns of the parity-check matrix. In particular, we show that imposing girth conditions on a parity-check matrix is equivalent to imposing conditions on a square circulant submatrix of size 4 obtained from it.

I. INTRODUCTION

Optimized irregular quasi-cyclic (QC) low-density parity-

check (LDPC) codes are attractive for implementation pur-

poses due to their algebraic structure that allows for low

complexity encoding [1] and leads to efficiencies in decoder

design [2]. The performance of an LDPC code with parity-

check matrix H depends on cycles in the associated Tanner

graph, since cycles in the graph cause correlation during

iterations of belief propagation decoding. Moreover, these

cycles form substructures found in the undesirable trapping

and absorbing sets that create the error floor. Cycles have also

been shown to decrease the upper bound on the minimum

distance (see, e.g., [3]). Therefore, codes with large girth are

desirable for good performance (large minimum distance and

low error floor). Although significant effort has been made to

design QC-LDPC code matrices with large minimum distance

and girth, e.g., [4]Г[9], this can be particularly challenging

for optimized protographs that contain dense subgraphs, such

as those of the AR4JA codes [10] and 5G new radio LDPC

codes [11], which contain a significant number of variable

nodes with degree larger than 3.

In [12], we have used some previous results by McGowan

and Williamson [13] and the terminology introduced in Wu et

al. [14] that elegantly relate the girth of H with the girth of

Bn (H )

HHT n/2 H(n mod 2), n  1, to highlight the

role that certain submatrices of HHT play in the construction

of codes of desired girth. In particular, we showed that the cycles in the Tanner graph of a 2N О nvN parity-check matrix H based on the (2, nv)-regular fully connected (all-one) protograph, with lifting factor N , correspond one-to-one to the cycles in the Tanner graph of a N О N matrix, that we call C12, obtained from H. Similarly, we show that imposing girth conditions on a 3N ОnvN parity-check matrix is equivalent to imposing girth conditions on a 3N О 3N submatrix of HHT, which we call CH .
In order to investigate large girth constructions from dense protographs, this paper extends the results of [12] to the case nc = 4 and shows how the girth conditions of a 4N ОnvN parity-check matrix are reflected in the corresponding 4N О 4N submatrix CH of HHT, and in particular, in a column of CH given by the sum (over the integers) of the circulant columns of the parity-check matrix. Although we mostly assume the case of an (4, nv)-regular fully connected protograph, the results can be used to analyze the girth of the Tanner graph of a parity-check matrix of zeros and ones. Throughout, we exemplify the techniques and related algorithms by constructing the Tanner graphs of (4, 6)-regular QC-LDPC codes with girths of 6, 8, 10, and 12, and we conclude the paper with computer simulations of some of the constructed codes with varying block lengths and girths, confirming the expected robust error control performance.
We note that the motivation of the paper is not only to construct good (4, nv)-regular QC-LDPC codes, rather we aim to demonstrate that the approach from [12] can be extended to higher column weights and that similar efficient algorithms can be used to construct denser graphs (or sub-graphs) with large girth. As mentioned above, this is particularly important since capacity approaching LDPC codes with irregular protographs often have dense sub-graphs [10]. The necessary and sufficient girth conditions we present here provide a unifying framework for a given girth to be achieved in which all constructions must fit. The proposed algorithms to choose lifting exponents are extremely fast, in fact they can be evaluated by hand, and can be used to obtain codes of a given girth for the smallest graph lifting factor N . We remark that the technique can be incorporated with other complementary design approaches, such as pre-lifting [9] and masking [4] to construct irregular LDPC codes that have low error floors from the (nc, nv)regular protographs. Finally, note that the technique can also be modified to increase the minimum distance and/or mini-

mum trapping/absorbing set size since cycles appear in the composition of these structures.

II. DEFINITIONS, NOTATIONS AND BACKGROUND

For any positive integer L, let [L] = {1, 2, . . . , L}. An

LDPC code C can be described as the null space of a parity-

check matrix H, where C = {c | Hc = 0}. We can

associate a Tanner graph [15] to this matrix H in the usual

way. Its girth, denoted gir(H), is defined as the length of a

shortest cycle in the graph.

A protograph [10], [16] is a small bipartite graph that can

be represented by an nc Оnv parity-check or base biadjacency matrix B = (bij), where bij > 0 is an integer for each pair (i, j). The parity-check matrix H of a protograph-based LDPC

block code can be constructed from B in the following way:

each nonzero entry bij of B is replaced by a summation of
bij non-overlapping permutation matrices of size N О N , and
each zero entry is replaced by the N О N all-zero matrix. In this case we write H = BN and N is called the lifting

degree. Let xa (or Ia) denote the N ОN circulant permutation matrix obtained from the N О N identity matrix I by shifting

all its entries a positions to the left.

In this paper we use the triangle operator  introduced in

[14] defined as follows. For two nonnegative integers m and

n, define

mn

1 if m  2, n = 0 . 0 otherwise

This definition can be extended to matrices. Let M = (mij ) and N = (nij ) be two sО t matrices. Then we define the sО t matrix P = (pij ) M N entry-wise, where pij mijnij for all pair (i, j)  [s] О [t].
The following theorem found in [13] and [14] describes an important connection between gir(H) and matrices Bn(H) HHT n/2 H(n mod 2), n  1 and offers some insight on the inner structure of the Tanner graph which simplifies
considerably the search for QC protograph-based codes with
large girth and minimum distance.

Theorem 1. ([13] and [14]) A Tanner graph of an LDPC code with parity-check matrix H has gir(H) > 2g if and only if Bt(H)Bt-2(H) = 0, t = 2, 3, . . . , g.

III. CONSTRUCTING 4 О nv PROTOGRAPH-BASED QC CODES OF GIVEN GIRTH g  12

In this section, we will construct QC matrices by lifting a 4 О nv protograph, give the conditions required to obtain girth 6  g  12, and provide some algorithms to generate these
conditions. Let H be the parity-check matrix of an ncN О nvN , nc <
nv, protograph-based LDPC code given by

I I и и и I 

H

=

I I

P22 P32

иии иии

P2nv P3nv

 

.

(1)

I P42 и и и P4nv

For each i, j  [4], let Pi1 = I for all i  {2, 3, 4} and Cij = Cji Pi1Pj1 + Pi2Pj2 + и и и + Pinv Pjnv (2)

and define

 0 C12 C13 C14

CH

C21 C31

0 C32

C23 0

C24 C34

 

.

(3)

C41 C42 C43 0

The following theorem characterizes the connection between the matrix CH and gir(H), derived from the relation established in Theorem 1 between gir(H) and the matrices Bn (H ).
Theorem 2. Let H, Cij and CH be defined as in (1), (2) and (3), respectively. Then

gir(H) > 4  CH 0 = 0,

gir(H) > 6  CH 0 = 0 & CH HH = 0,

gir(H) > 8  CH 0 = 0 & CH2 (I + CH ) = 0,

gir(H gir(H

) )

> >

10 12

 

gir(H gir(H

) )

> >

8 10

& &

CCH2H3 H(I(+H

+ CH CH +

H) CH2

= 0, ) = 0.

Proof: Note that

B2(H) = HHT = nvI + CH , B3(H) = nvH + CH H, B4(H) = (nvI + CH )2, B5(H) = (nvI + CH )2H, B6(H) = (nvI + CH )3, etc..

We obtain the following equivalences, completing the proof:

B2(H)I = 0  CH 0 = 0;

B3(H)B1(H) = 0  CH HH = 0;

B4(H)B2(H) = 0  (nvI + CH )2(nvI + CH ) = 0

 CH2 (I + CH ) = 0; B5(H)B3(H) = 0  (nvI + CH )2H(nvI + CH )H = 0

 CH2 H(H + B6(H)B4(H) = 0

CH H) = 0;  (nvI + CH )3(nvI

+

CH )2

=

0

 CH3 (I + CH + CH2 ) = 0.

Remark 3. Note that, for practical implementation, it is desirable to take each Pij to be a circulant xl, for some l, or a permutation matrix lifted to some circulants, for example, H = (xl)N . In the remainder of the paper, we consider the
first case. The second case was investigated in the case of
nc = 3 in [9], [12] and is left to future work for nc > 3.

Suppose that each matrix Pij is a circulant permutation matrix, that is P2l = xil , P3l = xjl , P4l = xkl , for all l  [nv], with i1 = j1 = k1 = 0. The associated polynomial matrix H(x) is then

1 1 и и и 1 

H

(x)

=

1 1

xi2 xj2

иии иии

xinv xjnv

  

.

(4)

1 xk2 и и и xknv

Consider the polynomial matrices Cij (x) and CH (x) associated with the QC-scalar matrices Cij and CH , then Cij(x) =

CjTi(x) for all i, j  [nc], where



nv

nv

nv

C21 = xil , C31 = xjl , C41 = xkl ,



l=1

l=1

l=1

nv

nv

nv

C31 =

xjl-il , C42 =

xkl-il , C43 =

xkl-jl .



l=1

l=1

l=1

(5)

Remark 4. Note that the transpose of the matrix

nvI C12 C13 C14

is equal to the sum of the nv circulant columns of H and has an important role in the girth, as we see in Theorem 2.

Theorem 5. Let H(x) and CH (x) be defined as in (4) and (3), respectively. Then gir(H(x)) > 4 if and only if each one of the
six sets {i1, i2, . . . , inv }, {j1, j2, . . . , jnv }, {k1, k2, . . . , knv }, {i1-j1, i2-j2, . . . , inv -jnv }, {i1-k1, i2-k2, . . . , inv -knv } and {j1 - k1, j2 - k2, . . . , jnv - knv } contains exactly nv
distinct elements.

Proof: By Theorem 2, gir(H) > 4 if and only if
CH 0 = 0. This is equivalent to Cij (x)0 = 0 for all 1  i < j  4. Expanding each of these equations, we obtain

nv
xil 0 = 0,
l=1

nv
xjl 0 = 0,
l=1

nv
xkl 0 = 0,
l=1

nv
xil-jl 0 = 0,

nv
xil-kl 0 = 0,

nv
xjl-kl 0 = 0.

l=1

l=1

l=1

By using the definition of the triangle operator , we conclude that, for each equation, the exponents should be distinct and the claim follows.

To choose the exponents il, jl, and kl satisfying the conditions in Theorem 5, we provide the following algorithm to construct a (4, nv)-regular graph with g > 4. In this algorithm, we first choose i1, j1, k1 such that they are not in the specified forbidden sets, i.e., sets of values that would create a cycle of
size below the desired girth, then we choose i2, j2, k2, then we choose i3, j3, k3, and so on.

Algorithm 6. (Construct (4, nv)-regular graph with g > 4) Step 1: Set i1 = 0, j1 = 0 and k1 = 0. Set l = 1. Step 2: Let l := l + 1. Choose
il / {im | 1  m  l - 1} jl / {jm, il + (jm - im) | 1  m  l - 1} kl / {km, il +(km -im), jl +(km -jm) | 1  m  l -1} Step 3: If l = nv stop; otherwise go to Step 2.

Example 7. In this example, we construct a 4 О 6 protograph-

based matrix using Algorithm 6. In each iteration l, 2  l 

nv, we choose the smallest positive value for each of il, jl,

and kl. We obtain 1 1 1 1 1 1 

H (x)

=

1  1

x x2

x2 x

x3 x5

x4 x7

x5 
x3

.

1 x3 x5 x x9 x2

If we choose lifting degree N = 1mlax6{il, jl, kl} +1 = 10, then H(x) has girth 6.

Example 8. Using Algorithm 6, we construct a protographbased matrix as in Example 7. In each iteration l, 2  l  nv, however, we choose each of il, jl, and kl to be one more than the maximum value in their corresponding forbidden sets. We
obtain

1 1 1 1 1 1 

H

(x)

=

1  1

x x2

x2 x4

x3 x6

x4 x8

x5 x10

 

.

(6)

1 x3 x6 x9 x12 x15

If we let N = max {il, jl, kl} + 1 = 16, then the girth
1l6
of H(x) is 6. Notice that N = 16 is not the smallest positive value for which gir(H(x)) > 4. If we choose N = 7, then gir(H(x)) = 6. We note that (6) is a shortened version of Fan's array construction [17] that gives g = 6 for N = 7.
Theorem 9. Let H(x) and CH (x) be defined as in equations (4) and (3), respectively. Then gir(H(x)) > 6 if and only if, for any m  [nv], each one of these four sets contains distinct elements:
{im - in, jm - jn, km - kn | n  [nv], n = m},

{in, in -jn +jm, in -kn +km, ip +(jn -jm)+(km -kp) | n, p  [nv], p = m, n = m},

{jn, jn -in +im, jn -kn +km, jp +(in -im)+(km -kp) | n, p  [nv], p = m, n = m},

{kn, kn -in +im, kn -jn +jm, kp +(in -im)+(jm -jp) | n, p  [nv], p = m, n = m}.

Algorithm 10. (Construct (4, nv)-regular graph with g > 6) Step 1: Set i1 = 0, j1 = 0 and k1 = 0. Set l = 1. Step 2: Let l := l + 1. Choose
il / {im, (im - jm) + jn, (jm - km) + (kn - jn) + ip, (im - km) + kn, (km - jm) + (jn - kn) + ip | 1  m, n, p  l - 1} jl / {jm, il + jm - in, im + (jn - in), (im - km) + (kn - in) + jp, il +(km -im)+(jn -kn), (jm -km)+kn, il +(jm -km)+ kn - ip, 2il + (km - im)+ (jn - kn)- ip | 1  m, n, p  l - 1} kl / {km, jl + km - jn, il + km - in, jl + (im - jm) + (in - kn), im + (kn - in), jl + im - jn + (kp - ip), 2jl + (im - jm) + (kn - in) - jp, (km - jm) + jn, il + (jm - im) + (kn - jn), il + (km - jm) + jn - ip, 2il + (jm - im) + (kn - jn) - ip | 1  m, n, p  l - 1}
Step 3: If l = nv stop; otherwise go to Step 2.

Example 11. In this example, we construct a 4О6 protographbased matrix using Algorithm 10. In each iteration l, 2  l  nv, we choose the smallest positive value for each of il, jl, and kl as we did in Example 7. We obtain

1 1 1 1 1 1 

H (x)

=

1  1

x x3

x5 x14

x8 x29

x10 x49

x25 x96

 

.

(7)

1 x4 x2 x36 x55 x108

If we choose lifting degree N = 1mlax6{il, jl, kl} + 1 = 109, then H(x) has girth 8. The smallest positive integer N required to obtain gir(H(x)) > 6 is N = 85. Simulation results are provided for codes obtained from (7) with N = 85 and N = 347 in Section IV.

Example 12. If we choose values of il, jl, and kl one more than the maximum value in their corresponding forbidden sets (instead of choosing the smallest positive value for each of il, jl, and kl, as in Example 11) we obtain the following matrix

1 1 1 1 1

1

H (x)

=

1  1

x x3

x8 x23

x54 x154

x355 x1011

x2324 x6617

 

.

1 x7 x53 x354 x2323 x15203

For these circulants, N = 111 is the smallest value that can obtain this girth.
Reducing the exponents modulo 111, we obtain

1 1 1 1 1 1 

H

(x)

=

1  1

x x3

x8 x23

x54 x43

x22 x12

x104 
x68 

,

(8)

1 x7 x53 x21 x103 x107

which also has girth 8 for N = 111. Note that the smallest positive integer to obtain girth 8 in (8) is now N = 105. Simulation results are provided for codes obtained from (8) with N = 111 and N = 347 in Section IV.

Theorem 13. Let H(x) and CH (x) be defined as in (4) and (3), respectively. Then gir(H(x)) > 8 if and only if gir(H(x)) > 4 and each one of these sixteen sets contains distinct elements, for all u, w  [nv], u = w:

{(iu-ju)+jw, (iu-ku)+kw}, {(ju-iu)+iw, (ju-ku)+kw}, {(ku-iu)+iw, (ku-ju)+jw}, {(ju-iu)-jw, (ku-iu)-kw}, {ju-iw, (ju-ku)-(iw-kw)}, {ku-iw, (ku-ju)-(iw-jw)}, {(iu-ju)-iw, (ku-ju)-kw}, {iu-jw, (iu-ku)-(jw -kw)}, {ku-jw, (ku-iu)-(jw -iw)}, {(iu-ku)-iw, (ju-ku)-jw}, {iu - kw, (iu - ju) - (kw - jw)}, {iu - iw, ju - jw, ku - kw}, {ju - jw, (iu - ju) - (iw - jw), (ju - ku) - (jw - kw)}, {ku - kw, (iu - ku) - (iw - kw), (ju - ku) - (jw - kw)}, {iu - iw, (iu - ju) - (iw - jw), (iu - ku) - (iw - kw)}, {ju - kw, (ju - iu) - (kw - iw)}.

Example 14. We construct a 4 О 6 matrix H using an algorithm derived from Theorem 13, where, at each iteration l, l  [nv], we choose the smallest possible positive value for each of il, jl, kl, as we did in Examples 7 and 11.1 We obtain

1 1 1 1 1 1 

H

(x)

=

1  1

x x3

x9 x21

x28 x54

x41 x98

x75 
x180 

.

1 x7 x38 x93 x162 x297

If we choose N = 2 1mlax6{il, jl, kl} +1 = 595, then H(x) has girth 10. The smallest N required to obtain gir(H(x)) > 8 is N = 347. The resulting code is simulated in Section IV.
1Due to space constraints, we omit algorithms corresponding to Theorems 13 and 15; they can be written in the same way as Algorithms 6 and 10.

Theorem 15. Let H(x) and CH (x) be defined as in equations (4) and (3), respectively. Then gir(H(x)) > 10 if and only if gir(H(x)) > 8 and, for any l  [nv], each one of these four sets contains distinct elements:

{iu - iw, ju - jw, ku - kw, il + (ju - iu) - jw, il + (ku - iu) - kw, jl + (iu - ju) - iw, jl + (ku - ju) - kw, kl + (iu -ku)-iw, kl +(ju -ku)-jw | u, w  [nv], u = w, u = l},
{(iu - ju) + jw, (iu - ku) + kw, il + iu - iw, il + (iu - ju) - (iw - jw), il + (iu - ku) - (iw - kw), jl + iu - jw, jl + (iu - ku) - (jw - kw), kl + iu - kw, kl + (iu - ju) - (kw - jw) | u, w  [nv], u = w, w = l},
{(ju - iu) + iw, (ju - ku) + kw, il + ju - iw, il + (ju - ku) - (iw - kw), jl + ju - jw, jl + (iw - jw) - (iu - ju), jl + (ju - ku) - (jw - kw), kl + ju - kw, kl + (ju - iu) - (kw - iw) | u, w  [nv], u = w, w = l},
{(ku - iu) + iw, (ku - ju) + jw, il + ku - iw, il + (ku - ju) - (iw - jw), jl + ku - jw, jl + (ku - iu) - (jw - iw), kl + ku - kw, kl + (iw - kw) - (iu - ku), kl + (jw - kw) - (ju - ku) | u, w  [nv], u = w, w = l}.
Example 16. In this example, we construct a 4О6 protographbased matrix using an algorithm derived from Theorem 15. In each iteration l, 2  l  nv, we choose the smallest positive value for each of il, jl and kl. We obtain

1 1 1 1 1 1 

H (x)

=

1  1

x x3

x12 x31

x45 x126

x147 x320

x445 x980

 

.

1 x7 x67 x231 x636 x1626

If we choose N = 2 1mlax6{il, jl, kl} + 1 = 3253, then H(x) has girth 12, however, the smallest N required to obtain gir(H(x)) > 10 is N = 1881. The resulting code is simulated in Section IV.
Remark 17. We note that we could also use a computer to search for the possible values in the same way, one by one, with techniques such as progressive edge growth (PEG) [18], but the last values in the matrix are hard to obtain, particularly as the density of the protograph increases. However, the proposed algorithms immediately give the next possible value and can be modified to return the size N needed in a similar way to the formulation in [12]. The algorithms can also be modified so that a random value among the possible is chosen at each time in order to optimize the performance. Or it can be chosen such that the smallest possible value can be taken at each point so that the smallest N is obtained. If a choice is not possible at some point for a desired N , backtracking can be added to pick a different value at a previous step, until a value is available at the current step. Finally, we note that the algorithm can also be modified to increase the minimum distance and/or minimum trapping/absorbing set size since cycles appear in the composition of these structures.

100

10-2

10-4

10-6

10-8

10-10

0

0.5

1

1.5

2

2.5

3

3.5

Fig. 1. Simulated decoding performance in terms of BER for the R  1/3, (4, 6)-regular QC-LDPC codes from Examples 11-16.
IV. SIMULATION RESULTS
To verify the performance of the constructed codes, computer simulations were performed assuming binary phase shift keyed (BPSK) modulation and an additive white Gaussian noise (AWGN) channel. The sum-product message passing decoder was allowed a maximum of 100 iterations and employed a syndrome-check based stopping rule.
In Fig. 1, we plot the bit error rate (BER) for several R  1/3 (4, 6)-regular QC-LDPC codes from Examples 1116 with varying code lengths and girth. For comparison, we selected a larger lifting factor than the minimum for the codes from Examples 11 and 12 with (N = 347 corresponding to block length n = 2082, both codes retain g = 8) to match the block length of the g = 10 code from Example 14. We note that the girth g = 8 codes have similar performance, and a slightly better waterfall, than the girth 10 code, but they also display the beginning of an error floor at 3.25dB. The Example 14 and 16 codes with girth g = 10 and g = 12, respectively, display no indication of an error-floor, at least down to respective BERs of 10-8 and 10-7. The Example 16 code with g = 12 has a larger lifting factor N = 1881 and the resulting code with block length n = 11286 shows a waterfall approximately 0.58dB from the iterative decoding threshold (1.67dB) for (4, 6)-regular LDPC codes [19] at a BER of 10-7.
V. CONCLUDING REMARKS
In this paper we gave necessary and sufficient conditions for the Tanner graph of a protograph-based QC-LDPC code with column weight 4 to have girth 6  g  12, successfully extending the approach of [12] to denser protographs. The girth conditions were used to write fast algorithms which were exemplified by constructing the Tanner graphs of (4, 6)regular QC-LDPC codes with girths of 6, 8, 10, and 12. The necessary and sufficient girth conditions we presented provide a unifying framework for a given girth to be achieved in which all constructions must fit. Obtaining large girth for relatively dense graphs is a challenging and important topic since capacity approaching irregular LDPC codes often

have such sub-graphs in the protograph. Future work involves
extending the techniques in this paper to optimized irregular
protographs to achieve large girth and low error floors.
ACKNOWLEDGEMENTS
This material is based upon work supported by the National
Science Foundation under Grant Nos. OIA-1757207 and HRD-
1914635. A. G. F. thanks the support of the GFSD (formerly
NPSC) and Kinesis-Fernрndez Richards fellowships.
REFERENCES
[1] Z. Li, L. Chen, L. Zeng, S. Lin, and W. H. Fong, "Efficient encoding of quasi-cyclic low-density parity-check codes," IEEE Transactions on Communications, vol. 54, no. 1, pp. 71Г81, Jan. 2006.
[2] Z. Wang and Z. Cui, "A memory efficient partially parallel decoder architecture for quasi-cyclic ldpc codes," IEEE Transactions on Very Large Scale Integration (VLSI) Systems, vol. 15, no. 4, pp. 483Г488, Apr. 2007.
[3] R. Smarandache and P. O. Vontobel, "Quasi-cyclic LDPC codes: Influence of proto- and Tanner-graph structure on minimum Hamming distance upper bounds," IEEE Transactions on Information Theory, vol. 58, no. 2, pp. 585Г607, Feb. 2012.
[4] J. Xu, L. Chen, I. Djurdjevic, S. Lin, and K. A. S. Abdel-Ghaffar, "Construction of regular and irregular LDPC codes: Geometry decomposition and masking," IEEE Transactions on Information Theory, vol. 54, no. 1, pp. 121Г134, Jan. 2007.
[5] R. M. Tanner, D. Sridhara, A. Sridharan, T. E. Fuja, and D. J. Costello, Jr., "LDPC block and convolutional codes based on circulant matrices," IEEE Transactions on Information Theory, vol. 50, no. 12, pp. 2966Г 2984, Dec. 2004.
[6] S. Kim, J.-S. No, H. Chung, and D.-J. Shin, "Quasi-cyclic low-density parity-check codes with girth larger than 12," IEEE Transactions on Information Theory, vol. 53, no. 8, pp. 2885Г2891, Aug. 2007.
[7] H. Park, S. Hong, J.-S. No, and D.-J. Shin, "Design of multiple-edge protographs for QC LDPC codes avoiding short inevitable cycles," IEEE Transactions on Information Theory, vol. 59, no. 7, pp. 4598Г4614, July 2013.
[8] M. Karimi and A. H. Banihashemi, "On the girth of quasi-cyclic protograph LDPC codes," IEEE Transactions on Information Theory, vol. 59, pp. 4542Г4552, 2013.
[9] D. G. M. Mitchell, R. Smarandache, and D. J. Costello, Jr., "Quasicyclic LDPC codes based on pre-lifted protographs," IEEE Transactions on Information Theory, vol. 60, no. 10, pp. 5856Г5874, Oct. 2014.
[10] D. Divsalar, S. Dolinar, C. Jones, and K. Andrews, "Capacityapproaching protograph codes," IEEE Journal on Selected Areas in Communications, vol. 27, no. 6, pp. 876Г888, Aug. 2009.
[11] T. Richardson and S. Kudekar, "Design of low-density parity check codes for 5G new radio," IEEE Communications Magazine, vol. 56, no. 3, pp. 28Г34, 2018.
[12] R. Smarandache and D. G. M. Mitchell, "Necessary and sufficient girth conditions for Tanner graphs of quasi-cyclic LDPC codes," in IEEE International Symposium on Information Theory, accepted, 2021. [Online]. Available: https://arxiv.org/abs/2105.03462
[13] J. McGowan and R. Williamson, "Loop removal from LDPC codes," in Proc. IEEE Information Theory Workshop, Paris, France, 2003, pp. 230Г233.
[14] X. Wu, X. You, and C. Zhao, "A necessary and sufficient condition for determining the girth of quasi-cyclic LDPC codes," IEEE Transactions on Communications, vol. 56, pp. 854Г857, 2008.
[15] R. M. Tanner, "A recursive approach to low complexity codes," IEEE Transactions on Information Theory, vol. 27, no. 5, pp. 533Г547, Sept. 1981.
[16] J. Thorpe, "Low-density parity-check (LDPC) codes constructed from protographs," Jet Propulsion Laboratory, Pasadena, CA, INP Progress Report 42-154, Aug. 2003.
[17] J. L. Fan, "Array codes as low-density parity-check codes," in Proc. International Symposium on Turbo Codes and Related Topics, Brest, France, Sept. 2000.
[18] X.-Y. Hu, E. Eleftheriou, and D. M. Arnold, "Regular and irregular progressive edge-growth Tanner graphs," IEEE Transactions on Information Theory, vol. 51, no. 1, pp. 386Г398, Jan. 2005.
[19] T. J. Richardson and R. L. Urbanke, Modern coding theory. Cambridge University Press, 2008.

