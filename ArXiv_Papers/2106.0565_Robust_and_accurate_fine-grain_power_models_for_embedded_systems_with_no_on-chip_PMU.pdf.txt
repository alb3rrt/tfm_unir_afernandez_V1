Robust and accurate fine-grain power models for embedded systems with no on-chip PMU
Kris Nikov, Marcos Mart´inez, Zbigniew Chamski, Kyriakos Georgiou, Jose Nunez-Yanez, and Kerstin Eder

arXiv:2106.00565v1 [cs.DC] 26 May 2021

Abstract--This paper presents a novel approach to eventbased power modelling for embedded platforms that do not have a Performance Monitoring Unit (PMU). The method involves complementing the target hardware platform, where the physical power data is measured, with another platform on which the CPU performance data, that is needed for model generation, can be collected. The methodology is used to generate accurate fine-grain power models for the the Gaisler GR712RC dual-core LEON3 fault-tolerant SPARC processor with on-board power sensors and no PMU. A Kintex UltraScale FPGA is used as the support platform to obtain the required CPU performance data, by running a soft-core representation of the dual-core LEON3 as on the GR712RC but with a PMU implementation. Both platforms execute the same benchmark set and data collection is synchronised using per-sample timestamps so that the power sensor data from the GR712RC board can be matched to the PMU data from the FPGA. The synchronised samples are then processed by the Robust Energy and Power Predictor Selection (REPPS) software in order to generate power models. The models achieve less than 2% power estimation error when validated on an industrial use-case and can successfully follow program phases, which makes them suitable for runtime power profiling.
Index Terms--GR712RC, LEON3, ASIC, FPGA, embedded systems, power models, PMC, linear regression, real-time
I. INTRODUCTION
Power analysis enables hardware designers and software developers to optimise the energy consumption of embedded systems. Robust and accurate power models are fundamental in this context, with Performance Monitoring Unit (PMU) event-based power modeling being a widely used technique both for CPU as well as full system modeling [1]­[3]. Rodrigues et al. [1] present a systematic review of common PMU events, also referred to as Performance Monitoring Counters (PMCs), used in modern microprocessors and show their effectiveness in characterising and modelling dynamic power consumption. The challenge is how to develop accurate power models for systems without an available on-chip PMU. The work presented here introduces an innovative, dual-platform approach that can be used to model power in such platforms, and includes full model validation against physical power measurements. In the case of satellite communications, energy efficiency is a critical aspect with development focusing on
K. Nikov, K. Georgiou, Z. Chamski, J. Nunez-Yanez and K. Eder are with the University of Bristol, UK. (email: kris.nikov@bristol.ac.uk, kyriakos.georgiou@bristol.ac.uk, zbigniew.chamski@bristol.ac.uk, j.l.nunezyanez@bristol.ac.uk, kerstin.eder@bristol.ac.uk)
Marcos Mart´inez is with Thales Alenia Space, Madrid, Spain. (email: marcos.martinezalejandro@thalesaleniaspace.com)

processors such as the LEON3 microprocessor. The dualplatform methodology was used to characterise the power consumption of the LEON3 on the GR712RC development platform [4], which does not have an on-chip PMU. However, the techniques described in this paper can be applied to other open embedded hardware platforms with no PMU.
Existing research towards energy models for the LEON3 processor include instruction-level energy models for a custom LEON3 design [5]. The program execution and energy consumption data is generated using an RTL gate-level simulator targeting a 90nm implementation at 400Mhz CPU core frequency. The models are validated using a cycle accurate instruction set simulator, achieving a worst-case estimation error of ±12% when compared to the gate-level design simulation. Another power estimation approach for the LEON3 [6] achieved an average error between 1.5% and 2.1%. The authors used FPGA emulation for a custom design at 25Mhz operating frequency to obtain hardware counter measurements and use an external gate-level power analysis tool for power estimates. Instead of instruction-level analysis, they used the LEON3 Statistics Unit, L3STAT [7], to source a set of 14 event counters that are then used for energy consumption modelling. Both approaches achieve low model errors compared to simulation-based power estimation, but lack validation against hardware measurements, which is essential to gain confidence in the accuracy of the models.
A similar dual-platform approach based on real hardware measurements together with event data collected from a cycleaccurate instruction set emulator has been used to generate PMC-based energy models for the Arm Cortex-M0 processor [8]. However, these models use samples with coarser granularity and are not suitable for run-time profiling.
This paper offers the following scientific contributions:
1) A dual-platform approach to collect PMCs from an FPGA soft-core implementation and to synchronize these with direct power measurements from a physical board using per-sample timestamps to enable fine-grain PMC-based power modeling for hardware platforms with no on-chip PMU.
2) A detailed power model for the LEON3 processor that has undergone comprehensive validation against hardware power measurements.
3) Portable, modular, open-source model generation software, named Robust Energy and Power Predictor Selection (REPPS) [9], that implements several automatic search algorithms along with k-fold cross validation in

order to identify the optimal selection of PMCs for the model.
II. POWER MODELING METHODOLOGY

Precompiled Workloads
PMU Counter List
Platform Configuration

A. Data Collection and Synchronisation

Physical Power Sensors on ASIC

Sensor Data

PMU Counters on

PMC

FPGA

Data

Dual Platform Data Collection

Data Synchroni-
sation

Model Validation

Use-Case Workload Data

Model

Optimisation Criteria

Generation

Model PMCs and Coefficients

Data Analysis

Search Algorithms

B. Model Generation and Validation

Timestamped PMC Data with
associated Power Sensor Measurements

Fig. 1: Power modeling methodology stages.

The power modeling methodology is comprised of two stages: A. Data Collection and Synchronisation and B. Model Generation and Validation. Both stages and their respective subprocesses are shown in Figure 1.
A. Data Collection and Synchronisation
1) Platform Configuration: The first step of the methodology involves setting up both the ASIC and FPGA hardware platforms to be used in tandem to collect the necessary data for model generation.
The target ASIC is the GR712RC evaluation board, used both in research and commercial environments, predominantly in the space industry. The specific platform is ideal for evaluating the model generation methodology, since the onchip LEON3 CPU RTL design is available under the GNU GPL license, allowing free and unlimited use for research and education. The LEON3 CPU on the platform features a custom dual-core implementation of the 32-bit SPARC V8 ISA [10], equipped with fault and radiation resistant technologies, making it suitable for outer space operations. This processor implementation does not include a PMU, but the ASIC offers on-board power sensors. The PMU IP available for the LEON3 processors is the LEON3 Statistics Unit, L3STAT [7], which offers a configurable number of (up to 64) 32-bit counters that can count events in the processor core or the AHB bus of the LEON3. This processor design is synthesised together with the L3STAT unit on a Kintex UltraScale KU060 FPGA [11] for the collection of the event counts, while power measurements are obtained from the GR712RC development board.
For this dual-platform approach to work, it is critical to ensure that the synthesised processor matches the behaviour of the hardware implementation on the GR712RC that is to be modeled. The main features of the LEON3 on both platforms are a 16KiB (4x4kB) multi-way instruction cache, 16KiB (4x4kB) multi-way data cache and a 80MHz frequency clock. There are two significant differences between the processor on the development board and its FPGA synthesised version.

The LEON3 on the GR712RC has a high-performance doubleprecision IEEE-754 floating-point unit, which is not open source, i.e. not included in the RTL distribution. To be able to run the exact program compilation on both platforms, the hardware FPU is disabled through compilation options and a software library is used instead to compute floating point operations. Also, the memory read and write timing is different, which does not allow the FPGA to run at the same speed as the development board, 80MHz. Thus, it is necessary to extend the timing of memory operations to five clock cycles from the regular two clock cycles on the GR712RC board. The FPGA implementation requires three wait states to be able to run programs at 80MHz and execution time is the same as on the ASIC platform, with a delta of a few microseconds. The GRMON [7] debugger was used to control and monitor the LEON3 CPUs in both setups.
2) PMU Counter List: The modelling methodology requires a list of supported counters that can be collected using the soft-core CPU implementation on the supporting FPGA platform. The L3STAT unit for the LEON3 can monitor the 16 CPU-specific PMU counters shown in Table I.

# Counter

# Counter

# Counter

C0 TIME

C6 AINST

C12 CALL

C1 ICMISS

C7 IINST

C13 TYPE2

C2 ICHOLD

C8 BPMISS

C14 LDST

C3 DCMISS

C9 AHBUTIL C15 LOAD

C4 DCHOLD C10 AHBTUTIL C16 STORE

C5 WBHOLD C11 BRANCH

TABLE I: PMCs available for the LEON3 power model.

3) Precompiled Workloads: In order to obtain the necessary data for successful platform power modelling, the workloads used to exercise the target CPU need to be carefully selected.
The BEEBS benchmark suite [12] is an open-source benchmark suite designed for performance and energy consumption analysis of embedded architectures. It includes several subsets of workloads, representing a diverse variety of embedded applications, making it suitable as a model training set. Having a diverse training software profile is critical in ensuring that the model is robust, flexible and not over-fitted to a specific application type. The set of benchmarks used for training consists of 50 distinct workloads from BEEBS, that were successfully compiled and executed on the target platform. The benchmarks were executed four times each to obtain statistically robust measurements. The training data has over 288000 sample points. The average execution time variation between the four runs is 0.34% for both CPU and FPGA implementations.
The models were evaluated on a proprietary computer vision algorithm used in space satellite imaging. There are four different compiled versions of this algorithm, obtained using two different compilers and levels of optimisation. The four binaries are executed three times each resulting in a test set of over 23000 sample points. A detailed list of the train and test benchmark sets, as well as individual workload execution times is available in the project code repository [9].

4) Data Synchronisation: The most critical part of the dualplatform setup is to ensure that the power sensor data from the ASIC corresponds to the correct PMC data from the FPGA. The cross-platform synchronisation methodology for the target platform consists of the following steps:
1) Configure the FPGA with the LEON3 and L3STAT. 2) Initialise the processor on the FPGA with three wait
states on the memory access using GRMON. 3) Set up the L3STAT for polling the available PMCs as fast
as possible, collecting around 95 samples per second. The sampling rate is not deterministic due to the cache on the computer side. 4) Load and run the benchmarks on the FPGA and store the PMC data. 5) Take the TIME counter and feed it to the processor power measurement unit in order to specify the precise sample ticks so the power sample timestamps match the PMU data timestamps. 6) Initialise the processor on the GR712RC with three wait states on the memory access using GRMON. 7) Run the benchmark on the ASIC and store the power measurements. 8) For the same value of the TIME counter, associate the sensor data with the corresponding PMC data.
B. Model Generation and Validation
The second stage of the methodology uses the data generated by the previous stage. The model generation software is an extension of [13], adapted to the model data obtained using the dual-platform setup. All code is open-source and available online [9].
1) Optimisation Criteria and Search Algorithms: The methodology uses two search algorithms to find the optimal power model from the collected PMC data. The metric to optimise is the Mean Absolute Percentage Error (MAPE).
The first algorithm uses a bottom-up strategy. It traverses the list of available PMCs and adds the best PMC, according to the chosen optimisation criteria (minimising the MAPE), to the model after every completed iteration of the list. The methodology provides the ability to choose an initial set of events to start from, as well as the maximum number of events to include in the computed model. The second algorithm is a top-down approach, with starts from a user-selected list of PMCs and removes, at each iteration, the PMC which reduces the model MAPE the most.
Both search algorithms perform k-fold-cross-validation [14] on the training set each time a new candidate PMC is analysed for inclusion into or removal from the model. At each search step, the average model MAPE across all the folds is used as the model performance metric to optimise. The final set of model coefficients are calculated on the full set of training samples.
2) Data Analysis: Ordinary Least Squares (OLS) [15] linear regression is used to generate a model as shown in Equation 1, where the coefficients, x, are obtained for each PMC, Cx, and  is the error term. The estimated power

dissipation, P , can then be calculated based on the PMC values for a given program and its inputs.

P =  + 1 × C1 + . . . + n × Cn

(1)

3) Model Validation: The accuracy of the model is validated using PMU data from the test set. The measured power values for the test set are then compared to the power estimations obtained from the model. The prediction accuracy of the power models can then be assessed using the MAPE.

III. EXPERIMENTAL RESULTS
Both bottom-up and top-down search algorithms are used for model PMC selection and the resulting models are compared to a model which only uses frequency data from the GR712RC on-board sensors to obtain an average power prediction. The PMC selection is done using 50-fold cross-validation, which is the maximum number of folds available for the BEEBS training set. Table II contains the model equations as well as the model performance results for the test and train sets. Figure 2 is a visual representation of the predicted power values of the models against the actual measured data for the first run of the train set and the use_case_opt compiled version of the test set using the Gaisler RTEMS compiler with the -O3 optimisation flag.

Model Name
Power [W] ASIC Data Power [W] Bottom-Up
Power [W] Top-Down

Power Model Equation
P = 0.000445617 + 0.0356494 × Freq.[MHz]
P = 2.59799 + 4.58765e-06 × C16
P = 2.61526 - 6.64855e-05 × C1 +2.10177e-06 × C2 - 2.30418e-07 × C3 +1.7569e-07 × C5 - 9.78606e-07 × C6 +8.83961e-07 × C7 + 1.0862e-06 × C8 +3.73317e-07 × C10 - 5.25209e-07 × C11 +1.37306e-06 × C12 + 1.51902e-06 × C14 -1.15743e-06 × C15

MAPE [%] Train Test 2.56 6.73 1.52 1.45
1.14 1.72

TABLE II: LEON3 power models obtained from different model generation methods with validation results.

Both bottom-up and top-down searches have identified a different set of PMCs for the respective power models. The model from the bottom-up search uses a single PMC, whereas the top-down search algorithm eliminated four PMCs to generate a 12 PMC model. This highlights the need to use several search algorithms to identify the set of PMCs since both search algorithms can converge on local optima.
Figure 2a shows that the PMC-based models are able to match the average power consumption of the individual BEEBS benchmarks during execution, including the direction of the dynamic power peaks. The predictions from the PMCbased models follow the program phases as power varies over time, with the baseline provided by the sensor data. These models are suitable for predictive power profiling, whereas the model that is based on ASIC only data is not.
Regarding the test set, the PMC-based models are able to predict the average power consumption and power draw spikes of the program as illustrated in Figure 2b. However, the models underestimate the peak power consumption at the

Power[W] Power[W]

Sensor Data

ASIC Data Only

3.1 3.0 2.9 2.8 2.7 2.6 2.5
1 8003 16005 2400S7 am3200p9 le40s01[1#]48013 56015 64017 72020

Bottom-Up Search

Top-Down Search

3.1 3.0 2.9 2.8 2.7 2.6
1 162 323 484Sam645ple8s06[#]967 1128 1289 1449

(a) Train set - BEEBS

(b) Test set - use case opt

Fig. 2: Power model per-sample prediction on the LEON3 platform for the first run of the test and train sets.

power draw spike points. This is caused both by the limitation in regression-based models, which cannot handle large fluctuations in the modelled data, as well as the limited selection of PMCs available. However, the models still recognise the points of power variation, which is why the prediction error is so low.
IV. CONCLUSION
In this paper we propose and demonstrate a novel dualplatform approach to generating accurate fine-grain PMCbased power models for target platforms with no on-chip PMU, but for which the RTL design is available. In this approach, the physical power data is obtained from the target hardware platform, and these measurements are then synchronised on a per-sample basis with the performance data collected from a soft-core FPGA implementation that offers a PMU. The synchronised samples are then processed by the Robust Energy and Power Predictor Selection (REPPS) software in order to generate power models. REPPS uses automatic search methods to select the set of PMC events that produce the model with highest accuracy.
We have applied this dual-platform approach to generate accurate fine-grain power models for the the Gaisler GR712RC dual-core LEON3 fault-tolerant SPARC processor with onboard power sensors and no PMU. The power models for the LEON3 achieve less than 2% Mean Absolute Percentage Error (MAPE) when validated on an industry-representative image processing algorithm, used in space communications.
The methodology can be used to characterise similar platforms. It is limited by the availability of a soft-core version with PMU and the number as well as types of PMCs available.
ACKNOWLEDGMENT
This research is supported by the European Union's Horizon 2020 Research and Innovation Programme under grant agreement No. 779882, TeamPlay (Time, Energy and security Analysis for Multi/Many-core heterogeneous PLAtforms).

REFERENCES

[1] R. Rodrigues, A. Annamalai, I. Koren, and S. Kundu, "A study on the use

of performance counters to estimate power in microprocessors," IEEE

Transactions on Circuits and Systems II: Express Briefs, vol. 60, no. 12,

pp. 882­886, 2013.

[2] J. Nunez-Yanez and G. Lore, "Enabling accurate modeling of power and

energy consumption in an arm-based system-on-chip," Microprocessors

and Microsystems, vol. 37, no. 3, pp. 319­332, 2013.

[3] S. K. Rethinagiri, O. Palomar, R. Ben Atitallah, S. Niar, O. Unsal, and

A. C. Kestelman, "System-level power estimation tool for embedded

processor based platforms," in Proceedings of the 6th Workshop on

Rapid Simulation and Performance Evaluation: Methods and Tools,

2014, pp. 1­8.

[4] "GR712RC Dual-Core LEON3-FT Development board," https://www.

gaisler.com/index.php/products/boards/gr712rc-board, accessed: 2018-

09-11.

[5] S. Penolazzi, L. Bolognino, and A. Hemani, "Energy and performance

model of a sparc leon3 processor," in 2009 12th Euromicro Conference

on Digital System Design, Architectures, Methods and Tools. IEEE,

2009, pp. 651­656.

[6] M. Cochet, G. Bonnechere, J.-M. Daveau, F. Abouzeid, and P. Roche,

"Implementing the LEON3 Statistics Unit in 28nm FD-SOI: Power

Estimation by Activity Proxy," https://www.gaisler.com/doc/antn/ext/

implementing-leon3-statistics-final.pdf, accessed: 2018-08-23.

[7] Cobham Gaisler AB, "Cobham Gaisler Products," https://www.gaisler.

com/index.php/products.

[8] K. Georgiou, Z. Chamski, K. Nikov, and K. Eder, "A comprehensive and

accurate energy model for arm's cortex-m0 processor," arXiv preprint

arXiv:2104.01055, 2021.

[9] K. Nikov, "Robust energy and power predictor selection," https://github.

com/TSL-UOB/TP-REPPS.

[10] Cobham Gaisler, "GR712RC Dual-Core LEON3FT SPARC V8 Proces-

sor," https://www.gaisler.com/index.php/products/boards/gr712rc-board?

task=view&id=364, 2018, [Online; accessed 16-April-2020].

[11] Xilinx, "Ultrascale architecture and product data sheet:

Overview,"

https://www.xilinx.com/support/documentation/data

sheets/ds890-ultrascale-overview.pdf, 2019.

[12] J. Bennett, A. Burgess, S. Cook, K. Eder, S. Hollis, and J. Pallister,

"Bristol/Embecosm Embedded Energy Benchmark Suite (BEEBS)."

[13] K. Nikov and J. Nunez-Yanez, "Intra and inter-core power modelling for

single-isa heterogeneous processors," International Journal of Embedded

Systems, vol. 12, no. 3, pp. 324­340, 2020.

[14] T. Fushiki, "Estimation of prediction error by using k-fold cross-

validation," Statistics and Computing, vol. 21, no. 2, pp. 137­146, 2011.

[15] M. H. Kutner, C. Nachtsheim, J. Neter, and W. Li, Applied linear

statistical models. McGraw-Hill Irwin, 2005.

