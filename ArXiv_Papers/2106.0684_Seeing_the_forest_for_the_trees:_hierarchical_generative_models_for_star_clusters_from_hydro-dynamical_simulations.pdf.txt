MNRAS 000, 1­14 (2020)

Preprint 3 June 2021

Compiled using MNRAS LATEX style file v3.0

Seeing the forest for the trees: hierarchical generative models for star clusters from hydro-dynamical simulations
Stefano Torniamenti,1,2,3 Mario Pasquato,2,4 Pierfrancesco Di Cintio,5,6,7 Alessandro Ballone,1,2,3 Giuliano Iorio,1,2 Michela Mapelli1,2,3
1 Physics and Astronomy Department Galileo Galilei, University of Padova, Vicolo dell'Osservatorio 3, I­35122, Padova, Italy 2 INFN- Sezione di Padova, Via Marzolo 8, I­35131 Padova, Italy 3 INAF, Osservatorio Astronomico di Padova, vicolo dell'Osservatorio 5, 35122 Padova, Italy 4 Center for Astro, Particle and Planetary Physics (CAP3), New York University Abu Dhabi 5 Physics and Astronomy Department, University of Firenze, via G. Sansone 1, I­50019 Sesto Fiorentino, Italy 6 INFN - Sezione di Firenze, via G. Sansone 1, I­50019 Sesto Fiorentino, Italy 7 CREF, Via Panisperna 89A, I­00184 Rome, Italy

arXiv:2106.00684v1 [astro-ph.GA] 1 Jun 2021

Accepted XXX. Received YYY; in original form ZZZ
ABSTRACT Star formation in molecular clouds is clumpy, hierarchically subclustered. Fractal structure also emerges in hydro-dynamical simulations of star-forming clouds. Simulating the formation of realistic star clusters with hydro-dynamical simulations is a computational challenge, considering that only the statistically averaged results of large batches of simulations are reliable, due to the chaotic nature of the gravitational -body problem. While large sets of initial conditions for -body runs can be produced by hydro-dynamical simulations of star formation, this is prohibitively expensive in terms of computational time. Here we address this issue by introducing a new technique for generating many sets of new initial conditions from a given set of star masses, positions and velocities from a hydro-dynamical simulation. We use hierarchical clustering in phase space to learn a tree representation of the spatial and kinematic relations between stars. This constitutes the basis for the random generation of new sets of stars which share the clustering structure of the original ones but have individually different masses, positions, and velocities. We apply this method to the output of a number of hydro-dynamical star-formation simulations, comparing the generated initial conditions to the original ones through a series of quantitative tests, including comparing mass and velocity distributions and fractal dimension. Finally, we evolve both the original and the generated star clusters using a direct -body code, obtaining a qualitatively similar evolution.
Key words: ISM: kinematics and dynamics ­ open clusters and associations: general ­ ISM: clouds ­ methods: numerical ­ methods: statistical

1 INTRODUCTION
A large fraction of star formation happens in clusters (Lada & Lada 2003; but see also the recent findings by Reina-Campos et al. 2019 and Ward et al. 2020). The formation and early evolution of star clusters is currently not fully constrained. Several open issues are related to this, such as the puzzle of the origin and nature of multiple populations in globular clusters (e.g., Lee et al. 1999; D'Antona & Caloi 2004; Gratton et al. 2004; D'Antona & Ventura 2007; Decressin et al. 2007; Marino et al. 2008; D'Ercole et al. 2008; Milone et al. 2009; Ventura & D'Antona 2009; Carretta et al. 2009; D'Ercole et al. 2010; Gratton et al. 2012; Krause et al. 2013; Bastian & Lardo 2015; Piotto et al. 2015; D'Antona et al. 2016; Bastian &
 E-mail: stefano.torniamenti@studenti.unipd.it
© 2020 The Authors

Lardo 2018; Gratton et al. 2019) and the related horizontal-branch morphology `second parameter' problem (e.g., Lee et al. 1994; D'Antona et al. 2002; Lee et al. 2005; Pasquato et al. 2013, 2014; Tailo et al. 2015, 2020). Other, more loosely related issues are the question whether observed scaling laws for these systems are primordial or dynamical, locally set or universal (e.g., Djorgovski 1995; Pasquato & Bertin 2008, 2010; Zaritsky et al. 2011; Pang et al. 2018), the contribution of star clusters to the Galactic halo and their complex co-evolution with the disk (e.g., Cantat-Gaudin 2015; Antoja et al. 2018; Gaia Collaboration et al. 2018; Chung et al. 2019; Cantat-Gaudin et al. 2020; Pasquato & Matsiuk 2019; Dinnbier & Kroupa 2020; Pang et al. 2020), the retention/ejection mechanism for dark remnants (e.g., Kulkarni et al. 1993; Drukier 1996; Davies & Hansen 1998; Baumgardt et al. 2004; Banerjee et al. 2010; Breen & Heggie 2013; Alessandrini et al. 2016), and

2 Torniamenti et al.
the mechanism of formation of intermediate-mass black holes (e.g., Bahcall & Ostriker 1975; Portegies Zwart et al. 2004; Baumgardt et al. 2005; Pasquato et al. 2009; Safonova & Shastri 2010; Beccari et al. 2010; Vesperini et al. 2010; Umbreit & Rasio 2013; Leigh et al. 2014; Mapelli 2016; Pasquato et al. 2016; de Vita et al. 2017).
Gravitational -body simulations are a key tool to model star cluster evolution, but they often start from rather idealized initial conditions, often sampled from equilibrium models, such as the Plummer (1911) sphere. Even though more sophisticated models are available (e.g., Lynden-Bell 1962; Michie & Bodenheimer 1963; King 1966; Prendergast & Tomer 1970; Wilson 1975; Bertin & Stiavelli 1984; Lupton & Gunn 1987; Trenti & Bertin 2005; An & Evans 2006; Varri & Bertin 2012; Gieles & Zocchi 2015; Daniel et al. 2017; Claydon et al. 2019), these were developed with the goal of describing the current, quasi-equilibrium state of star clusters. Thus, by design, they bear little resemblance to observed primordial conditions in embedded clusters, which are clumpy, hierarchical and possibly far from virial equilibrium (e.g., Lada & Lada 2003; Bastian et al. 2009; Dib & Henning 2019). For more than a decade, fractal initial conditions have been used as a starting point for realistic simulations (e.g., Goodwin & Whitworth 2004; Allison et al. 2010; Kuepper et al. 2011; Küpper et al. 2011; Parker et al. 2011, 2014; Park et al. 2018; Di Carlo et al. 2019), but even this approach does not guarantee that all the relevant characteristics of the actual primordial conditions of star clusters are correctly captured.
For instance, clumpiness in embedded star clusters is not the only feature that sets realistic initial conditions apart from idealized models, as rotation also plays an important role. For example Corsaro et al. (2017) have shown that the rotation signature from the parent molecular cloud persists in the alignment of stellar spins in some open clusters, even today. Such result has been theoretically supported also by Lee & Hennebelle (2016), Mapelli (2017), and Ballone et al. (2020). Globular clusters are also consistently found to rotate, sometimes with significant dynamical effects (Bianchini et al. 2013; Fabricius et al. 2014; Ferraro et al. 2018; Kamann et al. 2018; Dalessandro et al. 2021).
A seemingly obvious but computationally demanding way to generate realistic initial conditions for star clusters is to run suites of hydro-dynamical simulations, coupled with appropriate recipes for handling star formation and other sub-grid physics (e.g., Klessen & Burkert 2000; Bonnell et al. 2003; Bate 2009; Federrath & Klessen 2012; Krumholz et al. 2012; Dale et al. 2015; Fujii & Portegies Zwart 2016; Geen et al. 2016; Seifried et al. 2017; Zamora-Avilés et al. 2019; Lee & Hennebelle 2019; Wall et al. 2019). Despite these efforts, large sets of simulations including all the relevant physics are at present hard to come by, notwithstanding ever-advancing hardware capabilities. This is compounded by the fact that -body simulations, even direct-summation ones, eventually diverge from the true solution of the -body problem for most initial conditions due to numerical errors and the chaotic nature of the problem (e.g. see Goodman et al. 1993; Hemsendorf & Merritt 2002; Kandrup & Sideris 2003; Boekholt & Portegies Zwart 2015; Di Cintio & Casetti 2019, 2020; Manwadkar et al. 2020; Wang & Hernandez 2021 and references therein), with the consequence that only ensemble-averaged results are considered reliable within the current consensus. To obtain such averages, multiple -body runs are needed, each with its own initial conditions.
Here we introduce a new approach to generate new realizations from a given output of a hydro-dynamical simulation, at a tiny fraction of the computational cost of running an additional independent simulation. The generated realizations are qualitatively similar to

the original ones when observed in 3D space and pass a series of quantitative comparisons.
The paper is organized as follows. In Section 2, we recap the properties of the hydro-dynamical simulations we used to generate our original initial condition sets; Section 3 presents our approach for generating new realizations, while in Section 4 we describe our results and run various checks to compare the generated realizations to the original simulations. In Section 5, we discuss and draw conclusions.

2 SMOOTHED-PARTICLE HYDRO-DYNAMICAL SIMULATIONS

2.1 Initial conditions and simulation set-up

As a starting point for this work, we used the sink particles from 10 smoothed-particle hydrodynamics (herafter SPH) simulations of molecular clouds performed by Ballone et al. (2020) using the
2 code (Wadsley et al. 2004, 2017). In the following, we may refer to these sink particles as `stars' for convenience.
The initial conditions of the SPH simulations are spherical molecular clouds with total gaseous mass in the range 104  mc/M  105 (see the last column of Table 1), uniform temperature 0 = 10 K and uniform density 2.5 × 102 cm-3. All runs have a fixed number of initial SPH particles equal to 107, corresponding to a gas mass resolution of 10-3 (for the least massive molecular cloud) to 10-2 M . Stars form during the simulation by means of a sink particle algorithm based on the same prescriptions as Bate et al. (1995).
In order to induce a non-isotropic evolution, the SPH gas particles are initially given a turbulent, divergence-free, Gaussian random velocity field with a different random seed for each simulation of the set, following a Burgers (1948) power spectrum. The velocity power is set to have clouds in an initial marginally bound state so that their initial virial ratio vir  2/| | = 2, where  and  are the gas kinetic and potential energy, respectively. During the hydro-dynamical simulation, the gas equation of state has been set to be adiabatic, but radiative cooling by dust has been modeled as in Boley (2009) and Boley et al. (2010). The amount of energy lost by cooling was calculated through the divergence of the heat flux



·

cool

=

-

( 36 ) 1/3 

( 4

-

4 )
irr

( + 1/)

.

(1)

In the Equation above,  is the Stefan-Boltzmann constant,  the gas temperature, irr the irradiation temperature,  = (/)1/3 and  =   , where  and  are the gas particle mass and density and  is the local opacity. For , the adopted Planck and Rosseland dust opacities are taken from D'Alessio et al. (2001), while irr was set to 10 K.
No stellar feedback was included in this set of simulations and we simply decided to assume that our clusters are the result of instantaneous gas removal at 3 Myr after the beginning of the hydro-dynamical simulation, to roughly simulate the effect of the first supernova explosion. Dale et al. (2015) have shown that the pre-supernova gas removal is expected to play a minor effect on the survival and dynamics of stellar clusters and indeed we also checked that at 3 Myr the gas accounts for a small fraction of the mass where most of the stellar mass is residing. Furthermore, at 3 Myr all the clouds converted about 30-40% of their gas mass into sink particles, in agreement with previous hydro-dynamical simulations showing that stellar feedback should lead to a maximum star

MNRAS 000, 1­14 (2020)

Table 1. Properties of the end states of the SPH simulations of Ballone et al. (2020).

Name s

c vir 

sink [M ] mc [M ]

m1e4 m2e4 m3e4 m4e4 m5e4 m6e4 m7e4 m8e4 m9e4 m1e5

2523 6 2571 4 2825 5 2868 2 2231 4 3054 5 4214 9 2945 6 3161 4 3944 6

1.19 2.30 4.22 × 103 1.32 2.12 6.69 × 103 1.48 2.20 1.03 × 104 1.47 2.17 1.44 × 104 1.47 1.80 1.41 × 104 1.69 2.15 2.04 × 104 1.50 2.20 3.15 × 104 1.60 1.86 2.83 × 104 1.52 1.90 3.05 × 104 1.46 2.20 3.80 × 104

104 2 × 104 3 × 104 4 × 104 5 × 104 6 × 104 7 × 104 8 × 104 9 × 104 105

After the name of each simulation (Col. 1) we report the number of stars generated (Col. 2), the number of macroscopic subclumps (Col. 3), the virial ratio (vir  2 / | |, Col. 4), the  coefficient of the mass-spectrum fitting function of eq. 2 (Col. 5), the total mass of the stars (Col. 6), and the mass of the parent molecular cloud (Col. 7).

formation efficiency of about this amount (e.g., Vázquez-Semadeni et al. 2010; Dale et al. 2015; Gavagnin et al. 2017; Li et al. 2019). For more details on such choices, we refer the reader to Ballone et al. (2020).

2.2 Structural properties of the SPH simulations
Independently of the specific initial value of mc, our SPH simulations present a clumpy structure with s  3 × 103 stars organized in a maximum of c = 9 main subclumps for m7e4 to a minimum of 2 for m4e41. Figure 1 shows the  - ,  -  and  -  projections of the stars position on the three coordinate planes for the system m1e4, with their masses  shown in colour. We find a rather prominent primordial mass segregation, with heavier stars typically found within the central regions of the main clumps and lighter stars at large distance from the geometric centres of such subsystems. All systems are above the virial condition, with vir ranging from 1.19 for the m1e4 case, to 1.69 for m6e4.
In order to quantify the properties of the end states of the SPH simulations, we have also evaluated their distributions of interparticle distances, mass spectrum and velocity  (),  () and  (). Figure 2 shows these distributions for the sink particles of the simulations m1e4, m3e4, m5e4, m7e4 and m9e4. The distribution of inter-particle distances  shows a quite complex structure with several slope changes. The clumpy structure of the particles' spatial distribution gives rise to several peaks in  (), corresponding to the distances between clumps themselves. This can be observed clearly in the left panel of Fig. 2. For the specific case of the m1e4, the peaks are located roughly at 0.1, 0.45, 1.75 and 3 pc (as highlighted by the vertical dotted lines), that can be easily identified as the distances between the approximate centres of the main clumps of particles shown in Fig. 1.
The mass spectra of the sink particles all approximately follow the same power-law structure between a low-mass and a high-mass cut-off. We have fitted the numerically recovered mass spectra with

1 Subclumps are identified heuristically as groups of neighbouring stars containing more than 0.05 s, whose self potential energy exceeds that of the rest of the system.
MNRAS 000, 1­14 (2020)

Seeing the forest for the trees 3

the bona-fide function



 () =

,
/2

(2)

2 + 2

where  is a normalization constant,  is a scale mass, that for
the explored systems is always in the range between 0.8 and 4 M , while exponent  ranges from  1.8 to  2.3.
The velocity distributions  () do not show a relevant depen-
dence on the specific initial value of mc, as shown in the right hand panel of Fig. 2. Qualitatively, the velocity distribution is well described by a Maxwell-Boltzmann from  = 0 to 5 km s-1 (value corresponding to the peak of  ()) and then shows a -3 power-law
trend. The properties of the SPH simulations are summarized in
Table 1.

3 METHODS
In the following, we describe our new procedure to build a generative model of star cluster initial conditions. In the context of supervised classification, where the goal is to predict a label  given a set of features  (see, e.g., Chardin & Bianchini 2021), generative models are usually contrasted to discriminative models, with the former seeking to model the joint distribution (,  ) and the latter focusing on just the conditional probability distribution ( |) (Jebara 2012). A model of the joint distribution is valuable even if we do not intend to perform classification, as in our case. More generally, a generative model's goal is to learn a representation of an intractable distribution given an usually finite number of samples. The generator typically maps from a latent domain on which a simple distribution is defined, such as a multivariate Gaussian on , to the complex data domain (e.g. Ruthotto & Haber 2021). Recently, most of the interest in generative models is driven by deep learning approaches, such as generative adversarial networks (Goodfellow et al. 2014). However, in principle, much simpler models such as hidden Markov models (Rabiner & Juang 1986; Eddy 2004) or grammars (e.g., Chomsky 1959; Jelinek et al. 1992; Beaumont & Stepney 2009) meet the definition of a generative model in the broader sense defined above. The latter have proved useful in the description and generation of objects displaying fractal structure, as in the case of Lindenmayer systems applied to plant growth (Lindenmayer 1968a,b; Prusinkiewicz & Hanan 2013).
Our approach focuses on reproducing the multi-fractal structure of embedded star clusters generated by hydro-dynamical simulations by capturing the relations between subclusters at different scales in terms of a hierarchical clustering tree, allowing us to generate new realizations by modifying the first branches of the tree. These branches describe the macro structure, i.e. the relations between large subclusters. The parameters that characterize these first branches can then be treated as the latent domain of our generative model. In the following, we will make this intuition more precise by relying on a hierarchical clustering tree learned by an agglomerative clustering algorithm (see Kaufman & Rousseeuw 1990).
We proceed in two steps. First, we use a hierarchical clustering algorithm to identify clumps of stars in the phase space of the original hydro-dynamical simulation output. The clumps are organized by the algorithm into a tree T , where the root node contains the whole set of stars and each subsequent node represents a two-way split with each branch being a clump of stars, down to the leaf nodes representing individual stars. To describe the relevant properties of the clumps, we assume that the phenomena leading to star formation

y [pc] z [pc] x [pc]

4 Torniamenti et al.

10-1
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 x [pc]

100 m [M]
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 y [pc]

101
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 z [pc]

Figure 1. From left to right, projections in the  - ,  -  and  -  planes of the end state of the m1e4 simulation. The colour map marks the mass of the individual stars in units of M .

100

100

10-1

10-1

10-1

10-2

10-2

10-2

10-3 10-4

10-3 10-4

10-3 10-4

m1e4 m3e4 m5e4 m7e4 m9e4

10-2 10-1

100

101

10-1

100

101

102

100

101

102

d [pc]

m [M]

v [km s-1]

Figure 2. Distribution of inter-particle distances  () (left-hand panel, main), mass spectra  () (middle panel), and velocity distribution  () (right-hand
panel) for the sink particles taken from the simulations m1e4, m3e4, m5e4, m7e4, m9e4. The vertical dotted lines in the left hand panel mark the position of the main peaks of  () corresponding to the distances between the main subclusters for the m1e4 case, while the thin dotted line in the right-hand panel mark the -3 power-law trend of the velocity distributions.

f(d) f(m) f(v)

are rotation invariant. Note that this does not mean that any specific realization of stellar positions and velocities must be isotropic, but that all orientations of (possibly anisotropic) realizations are equally likely. This is warranted at least in hydro-dynamical simulations, where initial conditions are approximately isotropic. With the assumption of rotation invariance, we can concentrate on just the modulus of the distance  = || between the centres of mass of the clumps (dropping the information regarding the absolute orientation of the distance vector), the modulus of their relative velocity  = |u|, the angle between the position and relative velocity vector  = arccos ( · u ( )-1), and the mass ratio between two clumps. To describe how the mass is split at each node we refer to m, defined as the ratio between the lightest of the two resulting groups and the total mass of the node. With this definition, mass ratios fall between 0 (maximally unequal split) and 0.5 (equal-mass split).
Second, we generate a new realization of particle positions and

velocities by placing clumps of stars (and sub-clumps down to the individual stars) in phase space. To build a new realization of total mass  (details in Sect. 3.3), we start with one particle at rest in the origin of our coordinate system, initially containing the total mass of the cluster . Then we iteratively split it into new particles and place them at a distance  from each other, moving with relative velocity u. The relevant variables , u, , and the relevant mass ratio  are taken from the tree T at each iteration step  except for the first step(s), which are drawn from a tree T built on a different simulation. While this does not guarantee that the outcome will be described by a tree with statistical properties that match those of T , it is at least heuristically convincing in the case of very hierarchical distributions. Moreover, we will check ex post that the realizations generated in this way have a set of desirable properties with respect to the original cluster.
MNRAS 000, 1­14 (2020)

y [pc]

6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 x [pc]
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 x [pc]

z [pc]

z [pc]

Seeing the forest for the trees 5

6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 y [pc]
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 y [pc]

x [pc]

x [pc]

6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 z [pc]
6 4 2 0 -2 -4 -6
-6 -4 -2 0 2 4 6 z [pc]

y [pc]

Figure 3. The first node from the trunk in the

tree splits the sink particles of the m1e4 simulation in two groups (green and purple in the upper panel

row). With the second node the purple group is split further in two subgroups (purple and cyan, lower panel row).

3.1 Hierarchical clustering

Hierarchical clustering algorithms arrange data into a tree-like struc-

ture representing nested groups, capturing clustering structure at

different scales. In particular, we use an agglomerative clustering

algorithm (see the chapter on

in Kaufman & Rousseeuw

1990). This means that the tree-like hierarchy of clusters is built

from the bottom up: the algorithm starts from individual points, and

then merges the most similar ones into clusters until some stopping

criterion is satisfied (e.g., until only a specified number of clusters

are left). This way of proceeding can be thought as drawing a tree

with a branch for every pair of clusters that merge. A dendrogram

can be used to display the resulting tree structure, with leaf nodes

corresponding to individual points and the root corresponding to

the whole data set. We refer the interested reader to Pasquato &

Milone (2019) for an illustration of this and other clustering algo-

rithms in an astronomical context. Here, we selected this algorithm

because it is well suited for studying the complex structure of the

hydro-dynamical simulations described in Section 2, since it is in-

formative on very different scales and it can capture clusters (and

sub-clusters) of various sizes. We use the implementation offered

by the

-

library (Pedregosa et al. 2011).

3.1.1 Linkage
Moving towards the root of the tree, an agglomerative clustering algorithm merges at each node either two groups with each other or a lone point into a group. This is based on a notion of (dis)similarity between groups which may be defined in multiple ways, or linkages.
MNRAS 000, 1­14 (2020)

A linkage is a prescription for defining the dissimilarity between groups in the context of hierarchical clustering. A simple example is the so-called single linkage approach, where the distance between two groups is defined to be equal to the minimum distance between any points in the two groups2 as  min ( ,  ). where  and  represent sink particles belonging to group  and , respectively, and   is the distance between two such particles. However, in our context this prescription would result in elongated groups of sinks, as two blobs that just touch in one point get merged into one pretty quickly, even if their centres-of-mass are far from each other. A visual inspection of the sink particle distribution reveals rounder clumps than we would obtain this way, as shown, e.g., in Fig. 3. Thus we used the Ward (1963) linkage prescription instead of single linkage. Ward's linkage is defined as follows:







2 =


2 -
   

2 + 2 ,





(3)

  





where the index  denotes the generic -th particle and  , , and   denote the centroids of sets , , and    respectively. Equation 3 corresponds to the increase in variance with respect to the relevant centroids as groups  and  are merged. Merging groups decreases the number of centroids by one, so variance is bound to

2 Such scheme is commonly dubbed as friend-of-friends prescription in the context of halo-finding in cosmological simulations (Davis et al. 1985) or galaxy clusters from observational data (Murphy et al. 2012). See also Feng & Modi (2017) and references therein.

N/Ntot

N/Ntot

6 Torniamenti et al.

All nodes 0.10

Top 1/3 nodes

0.08

0.06 0.04 0.02 0.00 Middle 1/3 nodes 0.10

m1e4 m3e4 m5e4 m7e4 m9e4
Bottom 1/3 nodes

0.08

0.06

0.04

0.02

0.000.0

0.2rm 0.4 0.0

0.2rm 0.4

Figure 4. Distribution of the mass of the lightest of the two resulting groups
at any given split, in units of the parent group. The top left panel shows the
histogram of mass ratios calculated for all nodes in the learned tree. The top right panel shows the mass ratios for the top 1/3 of the nodes from the root (big clumps), the bottom left for the middle 1/3 (intermediate-size clumps), and the bottom right for the lower 1/3 (small clumps to individual stars).

increase, but using Ward's linkage results in cluster mergers that minimize its increase at each step.

3.2 Application of hierarchical clustering to stellar clusters
We applied agglomerative clustering to the stellar clusters from hydro-dynamical simulations introduced in Section 2. The tree is built relying on euclidean distance between sink particles in the phase space as a measure of dissimilarity, so that particles sharing both similar positions and similar velocities tend to be grouped together. Before applying the algorithm, we scaled the positions and the velocities by their standard deviations. This step or some such is necessary so that the result of our clustering does not depend on the arbitrary choice of the unit of measurement of time.
Figure 3 shows the groups of sink particles corresponding to the first two nodes of the learned tree (starting from the root). The first node splits the sinks into two big chunks, and the second node splits off a smaller clump from one of these3. Our choice of using Ward linkage results in the splitting off of the most massive subclumps in the first branches of the tree, leading to an overall balanced tree. The first splitting thus gives information about the distribution of the sub-clumps at large scales and, moving towards the leaves of the trees, sub-clusters are split in smaller and smaller sub-clumps, as desired for our task.
Figure 4 shows the mass ratios between sub-clumps branching off at different depths within the tree. The distribution of mass ratios is not particularly affected by tree depth. This is expected if
3 Even as we describe the tree from the root up (writing occasionally in terms of splits/splitting) agglomerative methods build the tree from the leaves, i.e. the individual sink particles.

N/Ntot

N/Ntot

All nodes

0.4

m1e4 m3e4

m5e4

0.3

m7e4 m9e4

0.2

Top 1/3 nodes

0.1

0.0 Middle 1/3 nodes 0.4

Bottom 1/3 nodes

0.3

0.2

0.1

0.0 10 3 10 2 10 1 100 101 10 3 10 2 10 1 100 101

Figure 5. Same as Figure 4 but for the distribution of the distances (scaled

by their variance) between the centres-of-mass of two different branches of

the

tree.

the structure of the sink particle distribution is scale invariant, as

moving down the tree (towards the leaves) probes smaller scales

by construction. Additionally, Fig. 4 shows that the distribution

is similar across different simulations, spanning a range of total

mass of an order of magnitude. To assess if the mass-ratios can

be considered as drawn from the same distribution (after properly

rescaling the mass), we performed pairwise Kolmogorov­Smirnov tests. Despite multiple testing we never obtain a p-value below 10-2,

so we have no reason to suspect that the distributions are different.

Similar information on the scaling behavior of our simulations

can be extracted from Figures 5 and 6, where we show the distribu-

tion of the distances between the clumps and that of their relative

velocities. In particular, the positions of the maximums of the dis-

tributions shift towards lower values by moving from the top to the

bottom nodes, confirming that the tree is considering smaller and

smaller scales. Also in this case, all the simulations show very sim-

ilar distributions at each level for both the distances and the relative

velocities. The distribution of the angles between the relative veloc-

ity and the distance is shown in Figure 7. This distribution appears flat except for a rise at cos   1 which corresponds to relative

velocity parallel to the separation vector between clumps, which is

expected in a super-virial cluster undergoing overall expansion.

Relevant physical information can be drawn by considering

the relation between quantities of the same node in the

tree.

Figure 8 shows the relation between the distance of the sub-clumps

and their relative velocity, for each node. The main sub-clumps, that

correspond to the nodes closest to the root, show a direct proportion-

ality between these two quantities, possibly due to rigid rotation. In

contrast, on the smallest scales, the single particle relative velocity

shows a tendency to decline with the square root of their distance, as

would happen for two clumps (or even two individual stars) orbiting

one another under the influence of each other's monopole poten-

tial. Interestingly, all relative motions between clumps take place

between the rigid and Keplerian extremes.

MNRAS 000, 1­14 (2020)

N/Ntot

All nodes

0.4

m1e4 m3e4

m5e4

0.3

m7e4 m9e4

0.2

Top 1/3 nodes

0.1

0.0 Middle 1/3 nodes 0.4

Bottom 1/3 nodes

0.3

0.2

0.1

0.0

10 1 u 100

101

10 1 u 100

101

N/Ntot

N/Ntot

Seeing the forest for the trees 7

0.12

All nodes
m1e4

0.10

m3e4 m5e4

0.08

m7e4 m9e4

0.06

Top 1/3 nodes

0.04

0.02

00..0102 Middle 1/3 nodes

Bottom 1/3 nodes

0.10

0.08

0.06

0.04

0.02

0.00 1.0 0.5 co0s.0( ) 0.5 1.0 1.0 0.5 co0s.0( ) 0.5 1.0

N/Ntot

Figure 6. Same as Figure 4 but for the distribution of the relative veloci-

ties (scaled by their variance) between the centres-of-mass of two different

branches of the

tree.

3.3 Generating new realizations

As explained in Section 3.2, the application of the agglomerative clustering algorithm to stellar clusters allows us to learn a tree T encoding their hierarchical structure. Each node of the three T is associated to the relevant properties (, u, , and ) quantifying the

relations between the sub-clumps corresponding to the branches de-

parting from the node. Thus the tree essentially encodes instructions

to generate a new star cluster, as it can be traversed from the top,

iteratively splitting an intial particle until the leaf level is reached,

where individual stars have been produced. In our case, the goal

is to change the cluster at the global structure level -nearest to the

trunk of the tree-, thus creating different sub-clumps configurations

while preserving the small scale properties of the sub-clumps (such

as their fractal structure). We thus take the quantities , u, , and

 associated to the nodes T for  <  and replace them with the

quantities




,

u


,




,

and




associated to the nodes T



of another

tree T , learned from a different set of sink particles. This grafting

procedure represents a way to combine the large scale properties of

one simulation with the small scale properties of another. For the

results presented in Sect. 4, these nodes are sampled randomly from

other simulations.

The generation procedure is implemented as follows. First,

we consider a particle with a mass 1 equal to the total mass of the cluster considered, placed at the centre of mass of the cluster.

The particle is first split into two particles of masses 11 and

12

such

that

11

+

12

=

1

and

min(11, 12)/1

=


1

.

The positions and velocities of the new particles are assigned such

that their centre of mass is at rest in the origin of the system,

their

distance

vector

is


1

,

and

their

relative

velocity

u
1

,

with

an

angle


1

=

arccos

(
1

·

u1 (11)-1).

This

splitting

procedure

is

then repeated until a cluster with the same number of particles as

the reference one is obtained. At each step, the particle-to-split is

chosen by considering the same order of splitting as the original

MNRAS 000, 1­14 (2020)

Figure 7. Same as Figure 4 but for the distribution of the cosine of the

angle between relative velocity and distance of the centres-of-mass of two

different branches of the

tree (corresponding to two groups of sinks

that are split at a given level based on phase-space distance).

u

101

u 1/2

100

u

10 1

10 3

10 2

10 1

100

101

Nnod1e00

101

102

103

Figure 8. Scatter plot of the relative velocity between the centres-of-mass

of two different sub-clumps corresponding to a given node in the

tree

as a function of their distance. The colour gradient maps the depth of the

node (from the root, in blue, to the leaves, in yellow) within the

tree

node. The superimposed lines represent two limit slopes corresponding to

rigid rotation (blue) and Keplerian motion (orange).

8 Torniamenti et al.

103 10-1
102 10-2

f(d) Nr

10-3 10-4

original 1 node 2 nodes 3 nodes 4 nodes

10-2

10-1

100

101

d [pc]

101

100

10-2

10-1

100

101

rneigh [pc]

Figure 9. Left-hand panel: Distribution of inter-particle distances  () for the sink particles taken from the m1e4 simulation (thick purple line) and 4 new generations obtained by replacing the first 1, 2, 3 and 4 nodes (corresponding to  = 2, 3, 4, and 5 in the notation used above). Right-hand panel: Average number
of neighbours  around all particles, within a sphere with radius neigh, for different values of neigh. The thick purple line corresponds to the calculation done for the original sink particles of the m1e4 simulation, the blue-dashed and red-solid lines represent 3 different new generations, for 1 and 2 nodes respectively. The black dotted lines represent the trend expected for distributions with a uniform fractal dimension  = 1.6, 2 and 3.

reference tree. This procedure may at times result in very low mass

particles. We remove these planet-sized objects with a cutoff at the minimum mass of the original stars on which T was learned.

In the procedure described above, the choice of the grafting

depth  determines how different the new realizations are from the

original system. A very low value of  produces generations that

are very similar to the original one at all scales. In contrast, when 

is very high, also the small scales are modified substantially. In our case, we want to generate new clusters that are similar to the original

one but, at the same time, cannot be considered as its copies. We

quantified how the choice of the grafting depth affects the spatial

distribution of the new generations. In particular, we compared the

distribution of distances and the fractality of systems generated with

different values of  to that of the original cluster, for the case of m1e4. The left panel of Fig. 9 shows that the general shape of the distribution of inter-particle distances is well reproduced in all cases,

with slight differences below the parsec scale. The peaks correspond

to sub-clumps of sinks, that are formed in different numbers and

sizes in each realization. Predictably, the realization obtained by

modifying just one node matches the original better than those that

modify two or three nodes, and the one with four modified nodes

is deviating the most from the original. This suggests that very few changes ( = 3) are sufficient to obtain generations not identical to

the original one.

As a confirmation of this, in the right-hand panel of Fig. 9,

we have computed the average number of neighbours of each sink

within a given distance, following Ballone et al. (2020). The distribution of neighbours of m1e4 is not described by a single power

law of non integer index , as one would expect in a simple fractal structure, but presents two slope changes at around  10-1 and  2
pc (see also Ballone et al. 2020). To guide the eye, the three dotted

lines mark the theoretical distance distributions in the case of a pure

fractal

distribution

with

r



 1.6
neigh

and

the

two

lattice

distributions

in

two

and

three

dimensions

with

r



2
neigh

and

r



3 ,
neigh

respectively. The generated realizations for  = 2 and  = 3 match

the general trend and the changes in the slope of the original simulation very well, showing that our method captured the underlying structure of the particle distribution in the 3D space at all scales. Like for the inter-particle distance distribution, the choice of  = 2 produces only minimal differences from the original m1e4 profile.
In the following, we will focus on generations with  = 3, which is the smallest value to produce clusters that are distinguishable from the original one.
4 RESULTS
4.1 Properties of the newly generated systems
In this Section, we discuss the properties of the systems generated using our procedure starting from the simulation m1e4, as this has the highest resolution (i.e. largest number of SPH particles for a given total mass).
Figure 10 shows the spatial distributions of five new generations obtained with the method described in Section 3.3 and compared to the original one. The new generations show a strong sub-structured configuration, with a different number of clumps, depending on the single realization, that has drawn branches from different simulations. Also, a strong degree of mass segregation is still present in the single sub-clumps, as highlighted by the colour coding. This primordial mass segregation in the individual realizations qualitatively matches the one present in the original cluster.
In Fig. 11, we compare the mass distribution of m1e4 to those of the new generations. In this case, our method leaves the slope of the mass function largely unaltered for most of the mass spectrum. At the boundaries of the mass spectrum, some discrepancies are present. This is due to the fact that the change in the first nodes may split up a relatively small particle more times than in the original cluster, and leaves more massive particles less split. This explains the higher number of particles at the boundaries of the mass spectrum with respect to the original one. The sharper cut-off at   10-1 M is
MNRAS 000, 1­14 (2020)

Seeing the forest for the trees 9

10-1

100 m [M]

101

y [pc]

6 m1e4 4 2 0 -2 -4 -6

m1e4g5

m1e4g8

y [pc]

6 m1e4g2 4 2 0 -2 -4 -6

m1e4g3

m1e4g4

-6 -4 -2 0 2 4 6 x [pc]

-6 -4 -2 0 2 4 6 x [pc]

-6 -4 -2 0 2 4 6 x [pc]

Figure 10.  -  projection of the m1e4 system (top left panel, see also Fig. 1) and five different of the sink particles and their re-generations.

generations. The colour code marks the different masses

due to the fact that all masses below this threshold are systematically removed. In general, the fit with Eq. 2 is rather good, yielding values of  around 2.3, reminiscent of a Salpeter (1955) slope.
Figure 12 shows the velocity distribution of the new generations, as compared to the original one. The distributions look similar, both on the low-velocity tail, where the Maxwell-Boltzmann trend seems to be preserved, and on the sharper power-law trend at high velocities. Due to the redistribution of particle positions and velocities and mass splitting in the generation process, the value of the total virial ratio vir is significantly altered (with respect, in this case, to the value of 1.19 for the m1e4 case) ranging from a minimum of 0.46 to a maximum of 2.08. Clearly, future dynamical evolution depends heavily on the virial ratio, which, in turn, is heavily affected by the left tail of the particle pairwise distances. There is indeed a margin of variation in short distances between realizations, as shown in Fig. 9. However, the shortest distances in any stellar system essentially correspond to binary-star semiaxes. Our hydro-dynamical simulations were not designed to faithfully reproduce an observational initial mass function (Ballone et al. 2021) nor to capture binary properties. In Torniamenti et al. (2021), we introduce a realistic binary distribution with a separate procedure. While binary binding energy is a large fraction of the total binding energy in many realistic scenarios, the time scale over which this energy is exchanged with the cluster at large is much longer than the dissolution time for the typical system under consideration: hard binaries are dynamically inert in the short term. To check that this is
MNRAS 000, 1­14 (2020)

the source of the observed virial ratio mismatch, we have operated two diagnostics. First of all, we have recomputed the virial ratio vir  times excluding each time a different particle. This gives us a robust way to quantify the virial ratio, as the spread in the resulting distribution will be driven by instances in which a member of a very close binary was excluded. In all cases, the value of vir of the original system lies well inside the distribution of vir obtained by removing one particle at time from a given generation.
Secondly, we have also computed the vir by excluding the binding energy of stars with separation under a varying threshold between one tenth and one half of the average inter-particle distance. We found that the large variations in the value of vir observed for the generated clusters is essentially due to the different distributions of tightly bound particles in the generated clusters and the parent sink particle system produced by our SPH simulations. Thus, different values of the virial ratio will result in a similar dynamical evolution on the time scales of interest, as shown below by evolving our realization through direct -body simulations. We list the nominal virial coefficients of our generated realizations together with other properties in Table 2.
4.2 N-body simulations
Our method aims to generate large samples of initial conditions for -body simulations. To test that our realizations are indeed suit-

f(v)

f(m)

10 Torniamenti et al.

100 10-1

m1e4 m1e4g2 m1e4g3 m1e4g4 m1e4g5 m1e4g8

10-2

10-3

10-1

100

101

m [M]

Figure 11. Mass spectrum of the sink particles of simulation m1e4 (thick purple line) and of four different generated systems with four splits (thin lines).

10-1

10-2

10-3

m1e4 m1e4g2 m1e4g3 m1e4g4 m1e4g5 m1e4g8

100

101

v [km s-1]

Figure 12. Velocity distribution for the same systems as in Fig. 11.

able for this use, we evolve via direct -body simulations the three

original clusters (m1e4, m3e4 and m6e4) and 10 different generated

clusters per each of the three original ones. Finding that the evolu-

tion of the generated clusters is neither identical nor dramatically

different with respect to the original cluster is one of the main test-

beds of our method. In fact, our method can be successfully used

only if the new clusters evolve in a similar way as the original one,

but are sufficiently different not to be an exact copy. Ideally, the

generated clusters should behave as different random realizations of

the same underlying physical distributions.

We ran our simulations with the direct -body code

6++ (Wang et al. 2015). Thanks to a neighbour scheme

(Nitadori & Aarseth 2012),

6++ efficiently handles the

collisional force contributions at short time scales as well as those

at longer time intervals, to which all the members in the system con-

Table 2. Properties of the generated clusters starting from m1e4, m3e4 and m6e4.

Name

s

c vir 

sink [M ]

m1e4g1 2006 6 m1e4g2 2509 6 m1e4g3 2512 6 m1e4g4 1998 8 m1e4g5 2512 5 m1e4g6 2491 7 m1e4g7 2081 8 m1e4g8 2512 9 m1e4g9 2196 4 m1e4g10 2496 7

0.60 2.3 4.20 × 103 1.41 2.3 4.20 × 103 1.57 2.3 4.20 × 103 0.60 2.3 4.20 × 103 1.68 2.3 4.20 × 103 1.50 2.3 4.20 × 103 0.48 2.3 4.20 × 103 1.81 2.3 4.20 × 103 0.46 2.3 4.20 × 103 1.57 2.3 4.20 × 103

m3e4g1 2765 5 m3e4g2 2805 7 m3e4g3 2811 5 m3e4g4 2719 5 m3e4g5 2747 7 m3e4g6 2774 6 m3e4g7 2750 6 m3e4g8 2770 7 m3e4g9 2628 7 m3e4g10 2764 6

0.80 2.2 1.03 × 104 1.39 2.2 1.03 × 104 1.16 2.2 1.03 × 104 1.20 2.2 1.03 × 104 1.48 2.2 1.03 × 104 1.40 2.2 1.03 × 104 1.46 2.2 1.03 × 104 1.13 2.2 1.03 × 104 0.94 2.2 1.03 × 104 0.94 2.2 1.03 × 104

m6e4g1 2747 7 m6e4g2 2823 7 m6e4g3 2900 5 m6e4g4 2718 6 m6e4g5 2967 6 m6e4g6 2752 5 m6e4g7 2998 6 m6e4g8 2833 6 m6e4g9 3001 6 m6e4g10 3015 5

1.65 2.1 2.04 × 104 1.80 2.1 2.04 × 104 1.82 2.1 2.04 × 104 1.66 2.1 2.04 × 104 1.75 2.1 2.04 × 104 1.30 2.1 2.04 × 104 1.55 2.1 2.04 × 104 1.36 2.1 2.04 × 104 1.82 2.1 2.04 × 104 1.82 2.1 2.04 × 104

Column 1 is the name of the generated cluster; column 2 is the number of macroscopic sub-clumps; column 3 is the the virial ratio; column 4 is the  coefficient of the mass-spectrum fitting function of eq. 2; column 6 is the total mass of the stars.

tribute. The force integration also includes a solar neighbourhoodlike static external tidal field (Wang et al. 2016). Stellar evolution is not included in our runs, for the sake of simplicity and to make the comparison with the original cluster more straightforward. We evolved the clusters for 10 Myr.
Table 2 shows the main initial properties of the generated clusters for which we ran the N-body simulations. Figure 13 shows the projection in the  -  plane of the original m1e4 cluster and of four generations, at different times. The global evolution of the new generated clusters shows a variety of configurations depending on the different distribution of mass. In some cases, distinct sub-clumps are present at  > 1 Myr and tidally interact with each other before eventually merging. In the case of m1e4g4, two distinct sub-clumps are still present at 10 Myr.
A more quantitative description of the global evolution of the clusters can be given in terms of the evolution of the 10% and 50% Lagrangian radii (10 and 50), centred in the centre of density4. Figures 14 and 15 show the evolution of 10 and 50 for the original clusters and the generated ones. In all the cases, the original

4 The local density around each star was calculated as the density of the sphere that includes the 300 closest stars.
MNRAS 000, 1­14 (2020)

y [pc]

y [pc]

y [pc]

t = 0.0 Myr

8

m1e4

4

0

4

8

8

m1e4g1

4

0

4

8

8

m1e4g2

4

0

4

8

8

m1e4g4

4

0

4

8

8

m1e4g8

4

0

4

8 8 4x [0pc] 4 8

10 1

t = 1.0 Myr
8 4x [0pc] 4 8 100

Seeing the forest for the trees 11

t = 5.0 Myr

t = 10.0 Myr

8 4x [0pc] 4 8 101

8 4x [0pc] 4 8 m [M ]

y [pc]

y [pc]

Figure 13. Projection in the  -  plane of the original cluster (m1e4, upper panel) and four different generated clusters (lower panels) as a function of time. The clusters are shown at their initial configuration (first column) and at three different time steps: 1 Myr (second column), 5 Myr (third column) and 10 Myr (last column). The colour code marks the different masses of the sink particles and their generations.

MNRAS 000, 1­14 (2020)

r10 [pc]

12 Torniamenti et al.
100 10 1 10 2
m3e4
100
10 1
m6e4
100

m1e4

m1e4

101

r50 [pc]

100
m3e4
101

r50 [pc]

100
m6e4
101

r10 [pc]

r50 [pc]

r10 [pc]

0 1 2 3 T4ime5[My6r] 7 8 9 10

0 1 2 3 T4ime5[My6r] 7 8 9 10

Figure 14. Evolution of the 10% Lagrangian radius of the original sink particles and ten different generations for m1e4 (upper panel), m3e4 (middle panel), and m6e4 (lower panel). The orange line represents the original sink particle system, and the blue lines are the generated clusters.
evolution lies within the limits of the distribution of the generated clusters, that shows a large spread. This spread is consistent with the large stochastic fluctuations that we expect in the evolution of such low-mass clusters (e.g., Torniamenti et al. 2021).
5 DISCUSSION AND CONCLUSIONS We introduced a new method for generating a number of new realizations from a given set of initial conditions (particle positions and velocities) produced by a hydro-dynamical simulation. The re-

Figure 15. Same as Figure 14 but for the 50% Lagrangian radius.
alizations are built to display a different large scale structure, but share similar properties at smaller scales, preserving in particular the fractal dimension of the original simulation. We have shown that they can be used as initial conditions for -body simulations, producing a comparable evolution to the original cluster. This suggests that our method is suitable for drawing the initial conditions of a large set of - body simulations at an infinitesimal fraction of the computational cost of generating initial conditions from a hydro-dynamical simulation.
Our novel approach relies on learning a hierarchical clustering structure (represented as a tree) from the original initial condition data through agglomerative clustering. This is later turned into new realizations by modifying the initial branches of the tree (encoding
MNRAS 000, 1­14 (2020)

the relations between the biggest sub-clumps in the simulation). This results in realizations with different macroscopic properties from the original one (e.g., the number of big clumps and their distances), while approximately preserving the characteristics of small scale structure responsible for most of dynamical evolution (e.g., the distribution of pairwise distances between individual stars). In principle, this scheme is very flexible, allowing to choose how much of the large scale structure we control directly, by choosing the number of initial branches we modify.
The realizations we obtained with our method qualitatively resemble the original simulation when visualized in threedimensional space. In our case the original distribution of stars was generated by hydro-dynamical simulations of embedded clusters, so our new realizations appear qualitatively indistinguishable from the output of simulations. The mass spectrum and the velocity distribution are also very similar to the original simulation. The distribution of the number of neighbours as a function of distance reveals that the fractal dimension of our realization and that of the original simulation match on different scales (both show a similar multifractal pattern).
Finally, we ran direct -body simulations of a sample of generated initial conditions for three different original star clusters. In all the cases, the new generations show a realistic evolution on all scales, bracketing that of the original one, as shown by the trend of the 10% and 50% Lagrangian radii. Our analysis suggests that this method is a promising way to generate new mass and phasespace distributions from existing hydro-dynamical simulations, thus increasing our sample of initial conditions for N-body simulations. The speedup in computation obtained by our new method is tremendous: generating initial conditions from hydro-dynamical simulations requires weeks on state-of-the-art hardware, while our procedure takes a few minutes to train an initial tree representation and fractions of a second to generate a new realization.
ACKNOWLEDGEMENTS
MP contribution to this material is based upon work supported by Tamkeen under the NYU Abu Dhabi Research Institute grant CAP3. MM, AB and GI acknowledge financial support from the European Research Council for the ERC Consolidator grant DEMOBLACK, under contract no. 770017. PFDC acknowledges financial support from MIUR-PRIN2017 project Coarse-grained description for non-equilibrium systems and transport phenomena (CO-NEST) n.201798CZL.
DATA AVAILABILITY
The data underlying this article will be shared on reasonable request to the corresponding authors.
REFERENCES
Alessandrini E., Lanzoni B., Ferraro F. R., Miocchi P., Vesperini E., 2016, ApJ, 833, 252
Allison R. J., Goodwin S. P., Parker R. J., Portegies Zwart S. F., de Grs R., 2010, MNRAS, 407, 1098
An J. H., Evans N. W., 2006, AJ, 131, 782 Antoja T., et al., 2018, Nature, 561, 360 Bahcall J. N., Ostriker J. P., 1975, Nature, 256, 23 Ballone A., Mapelli M., Di Carlo U. N., Torniamenti S., Spera M., Rastello
S., 2020, MNRAS, 496, 49
MNRAS 000, 1­14 (2020)

Seeing the forest for the trees 13
Ballone A., Torniamenti S., Mapelli M., Di Carlo U. N., Spera M., Rastello S., Gaspari N., Iorio G., 2021, MNRAS, 501, 2920
Banerjee S., Baumgardt H., Kroupa P., 2010, MNRAS, 402, 371 Bastian N., Lardo C., 2015, MNRAS, 453, 357 Bastian N., Lardo C., 2018, ARA&A, 56, 83 Bastian N., Gieles M., Ercolano B., Gutermuth R., 2009, MNRAS, 392, 868 Bate M. R., 2009, MNRAS, 392, 1363 Bate M. R., Bonnell I. A., Price N. M., 1995, MNRAS, 277, 362 Baumgardt H., Makino J., Ebisuzaki T., 2004, ApJ, 613, 1143 Baumgardt H., Makino J., Hut P., 2005, ApJ, 620, 238 Beaumont D., Stepney S., 2009, in 2009 IEEE Congress on Evolutionary
Computation. pp 2446­2453 Beccari G., Pasquato M., De Marchi G., Dalessandro E., Trenti M., Gill M.,
2010, ApJ, 713, 194 Bertin G., Stiavelli M., 1984, A&A, 137, 26 Bianchini P., Varri A. L., Bertin G., Zocchi A., 2013, ApJ, 772, 67 Boekholt T., Portegies Zwart S., 2015, Computational Astrophysics and
Cosmology, 2, 2 Boley A. C., 2009, ApJ, 695, L53 Boley A. C., Hayfield T., Mayer L., Durisen R. H., 2010, Icarus, 207, 509 Bonnell I. A., Bate M. R., Vine S. G., 2003, MNRAS, 343, 413 Breen P. G., Heggie D. C., 2013, MNRAS, 432, 2779 Burgers J. M., 1948, Advances in Applied Mechanics, 1, 171 Cantat-Gaudin T., 2015, PhD thesis, Universita Degli Studi di Padova Cantat-Gaudin T., et al., 2020, A&A, 640, A1 Carretta E., et al., 2009, A&A, 505, 117 Chardin J., Bianchini P., 2021, MNRAS, Chomsky N., 1959, Information and Control, 2, 137 Chung C., Pasquato M., Lee S.-Y., di Carlo U. N., An D., Yoon S.-J., Lee
Y.-W., 2019, ApJ, 883, L31 Claydon I., Gieles M., Varri A. L., Heggie D. C., Zocchi A., 2019, MNRAS,
487, 147 Corsaro E., et al., 2017, Nature Astronomy, 1, 0064 D'Alessio P., Calvet N., Hartmann L., 2001, ApJ, 553, 321 D'Antona F., Caloi V., 2004, ApJ, 611, 871 D'Antona F., Ventura P., 2007, MNRAS, 379, 1431 D'Antona F., Caloi V., Montalbán J., Ventura P., Gratton R., 2002, A&A,
395, 69 D'Antona F., Vesperini E., D'Ercole A., Ventura P., Milone A. P., Marino
A. F., Tailo M., 2016, MNRAS, 458, 2122 D'Ercole A., Vesperini E., D'Antona F., McMillan S. L. W., Recchi S., 2008,
MNRAS, 391, 825 D'Ercole A., D'Antona F., Ventura P., Vesperini E., McMillan S. L. W.,
2010, MNRAS, 407, 854 Dale J. E., Ercolano B., Bonnell I. A., 2015, MNRAS, 451, 987 Dalessandro E., Raso S., Kamann S., Bellazzini M., Vesperini E., Bellini
A., Beccari G., 2021, arXiv e-prints, p. arXiv:2105.02246 Daniel K. J., Heggie D. C., Varri A. L., 2017, MNRAS, 468, 1453 Davies M. B., Hansen B. M. S., 1998, MNRAS, 301, 15 Davis M., Efstathiou G., Frenk C. S., White S. D. M., 1985, ApJ, 292, 371 Decressin T., Meynet G., Charbonnel C., Prantzos N., Ekström S., 2007,
A&A, 464, 1029 Di Carlo U. N., Giacobbo N., Mapelli M., Pasquato M., Spera M., Wang L.,
Haardt F., 2019, MNRAS, 487, 2947 Di Cintio P., Casetti L., 2019, MNRAS, 489, 5876 Di Cintio P., Casetti L., 2020, in Bragaglia A., Davies M., Sills A.,
Vesperini E., eds, Vol. 351, Star Clusters: From the Milky Way to the Early Universe. pp 426­429 (arXiv:1907.12774), doi:10.1017/S1743921319006744 Dib S., Henning T., 2019, A&A, 629, A135 Dinnbier F., Kroupa P., 2020, A&A, 640, A84 Djorgovski S., 1995, ApJ, 438, L29 Drukier G. A., 1996, MNRAS, 280, 498 Eddy S. R., 2004, Nature biotechnology, 22, 1315 Fabricius M. H., et al., 2014, ApJ, 787, L26 Federrath C., Klessen R. S., 2012, ApJ, 761, 156 Feng Y., Modi C., 2017, Astronomy and Computing, 20, 44 Ferraro F. R., et al., 2018, ApJ, 860, 50

14 Torniamenti et al.
Fujii M. S., Portegies Zwart S., 2016, ApJ, 817, 4 Gaia Collaboration et al., 2018, A&A, 616, A12 Gavagnin E., Bleuler A., Rosdahl J., Teyssier R., 2017, MNRAS, 472, 4155 Geen S., Hennebelle P., Tremblin P., Rosdahl J., 2016, MNRAS, 463, 3129 Gieles M., Zocchi A., 2015, MNRAS, 454, 576 Goodfellow I. J., Pouget-Abadie J., Mirza M., Xu B., Warde-Farley D., Ozair
S., Courville A., Bengio Y., 2014, arXiv e-prints, p. arXiv:1406.2661 Goodman J., Heggie D. C., Hut P., 1993, ApJ, 415, 715 Goodwin S. P., Whitworth A. P., 2004, A&A, 413, 929 Gratton R., Sneden C., Carretta E., 2004, ARA&A, 42, 385 Gratton R. G., Carretta E., Bragaglia A., 2012, A&ARv, 20, 50 Gratton R., Bragaglia A., Carretta E., D'Orazi V., Lucatello S., Sollima A.,
2019, A&ARv, 27, 8 Hemsendorf M., Merritt D., 2002, ApJ, 580, 606 Jebara T., 2012, Machine learning: discriminative and generative. The
Springer International Series in Engineering and Computer Science Vol. 755, Springer Science & Business Media Jelinek F., Lafferty J. D., Mercer R. L., 1992, in Laface P., De Mori R., eds, Speech Recognition and Understanding. Springer Berlin Heidelberg, Berlin, Heidelberg, pp 345­360 Kamann S., et al., 2018, MNRAS, 473, 5591 Kandrup H. E., Sideris I. V., 2003, ApJ, 585, 244 Kaufman L., Rousseeuw P. J., 1990, Finding groups in data. an introduction to cluster analysis. Wiley Series in Probability and Statistics King I. R., 1966, AJ, 71, 64 Klessen R. S., Burkert A., 2000, ApJS, 128, 287 Krause M., Charbonnel C., Decressin T., Meynet G., Prantzos N., 2013, A&A, 552, A121 Krumholz M. R., Klein R. I., McKee C. F., 2012, ApJ, 754, 71 Kuepper A. H. W., Maschberger T., Kroupa P., Baumgardt H., 2011, McLuster: A Tool to Make a Star Cluster (ascl:1107.015) Kulkarni S. R., Hut P., McMillan S., 1993, Nature, 364, 421 Küpper A. H. W., Maschberger T., Kroupa P., Baumgardt H., 2011, MNRAS, 417, 2300 Lada C. J., Lada E. A., 2003, ARA&A, 41, 57 Lee Y.-N., Hennebelle P., 2016, A&A, 591, A30 Lee Y.-N., Hennebelle P., 2019, A&A, 622, A125 Lee Y.-W., Demarque P., Zinn R., 1994, ApJ, 423, 248 Lee Y. W., Joo J. M., Sohn Y. J., Rey S. C., Lee H. C., Walker A. R., 1999, Nature, 402, 55 Lee Y.-W., et al., 2005, ApJ, 621, L57 Leigh N. W. C., Lützgendorf N., Geller A. M., Maccarone T. J., Heinke C., Sesana A., 2014, MNRAS, 444, 29 Li H., Vogelsberger M., Marinacci F., Gnedin O. Y., 2019, MNRAS, 487, 364 Lindenmayer A., 1968a, Journal of Theoretical Biology, 18, 280 Lindenmayer A., 1968b, Journal of Theoretical Biology, 18, 300 Lupton R. H., Gunn J. E., 1987, AJ, 93, 1106 Lynden-Bell D., 1962, MNRAS, 123, 447 Manwadkar V., Trani A. A., Leigh N. W. C., 2020, MNRAS, 497, 3694 Mapelli M., 2016, MNRAS, 459, 3432 Mapelli M., 2017, MNRAS, 467, 3255 Marino A. F., Villanova S., Piotto G., Milone A. P., Momany Y., Bedin L. R., Medling A. M., 2008, A&A, 490, 625 Michie R. W., Bodenheimer P. H., 1963, MNRAS, 126, 269 Milone A. P., Bedin L. R., Piotto G., Anderson J., 2009, A&A, 497, 755 Murphy D. N. A., Geach J. E., Bower R. G., 2012, MNRAS, 420, 1861 Nitadori K., Aarseth S. J., 2012, MNRAS, 424, 545 Pang X., Shen S., Shao Z., 2018, ApJ, 868, L9 Pang X., Li Y., Tang S.-Y., Pasquato M., Kouwenhoven M. B. N., 2020, arXiv e-prints, p. arXiv:2008.02803 Park S.-M., Goodwin S. P., Kim S. S., 2018, MNRAS, 478, 183 Parker R. J., Goodwin S. P., Allison R. J., 2011, MNRAS, 418, 2565 Parker R. J., Wright N. J., Goodwin S. P., Meyer M. R., 2014, MNRAS, 438, 620 Pasquato M., Bertin G., 2008, A&A, 489, 1079 Pasquato M., Bertin G., 2010, A&A, 512, A35

Pasquato M., Matsiuk N., 2019, Research Notes of the American Astronomical Society, 3, 179
Pasquato M., Milone A., 2019, arXiv e-prints, p. arXiv:1906.04983 Pasquato M., Trenti M., De Marchi G., Gill M., Hamilton D. P., Miller M. C.,
Stiavelli M., van der Marel R. P., 2009, ApJ, 699, 1511 Pasquato M., Raimondo G., Brocato E., Chung C., Moraghan A., Lee Y. W.,
2013, A&A, 554, A129 Pasquato M., de Luca A., Raimondo G., Carini R., Moraghan A., Chung C.,
Brocato E., Lee Y.-W., 2014, ApJ, 789, 28 Pasquato M., Miocchi P., Won S. B., Lee Y.-W., 2016, ApJ, 823, 135 Pedregosa F., et al., 2011, Journal of Machine Learning Research, 12, 2825 Piotto G., et al., 2015, AJ, 149, 91 Plummer H. C., 1911, MNRAS, 71, 460 Portegies Zwart S. F., Baumgardt H., Hut P., Makino J., McMillan S. L. W.,
2004, Nature, 428, 724 Prendergast K. H., Tomer E., 1970, AJ, 75, 674 Prusinkiewicz P., Hanan J., 2013, Lindenmayer systems, fractals, and plants.
Lecture notes in Biomathematics Vol. 79, Springer Science & Business Media Rabiner L., Juang B., 1986, IEEE ASSP Magazine, 3, 4 Reina-Campos M., Krussen J. M. D., Pfeffer J. L., Bastian N., Crain R. A., 2019, MNRAS, 486, 5838 Ruthotto L., Haber E., 2021, arXiv e-prints, p. arXiv:2103.05180 Safonova M., Shastri P., 2010, Ap&SS, 325, 47 Salpeter E. E., 1955, ApJ, 121, 161 Seifried D., et al., 2017, MNRAS, 472, 4797 Tailo M., et al., 2015, Nature, 523, 318 Tailo M., et al., 2020, MNRAS, 498, 5745 Torniamenti S., Ballone A., Mapelli M., Gaspari N., Di Carlo U. N., Rastello S., Giacobbo N., Pasquato M., 2021, arXiv e-prints, p. arXiv:2104.12781 Trenti M., Bertin G., 2005, A&A, 429, 161 Umbreit S., Rasio F. A., 2013, ApJ, 768, 26 Varri A. L., Bertin G., 2012, A&A, 540, A94 Vázquez-Semadeni E., Colín P., Gómez G. C., Ballesteros-Paredes J., Watson A. W., 2010, ApJ, 715, 1302 Ventura P., D'Antona F., 2009, A&A, 499, 835 Vesperini E., McMillan S. L. W., D'Ercole A., D'Antona F., 2010, ApJ, 713, L41 Wadsley J. W., Stadel J., Quinn T., 2004, New Astron., 9, 137 Wadsley J. W., Keller B. W., Quinn T. R., 2017, MNRAS, 471, 2357 Wall J. E., McMillan S. L. W., Mac Low M.-M., Klessen R. S., Portegies Zwart S., 2019, ApJ, 887, 62 Wang L., Hernandez D. M., 2021, arXiv e-prints, p. arXiv:2104.10843 Wang L., Spurzem R., Aarseth S., Nitadori K., Berczik P., Kouwenhoven M. B. N., Naab T., 2015, MNRAS, 450, 4070 Wang L., et al., 2016, MNRAS, 458, 1450 Ward J. H., 1963, Journal of the American statistical association, 58, 236 Ward J. L., Krussen J. M. D., Rix H.-W., 2020, MNRAS, 495, 663 Wilson C. P., 1975, AJ, 80, 175 Zamora-Avilés M., et al., 2019, MNRAS, 487, 2200 Zaritsky D., Zabludoff A. I., Gonzalez A. H., 2011, ApJ, 727, 116 de Vita R., Trenti M., Bianchini P., Askar A., Giersz M., van de Ven G., 2017, MNRAS, 467, 4057
This paper has been typeset from a TEX/LATEX file prepared by the author.
MNRAS 000, 1­14 (2020)

