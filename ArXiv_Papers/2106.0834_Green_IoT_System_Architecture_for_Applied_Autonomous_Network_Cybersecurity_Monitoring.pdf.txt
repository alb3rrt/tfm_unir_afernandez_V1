Green IoT System Architecture for Applied Autonomous Network Cybersecurity Monitoring

Zaghloul Saad Zaghloul University of Cincinnati Oil Center Research, llc Cincinnati, Ohio, USA

Nelly Elsayed, Chengcheng Li School of Information Technology
University of Cincinnati Cincinnati, Ohio, USA

Magdy Bayoumi Department of Computer Engineering Univeristy of Louisiana at Lafayette
Lafayette, Louisiana, USA

arXiv:2106.00834v1 [cs.NI] 1 Jun 2021

Abstract--Network security morning (NSM) is essential for any cybersecurity system, where the average cost of a cyberattack is $1.1 million. No matter how much a system is secure, it will eventually fail without proper and continuous monitoring. No wonder that the cybersecurity market is expected to grow up to $170.4 billion in 2022. However, the majority of legacy industries do not invest in NSM implementation until it is too late due to the initial and operation cost and static unutilized resources. Thus, this paper proposes a novel dynamic Internet of things (IoT) architecture for an industrial NSM that features a low installation and operation cost, low power consumption, intelligent organization behavior, and environmentally friendly operation. As a case study, the system is implemented in a midrange oil a gas manufacture facility in the southern states with more than 300 machines and servers over three remote locations and a production plant that features a challenging atmosphere condition. The proposed system successfully shows a significant saving (>65%) in power consumption, acquires one-tenth the installation cost, develops an intelligent operation expert system tools as well as saves the environment from more than 500 mg of CO2 pollution per hour, promoting green IoT systems.
Index Terms--Cybersecurity, IoT, NSM, packet capture, sensor, green systems, oil and gas, Network Security Monitoring
I. INTRODUCTION

intruder's presence so that an incident may be declared and the intruder can be eradicated with minimal damage done.
Any NSM system essentially depends on a device that captures network traffic, detects the anomaly and performs analysis over various levels of details, this device is called NSM sensor. NSM sensors consist of a software suite that is very resource hungry and relay on expensive hardware. The storage disk is the main issue with sensor which can grow up to 1 Tbyte per day in some situations depending on the data type that is it uses. Additionally, NSM data can grow exponentially and require regularly scheduled maintenance, backup and means of accessibility. It is important to note that if the captured data lost, this would limit the ability to perform retrospective analysis that is crucial for a current investigation. Most of the current technologies consider the sensors as a passive device with two interfaces, one interface for management and logging and the other interface for traffic capture. The sensor is also usually used for just reporting to a centralized point for analysis and alert reporting, such as the Snort® repository etc., shown in Figure 1, where the green lines represent the management traffic to the central NSM HQ. The static operation of the sensors makes them

Network Security Monitoring (NSM) is defined as the collection, detection, and analysis of network security data as well as escalation of indications and warnings to detect and respond to intrusions on computer networks [1]. Network security monitoring tools typically features are: network-based threat detection, machine base threat detection, proactive network queries for security data and "hunting" for suspicious behavior, integration with one or more threat feeds, and create security alerts [2]. Information Network security has traditionally started via the United States Department of Defense (US DoD), categorizes the domains of Computer Network Defense (CND) [3].
NSM is based upon the concept that prevention eventually fails. No matter how much time and resources were invested in static securing a network, without employing a continuous monitoring operation, eventually the scenario will make bad guys win. By analogy, all Middle Ages castles eventually were fallen or surrender due to advanced weapon technology or political events. Thus, when this happens, there should be an organized technical system able to detect and respond to the

Fig. 1. A typical NSM sensor placement scenario.

frozen in time, role and functionality as well as the lack of the feedback control, that makes the sensor to look as a waste of investment that pushes back many industrial implementations to refuse adding dedicated NSM systems to their network until it is too late, which is one of the main issues with the NSM implementation.
However, by boosting "life" to these sensors via communication, collaboration, and active control to sensor system architecture can increase their efficiency, increase their illusion of intelligence and reduce the overhead of operation and maintenance cost. Thus, this work applies a novel approach by injecting the dynamic Internet of Thing (IoT) concepts to the NSM sensors, that reduces their size, adds the communication and the control framework, and applies the messaging system to reduce the hardware requirements, lower the operation power consumption and makes the detection and prevention faster for many network intrusions.
Additionally, as a proof of concept, this architecture was applied to the information system network of an oil and gas production facility with more than 300 machines and serves, serving three remote branches. The proposed architecture system saves more than one order of magnitude in equipment cost and more than 1.867MW of annual power consumption as well as saves the environment from more than 4000 mg of CO2 emission per day.

II. BACKGROUND

Oil and gas industrials support 10.3 million jobs in the United States and nearly eight percent of our nation's gross domestic product, with 32.5% of the market share. The oil and gas industry faces unique cybersecurity challenges, given their distributed, decentralized structures and the large operational technology environment that does not fit the traditional cybersecurity scenarios. Thus, the majority of the manufacturers do not have a full cybersecurity implementation due to cost, revenue, utilization, and investment. The investment gap has left most heavy industrials insufficiently prepared for the monitoring, detecting, and preventing threats. As a result, they are attractively targeted by cybercrimes, in 2018, nearly 60% of relevant surveyed organizations had experienced a breach that ended up with financial loss, several of which considered adding NSM system only after the cyberattack incidents [4].
The current technology features many advanced and sophisticated NSW systems for open source and commercial implementations [5]. However, no matter how complex the NSM system is, it still depends on the essential actor of the system, which is the NSM Sensor Platform (SP). The SP is a combination of hardware and software that perform: collection such as Packet Capturing (PCAP) or NetFlow [6], detection such as Signature-Based, Reputation-Based, and/or Anomaly-Based, and network threat analysis [7]. SPs can be classified by their functionality into three classes: Collection Only, Half-Cycle, or Full-Cycle, depending on what operations they perform, which can be: collection only, collection and detection, or collection, detection, and analysis, respectively.

Fig. 2. Security Onion high-level system architecture [8].
SPs usually required a lot of hardware resources; for example, a simple Security Onion® SP requires 12GB of memory, four cores processor, 200GB of disk storage, and two network interfaces [9]. Security onion system architecture is shown in Figure 2. Security Onion is a free and open-source Linux distribution for threat hunting, enterprise security monitoring, and log management. The Security Onion includes Elasticsearch, Logstash, Kibana, Suricata, Zeek, Wazuh, Stenographer, Hive, Cortex, CyberChef, NetworkMiner, and requires expensive hardware configuration [8].
NetFlow is an embedded instrumentation within Cisco IOS Software; it is used to characterize network operation and vision into the network that is an essential tool for IT and system analysts [10]. In response to new requirements and pressures, network operators are finding it critical to understand how the network is behaving including: application, network usage, network productivity, anomaly, and security vulnerabilities. A sample of the NetFlow data structure record is shown in Figure 3.
NetFlow protocol is very useful; however, it consumes a high bandwidth on the network, it is vendor-specific, versionspecific and it also increases the network devices processor utilization (by around  20 %) [10] while reducing the cache availability that is highly depending on the network

Fig. 3. NetFlow cash data sample with network behavior information [8].

performance, especially during peak hours which in the case study is between 8:00 am to 9:30 am, 1:30 pm to 2:30 pm as well as on major social and/or political events (e.g., elections).
SPs are added to the network via two basic methods. The first method is done via port mirroring, which requires some reconfiguring of the network device such as switches and routers (which is not very suitable for the majority of established industrial implementations) that many system network administrators would refuse to perform without proper testing and several simulation runs of the whole network computer system, especially for the production automation facilities where a heterogeneous network profile of different sensor, actuators gauges, and automation devices are most probably installed and configured with less than minimum documentation and little options activated. The second method is via a network tapping that can be more transparent to the network administration and management team, where network taps could be implemented via a hardware tap or virtually via a software tap [11], [12]. Software tap is usually preferred for temporary solutions and remote installations. Both types of network taps provide basic access to the wired network lines to capture the outbound (Tx) and/or the inbound (Rx) data traffic. The data are basically seen as packets from the NSM level of operation in the TCP/IP stack. The essential data types the SPs process are:
· Full Packet Capture in from of (PCAP): that has all the details of the communication between two nodes.
· Flow Data (FD): that has the log of the communication, the summary log of the sessions.
· Packet String Data (PSTR): that has the human-readable contents of the packets.
The Internet of Things refers to the ever-growing network of physical objects that feature identifiers for internet connectivity and data exchange communication that occurs between these objects and other systems [13]. This work proposes a novel NSM architecture based on the IoT concept that converts the static NSM sensors into an active IoT sensors framework, applying the concept of the NSM Hub and the IoT clouds. The proposed sensors are built on miniature board machines. The IoT hub is implemented on a single NSM machine with a backup (to avoid a single point of failure) and IoT cloud

Fig. 4. The proposed system IoT NSM high-level architecture.
storage. The proposed system overcomes the cost associate with traditional NSM via reduced hardware, increased sensor utilization, and saved power via the low operational energy consumption.
III. SYSTEM DESIGN AND SILENCE UNVEIL
A. Proposed Architecture
The higher level of the proposed system architecture is shown in Figure 4 where it shows the sensors were replaced by IoT Network Monitoring Sensor (IoTS) sensors, an IoT Hub was added for data aggregation, and an IoT Could storage was established, the following subsections discuss the detailed descriptions excluding cloud architecture as it is a standard implementation and out of the scope of this work.
B. The IoTS NSM Sensor
This work proposes a miniature compact dynamic NSM senor (i.e., IoTS) to replace the tradition static machines (servers that are NSM Sensors). The Proposed IoTS hardware is a custom Raspberry Pi build with two-gigabit ethernet ports and a Wi-Fi Antenna. The network ports are used for software tapping and capturing packets. The IoTS uses the Wi-Fi as a primary link for neighbor discovery and IoT Hub control signals. In the case study, the IoTS node is selected with the specs as shown in Table I. Additionally, it is important to notice that with this hardware configuration, the node cost does not exceed one-tenth of the cost of a traditional midrange NSM Sensor.
The IoTS uses a compiled NSM software for packet capture, where the session packet capture process is done via FProbe, the PCAP is performed via daemonlogger, and the PSTR is based on URLsnarf software [14]. The IoTS node features the sensor functionality polymorphism. It is characterized by the ability to change the type of the packet, capturing the scope and the sensor role of the node according to the IoT Hub control signal that acts as a transition trigger. The IoTS role

TABLE I IOTS NODE HARDWARE SPECS.

Parameter CPU Memory NICs Wireless Storage Pwr Consum

Hardware Node Specs Broadcom quad-core 64-bit SoC, 1.5GHz 8GB LPDDR4 2x Gigabit Ethernet, Endace 5.0 GHz IEEE 802.11b/g/n/ac, Bluetooth 5.0, BLE 2TB USB 3.0 Flash Drive, w/r 100MB/s Idea 1Watt, Peak 1.5Watt, Fanless

Fig. 5. IoTS node action roll state machine with power-saving signal transmission via green arrows and state analysis escalation signals via blue arrows.
can switch between collection only, collection and detection, or collection and detection and analysis, as shown in Figure 5, role state machine.
C. The IoT Hub Sensor
To all appearance, the IoT Hub could be seen as a regular NSM sensor machine from the hardware configuration point; however, the proposed implementation adds some IT intelligence that manages the IoTS states base on the detection warning and alerts, saves the power state for the least needed operation, directs the data storage location when needed via the neighbor storage sharing mechanism (NSSM) which uses Dijkstra shortest pass algorithm the find nearby nodes (using network hops and network utilization as a metric) to find the nearest available node with extra storage to maneuver the data storage task when needed, schedules the data transfer to the IoT cloud, adds a second level detection alerts filtering to reduce false-positive alerts via a pooling mechanism to increase the systems precision.
The IoT Hub also allows NSM HQ connection for flow monitoring and operation to an individual IoTS node or any other part of the system, including a communication route scenario. Additionally, the proposed IoTS enriches the monitoring capability to the point that even the management flow could be monitored for an extra security precautions with very low installation and operation cost with a low network configuration overhead. The IoT Hub uses the following criteria for heuristic information and decision-making mechanism to manage the state machine of each node in the network domain based on the data that it gathers from the node messaging

system such as: sensor state, sensor role state, anomaly traffic detection, attack attempt detection, nearby nodes graph, and data collection location change. These data are stored in a database on the cloud with an instance cached on the IoT Hub for fast access. The database contains weight and probability values that are structured into a string that describes the whole system as a unit and assigns a proposed list of actions to be deployed to the IoTS to either change or keep their role state as well as predict the NSSM triggers.
The initial values of the system states are set manually to the IoT Hub; the IoTS state is initially set to coll. & detn, (i.e., allowing the global Collection and Detection) for all the node; however, it could be configured according to the system operation needs such as: normal routine monitoring, warning threshold checks, anomaly detected, or attack attempt occurrence. Additionally, the system representation string database is used by a parametrized generic algorithm [15], [16] that provides a simple and primitive form of advice assistance to the network monitoring analysts team that is base on a supervised learning scheme that gains experience with time and can provide a smart performance on the long run. This unit is added to the system as a first step for a more tailored and case-specific informed decision-making mechanism for a fully automated IoTS system.
The proposed system was implemented at an oil and gas mid-range production plant with 15 IoTS nodes distributed at the production plant, the sales and vendor access locations, the server room as well as three remote branches in Louisiana, Texas, and Oklahoma. The system was observed for 11 months and during extremely hot summer (>100°F) at dusty and greasy operation conditions.
IV. RESULTS AND OBSERVATION
The IoT system concept enhances the static NSM architect with dynamic behavior and helps the network monitoring analysts by adding more diverse operations via new functionalities such as: dynamic sensor role change, power saving options, and sensor agents-like smart behavior. The major enhancements, as seen from the industrial management point of view, are the lower power consumption and the reduced initialization, deployment, and operation cost, that are the main barriers that delay the NSM implementation for this sector of the industry as well as the harsh environment operation condition tolerance. The initial cost was reduced by an order of a magnitude. The low power and fan-less hardware boards are the winning solutions for the outdoors and unbearable grease and dust particles contamination atmosphere. Additionally, the average power computation during the eleven months operation was reduced from 1.38 kWh to 0.48 kWh (by 65% less) at a peak sensor utilization that leads to saving the environment from 563.4 mg of CO2 per hour, making the proposed system a green IoT solution.
V. CONCLUSION
The IoTS NSM system architecture approach demonstrates its efficiency and promotes an environmentally friendly so-

lution, especially in the major polluting industries where its middle range sector is facing many challenges to enter the next cyber information age era. The proposed system characterizes the IoT architecture capabilities that give the network security analysts a new boost and novel tools of network security monitoring operation, optimization and functionality, cooperative thread detection and prevention mechanisms with a minimum effort from the system administration teams and zero-configuration task to the network engineers.
However, the proposed system has several limitations. First, regarding the physical security on the nodes, which is the case with all wireless sensor networks. Second, the proposed system may suffer from packet drop that occurs during the transition time of an IoTS during the role transfer operation that can take up to 35 seconds at a worst-case, which could be solved by deploying multiple IoTSs on the same flow line to back up the transfer. Third, the quality of the hardware plays a very important role, especially the NICs, to prevent buffer overflow and packets loss which may jeopardize the precision of the NSM detection system. Finally, the parametrized learning algorithm needs high attention from the system analyst team, and such learning methods are pruned to learn wrong decision, which can be improved via adding a more sophisticated but lightweight learning technology such as adaptive pattern recognition such as Artificial Immune System, which the authors are considering for the future work.

[16] L. Dawel, A.-K. Seifert, M. Muma, and A. M. Zoubir, "A robust genetic algorithm for feature selection and parameter optimization in radarbased gait analysis," in 2019 IEEE 8th International Workshop on Computational Advances in Multi-Sensor Adaptive Processing (CAMSAP), pp. 674­678, IEEE, 2019.

REFERENCES
[1] C. Sanders and J. Smith, Applied network security monitoring: collection, detection, and analysis. Elsevier, 2013.
[2] D. Delaney, "Netfort, know your networks, network security monitoring," 2021.
[3] P. L. Campbell, "Department of defense instruction 8500.2 "information assurance (ia) implementation:" a retrospective.," 7 2012.
[4] "Independent study on scada/ics security risks," 2020. [5] Q. Meng, D. Li, and Y. Ma, "Research and application based on network
security monitoring platform and device," in 2019 IEEE Innovative Smart Grid Technologies-Asia (ISGT Asia), pp. 716­719, IEEE, 2019. [6] S. G. Mack and G. Sriram, "Netflow: A tool for isolating carbon flows in genome-scale metabolic networks," vol. 12, p. e00154, 2021. [7] J. R. Vacca, Computer and information security handbook. Newnes, 2012. [8] R. Heenan and N. Moradpoor, "Introduction to security onion," in The First Post Graduate Cyber Security Symposium, 2016. [9] "Securityonion, hardware requirements," 2021. [10] "Introduction to cisco ios netflow - a technical overview," 2012. [11] S. Jeong, J.-H. You, and J. W.-K. Hong, "Design and implementation of virtual tap for sdn-based openstack networking," in 2019 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), pp. 233­241, IEEE, 2019. [12] L.-M. Wang, T. Miskell, P. Fu, C. Liang, and E. Verplanke, "Ovsdpdk port mirroring via nic offloading," in NOMS 2020-2020 IEEE/IFIP Network Operations and Management Symposium, pp. 1­2, IEEE, 2020. [13] D. Kiran, Production planning and control: A comprehensive approach. Butterworth-Heinemann, 2019. [14] K. Salah, M. Hammoud, and S. Zeadally, "Teaching cybersecurity using the cloud," IEEE Transactions on Learning Technologies, vol. 8, no. 4, pp. 383­392, 2015. [15] S. Selim, A. Shoukry, and Z. S. Zaghloul, "Towards better computer game ai techniques," in The 2nd Conference on Computer Science innovation technology (CCSIT), 2013.

