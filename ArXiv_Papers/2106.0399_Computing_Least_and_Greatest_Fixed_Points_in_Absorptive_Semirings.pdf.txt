arXiv:2106.00399v2 [cs.LO] 4 Jun 2021

Computing Least and Greatest Fixed Points in Absorptive Semirings
Matthias Naaf
RWTH Aachen University, Germany naaf@logic.rwth-aachen.de
Abstract. We present two methods to algorithmically compute both least and greatest solutions of polynomial equation systems over absorptive semirings (with certain completeness and continuity assumptions), such as the tropical semiring. Both methods require a polynomial number of semiring operations, including semiring addition, multiplication and an infinitary power operation. Our main result is a closed-form solution for least and greatest fixed points based on the fixed-point iteration. The proof builds on the notion of (possibly infinite) derivation trees; a careful analysis of the shape of these trees allows us to collapse the fixed-point iteration to a linear number of steps. The second method is an iterative symbolic computation in the semiring of generalized absorptive polynomials, largely based on results on Kleene algebras.
Keywords: Fixed-Point Computation, Absorptive Semirings, Semiring Provenance
1 Introduction
A recent line of research on semiring provenance analysis for databases [9,4,10], logic [7,3] and games [8] has identified the class of absorptive semirings as an appropriate domain for provenance semantics of fixed-point logics [3] and games with fixed-point semantics, such as Bu¨chi or parity games. The underlying idea is to replace the Boolean evaluation of formulae by computations in certain semirings. From this point of view, a formula is essentially a polynomial expression over some semiring, and fixed-point formulae evaluate to least or greatest solutions of polynomial equation systems. To guarantee the existence and meaningfulness (when interpreted as provenance information) of these fixed points, one assumes that the semiring is equipped with a natural order that is a complete lattice1 (for the existence) and that the semiring is absorptive, that is, 1 + a = 1 for all elements a. Absorption guarantees a duality of the semiring operations in the sense that addition is increasing, with least element 0, while multiplication
1 It suffices to assume that the natural order is fully chain-complete [3]. However, for absorptive semirings both notions coincide.

2

M. Naaf

is decreasing, with greatest element 1, and it is this property that leads to meaningful provenance information of greatest fixed points [3].
This raises the question how one can (efficiently) compute least and greatest solutions of polynomial equation systems over such semirings. The textbook approach is the fixed-point iteration: Start by setting all indeterminates to the smallest (or greatest) semiring value, then repeatedly evaluate the equations to obtain new values for all indeterminates. In the Boolean setting, this terminates in O(n) steps on n indeterminates, but we are also interested in larger and especially infinite semirings such as the tropical semiring2 T = (R0  {}, min, , , 0). Several techniques have been developed to compute least solutions in -continuous semirings (where suprema exist and are compatible with the semiring operations): Hopkins and Kozen [12] have defined a faster iteration scheme based on differentials and more recently, Esparza, Kiefer and Luttenberger [5] have used this idea to generalize Newton's method to -continuous semirings. This works surprisingly well for a wide variety of semirings (in fact, their results for idempotent semirings subsume our result for least fixed points).
Our goal is to complement these results with methods to also compute greatest solutions, as our motivation stems from semiring provenance where both least and greatest fixed points are considered. To this end, we work with absorptive, fully continuous semirings (requiring continuity for both suprema and infima).
Example. Consider the following graph whose edges are annotated by cost values in the tropical semiring. A natural example of a greatest fixed point is the minimal cost of an infinite path. This corresponds to the greatest solution of the equation system given on the right, where each node is represented by an indeterminate and costs appear as coefficients (notice that the right-hand sides are indeed polynomial expressions in terms of the semiring operations).

1

0

a 1 b 20 c

Xa = 1  Xa Xb = min(1  Xa, 20  Xc) Xc = 0  Xc

When we speak of least or greatest solutions, we always refer to the natural order of the semiring. In the case of the tropical semiring, this is the inverse of the standard order, so  <T 20 <T 1 <T 0. While the least solution of the above system is trivially Xa = Xb = Xc = , the fixed-point iteration for the greatest solution is infinite:

0

1

2

3

20

21

22

23

0  1  2  3  · · ·  20  20  20  20  · · ·

0

0

0

0

0

0

0

0

and converges to the greatest solution: Xa = , Xb = 20 and Xc = 0.
Main Result. The essential idea to compute such solutions is that greatest fixed points are composed of two parts: A cyclic part that is repeated indefinitely (the

2 We use  for the addition on R to distinguish it from the semiring operation +.

Computing Least and Greatest Fixed Points in Absorptive Semirings

3

loop at a or c) and a reachability part to get to the cycle (the edges from b). As both parts can consist of at most n nodes, all information we need is already present after n steps of the fixed-point iteration; we can use this information to abbreviate the iteration. The formal proof of this observation is based on (infinite) derivation trees, inspired by the derivation trees in the analysis of Newton's method [5] and infinite strategy trees in [3]. We show that these trees provide an alternative description of the fixed-point iteration; a careful analysis of the shape of the derivation trees then leads to our main result:
Theorem 1. Let F be the operator induced by a polynomial equation system in n indeterminates over an absorptive, fully-continuous semiring. We can compute least and greatest solutions in a polynomial number of semiring operations:
­ the least solution is F n(0), ­ the greatest solution is F n( F n(1) ).
Here, a is the infinitary power operation a := nN an which is welldefined (and usually easy to compute) in the absorptive semirings we consider. For instance, in the tropical semiring we have 0 = 0 and a =  for a = 0.
Iterative Approach. Our second approach is a technique to eliminate indeterminates one by one, based on the work of Hopkins and Kozen on Kleene algebras [12]. We apply their iterative approach to the semiring S[X] of absorptive polynomials, which is perhaps the most relevant semiring for provenance analysis, and extend it to include greatest solutions.
Outline. This paper is structured as follows: Section 2 introduces the problem setting, in particular the relevant class of semirings, as well as derivation trees. Section 3 establishes the connection between derivation trees and the fixed-point iteration, and Section 4 builds on this concept to prove our main result. The iterative approach for absorptive polynomials is discussed in Section 5.

2 Preliminaries
This section introduces polynomial equation systems, gives an overview on the semirings we are interested in and introduces the notion of derivation trees.

2.1 Polynomial Equation Systems
Throughout the paper, we always fix a finite set X = {X1, . . . , X } of pairwise different indeterminates. A monomial over X is a product of powers of indeterminates, represented as mapping m : X  N assigning exponents to the indeterminates.
We use bold symbols to denote tuples: a = (a1, . . . , a ). In particular, 0 = (0, . . . , 0) and 1 = (1, . . . , 1). To simplify the presentation, we often avoid numbered indices. Given X = {X1, . . . , X }, we instead index tuples by these indeterminates. That is, for a tuple a = (a1, . . . , a ) and an indeterminate X  X, we write aX for the entry ai such that Xi = X.

4

M. Naaf

Definition 2. A polynomial P over a semiring (K, +, ·, 0, 1) and indeterminates

X is a finite formal sum of the form P =

k i=1

ci

·

mi,

where

the

mi

are

pairwise

different monomials over X and ci  K \ {0} are arbitrary coefficients.

Abusing notation, we write c · m  P or m  P if there is an i with m = mi

(and c = ci). We may write P (X1, . . . , X ) to make the indeterminates explicit.

Then, P (a1, . . . , a )  K is the semiring value that results from instantiating

each indeterminate Xi by ai  K and evaluating the resulting expression in K.

Definition 3. A polynomial equation system E over a semiring K and indetermi-
nates X = {X1, . . . , X } is a family of equations E : Xi = Pi(X1, . . . , X ) 1i with polynomials Pi over X and K.
We associate with E the operator FE : K  K defined by FE (a1, . . . , a )X = PX (a1, . . . , a ), for X  X. The least (greatest) solution to E is thus the least (greatest) fixed point of FE . We drop the index if E is clear from the context.

Recall the example from the introduction in the tropical semiring (where semir-
ing addition is min and semiring multiplication is ). Using X = {Xa, Xb, Xc}, we refer to the polynomial equation system as (X = PX )XX . For example, PXb is the polynomial min(1  Xa, 20  Xc) consisting of the two coefficient-monomial pairs 1  Xa and 20  Xc.

2.2 Semirings
Definition 4. A commutative semiring is an algebraic structure (K, +, ·, 0, 1), with 0 = 1, such that (K, +, 0) and (K, ·, 1) are commutative monoids, · distributes over +, and 0 · a = a · 0 = 0. It is idempotent if a + a = a and absorptive if 1 + a = 1, for all a  K.
In an idempotent semiring K, the natural order K is the partial order with a K b if a + b = b, for a, b  K. We drop the index if K is clear from the context.
Absorptive semirings have also been called 0-closed or bounded [13]. Moreover, absorption is equivalent to 1 being the K-maximal element and to multiplication being decreasing, i.e., ab K a for all a, b  K (dually to increasing addition).
All semirings considered in this paper are commutative and absorptive (except for N). To guarantee the existence of fixed points, we further require that the natural order is a complete lattice so that suprema and infima always exist (with respect to K). In addition, we make a continuity assumption stating that the semiring operations commute with the lattice operations on chains (a chain is a totally ordered set). This is crucial for most of our proofs, but does not seem to be a strong restriction in practice: all natural examples of complete-lattice semirings we are aware of are in fact also fully continuous.
Definition 5. An idempotent semiring K is fully continuous if K is a complete lattice and for all a  K, all nonempty chains C  K and   {+, ·},
(a  C) = a  C and (a  C) = a  C.
A homomorphism h : K1  K2 on fully-continuous semirings is fully continuous if h( C) = h(C) and h( C) = h(C), for all nonempty chains C  K1.

Computing Least and Greatest Fixed Points in Absorptive Semirings

5

Since multiplication is decreasing in absorptive semirings, powers of an element a form a descending chain 1  a  a2  . . . whose infimum we denote by a.

Definition 6. In an absorptive, fully-continuous semiring K, the infinitary power operation is defined by a := nN an, for each a  K, and a := (a 1 , . . . , a) for tuples a  K .
Using continuity of multiplication, one can easily verify the properties (ab) = ab, (an) = a and (a + b) = a + b (see [2] for details). We remark that it is usually quite easy to compute the infinitary power. One can further define infinite sum and product operations on families (ai)iI over K with arbitrary index set I. Summation is simply defined as supremum, for products we refer to [2, Appendix]. Here we only need infinite products over finite domain {ai | i  I} (as we have finitely many coefficients), which are commutative, associative and commute with fully-continuous homomorphisms and the infinitary power.
Fully-continuous homomorphisms further preserve fixed points of monotone functions, in particular least and greatest solutions of polynomial systems:

Lemma 7. Let h : K1  K2 be a fully-continuous homomorphism on absorptive, fully-continuous semirings. Let E : (Xi = Pi)1in be a polynomial equation system over K1. Let h(E) : (Xi = h(Pi))1in result from E by applying h to all coefficients. Then, lfp(Fh(E)) = h(lfp(FE )) and gfp(Fh(E)) = h(gfp(FE )).
Proof. Recall that the semiring operations are fully continuous in K1 and K2. Hence FE and Fh(E) are fully continuous as well, and by Kleene's Fixed-Point Theorem and the continuity of h, we get

h(lfp(FE )) = h

FEn(0) =

h

FEn(0)

()
=

Fhn(E)(0) = lfp(Fh(E)),

nN

nN

nN

where () is easy to see by induction, since h is a homomorphism and the operators are defined by polynomials. The proof for greatest solutions is symmetric.

Examples. Some examples of absorptive, fully-continuous semirings are:
­ The Boolean semiring B = ({0, 1}, , , 0, 1) is the habitat of logical truth. ­ T = (R 0, min, , , 0) is the tropical semiring used for cost computations. ­ The Viterbi semiring V = ([0, 1], max, ·, 0, 1) is isomorphic to T and can be
used to model confidence scores. ­ The Lukasiewicz semiring L = ([0, 1], max, , 0, 1) with a b = max(0, a+b-1),
used in many-valued logics. ­ The min-max semiring on a totally ordered set (A, ) with least element a
and greatest element b is the semiring (A, max, min, a, b). ­ The semiring of generalized absorptive polynomials S[X], defined below.
We write N for the semiring of natural numbers extended by a special element  (with n ·  = n +  = , for n = 0). It is neither absorptive nor idempotent (but fully continuous w.r.t the standard order on natural numbers).

6

M. Naaf

Absorptive Polynomials. The most important absorptive, fully-continuous semiring, both from a provenance perspective and for our proofs, is the semiring of (generalized 3) absorptive polynomials S[X]. We briefly summarize its definition and key properties from [3]. Given a finite set X of indeterminates, a (generalized) monomial over X is a mapping m : X  N (here we also allow the exponent ). We say that a monomial m1 absorbs m2, denoted m1 m2, if m1(X)  m2(X) for all X  X (notice that absorption is the inverse of the pointwise order on the exponents). In order to mimic the algebraic property of absorption, polynomials are antichains of monomials. Addition and multiplication are defined as usual, but we drop monomials that are absorbed after each operation.

Definition 8. The semiring (S[X], +, ·, 0, 1) of (generalized) absorptive polynomials consists of all antichains of monomials (w.r.t. absorption). We write 0 for the empty antichain and 1 for the antichain {1}. Given P, Q  S[X], define

P + Q = Maximals(P  Q), P · Q = Maximals{m1 · m2 | m1  P, m2  Q},

where Maximals(M ) denotes the set of -maximal monomials in M .

This semiring is absorptive and fully-continuous with S = Maximals( S) for sets S  S[X]. Moreover, S[X] is the most general such semiring, as made explicit in the following universal property. Together with Lemma 7, this is a
fruitful tool to simplify reasoning about all absorptive, fully-continuous semirings.

Theorem 9 (universal property, [3]). Every mapping h : X  K into an
absorptive, fully-continuous semiring K uniquely extends to a fully-continuous semiring homomorphism h : S[X]  K (by means of polynomial evaluation).

For our technical results, we also need the following observations from [3] (the statements (1) and (3) in fact hold in all absorptive, fully-continuous semirings, but the proof is much easier in S[X] and this is all we need).
Lemma 10 ([3]). Let S  S[X] and P  S[X]. Then,
1. P · S = {P · Q | Q  S}, and 2. ( S) = {Q | Q  S}, and 3. h( S) = h(S), if h : S[X]  K is a fully-continuous homomorphism.
Lemma 11 ([3]). Let (Pi)iN be a descending -chain with Pi  S[X]. Then,

Pi =
iN

mi
iN

(mi)iN is a descending -chain of monomials with mi  Pi

.

To clearly distinguish between indeterminates in polynomial equation systems
and absorptive polynomials, we often use the indeterminate set A = {A1, . . . , Ak} for the latter, in particular when we use values from S[A] as coefficients.

3 S[X] generalizes the semiring Sorp(X) of absorptive polynomials in [4] by adding the
exponent  (which is needed to have fully-continuous homomorphisms in Theorem 9). We only use S[X] in this paper and hence drop generalized in the following.

Computing Least and Greatest Fixed Points in Absorptive Semirings

7

2.3 Derivation Trees
Inspired by the analysis of Newton's method [5], we use derivation trees to describe the behaviour of polynomial equation systems. For the intuition behind this notion, think of a polynomial system as a formal grammar: The indeterminates are the nonterminal symbols, coefficients the terminal symbols, and each monomial in PX gives rise to a production rule for X. We essentially consider derivation trees of this grammar in the usual sense, except that we ignore the order of children (we use commutative semirings) and allow infinite derivations.
While our notion of derivation trees is conceptually identical to [5], we should note that the definition of the yield labeling is slightly different.
Definition 12. A derivation tree T = (V, E, var, yd) over a semiring K and indeterminates X is a (possibly infinite) tree (V, E) with node labelings var : V  X and yd : V  K, the yield of v. We say that T is from X if for the root , we have var() = X. For convenience, we often write v  T instead of v  V and refer to v with var(v) = X as an occurrence of X in T .
We associate with each node the monomial mon(v) = wvE var(w) composed of its children's indeterminates. We say that T is compatible with the system (X = PX )XX if for each node, yd(v) · mon(v)  Pvar(v). The set of all derivation trees from X that are compatible with the system E is denoted T (E, X).
Given an equation system E : (X = PX )XX and an indeterminate X, a derivation tree T  T (E, X) first chooses from the equation X = PX a monomial mon() together with its coefficient yd(). On the next level, it then makes analogous choices for all indeterminates occurring in mon(), where the exponent specifies how often an indeterminate occurs. The leaves v of such a derivation tree (if they exist) have mon(v) = 1 and correspond to absolute coefficients in one of the equations. See Fig. 1 for an example. We define the yield of an entire tree as the combined yield of all nodes (recall that we assume K to be absorptive and fully-continuous, so infinite products are well-defined):
Definition 13. The yield of a derivation tree T = (V, E, var, yd) over K is the (possibly infinite) product yd(T ) = vV yd(v)  K.
We compare the yields of two trees by counting occurrences of coefficients or, equivalently, of monomials from the polynomial equation system.
Definition 14. Let E be an equation system over X, let Y  X and m  PY . For derivation trees T  T (E, X), we define
|T |m,Y = {v  T | mon(v) = m, var(v) = Y }  N
as the number of occurrences of m  PY in T . Notice that we use pairs (m, Y ) to unambiguously refer to m  PY , as m may also occur in other polynomials of E.
Lemma 15 (yield comparison). Given a polynomial system E : (X = PX )XX over an absorptive, fully-continuous semiring and trees T, T  T (E, X),

8

M. Naaf

­ if |T |m,Y  |T |m,Y for all m  PY , Y  X, then yd(T )  yd(T ), ­ if |T |m,Y = 0 implies |T |m,Y = 0 for all m, Y , then yd(T )  yd(T ).

Proof. We use the properties of infinite products to group the yields by monomials. For each m  PY , let cm,Y  K be its coefficient, such that c · m  PY . Then,

yd(T ) = yd(v) =

yd(v) =

(cm,Y )|T |m,Y ,

vT

Y X, vT, mPY var(v)=Y,
mon(v)=m

Y X, mPY

and the same applies to T . The product on the right is finite and by absorption,
larger exponents lead to smaller values, hence yd(T )  yd(T ). If we apply the infinitary power, we similarly get yd(T ) = m,Y (cm,Y )·|T |m,Y , where  · |T |m,Y is either  (if |T |m,Y > 0) or 0, implying the second statement.

3 Derivation Trees and the Fixed-Point Iteration

As a first step towards our main result, this section shows that we can express least and greatest solutions in terms of the yields of derivation trees. Notice that a single derivation tree does not correspond to a solution of the equation system, but only to (the derivation of) a single term in the solution. We thus consider the sum or, equivalently, supremum over all derivation trees.
For least solutions, this was already shown (for a slightly different notion of derivation trees) in [5]. Here we are mostly concerned with the proof for greatest solutions, as this is much more involved due to the trees being infinite.

Theorem 16. Let K be an absorptive, fully-continuous semiring. Let E : (X = PX )XX be a polynomial equation system over K. Then for each X  X,

lfp(FE )X =

yd(T ),

T T (E,X), T is finite

gfp(FE )X =

yd(T ).

T T (E,X)

We first observe that it suffices to prove Theorem 16 for the most general semiring K = S[A]. That is, with the coefficients being absorptive polynomials (not to be confused with the polynomials of the equation system E).

Claim. If Theorem 16 holds for K = S[A], then it also holds for any absorptive, fully-continuous semiring K.

Proof. Let K be an absorptive, fully-continuous semiring. Given E : (X =
PX )XX over K, we construct a symbolic abstraction E : (X = PX )XX over S[A]. To this end, let PX result from PX by replacing all coefficients with pairwise different indeterminates from A. Let h : A  K be the correspond-
ing instantiation of these indeterminates that reverses this process, so that

Computing Least and Greatest Fixed Points in Absorptive Semirings

9

h(E ) = E. By Theorem 9, this mapping induces a fully-continuous homomorphism h : S[A]  K, so by Lemma 7, we have for each X,

gfp(FE )X = gfp(Fh(E ))X (=7) h(gfp(FE ))X = h

yd(T )

T T (E ,X)

Notice that the structure of derivation trees T (E, X) only depends on the monomials occurring in E, but not on the coefficients. Thus, the derivation trees for E and E are identical up to the labeling yd. Given a tree T  T (E, X), it holds in particular that

yd(T ) = yd(v) = h(yd(v)) = h

yd(v) = h yd(T )

vT

vT

vT

where T  T (E , X) is the tree corresponding to T (so that only yd is changed according to the coefficients in E ). By using the one-to-one correspondence between trees T  T (E, X) and T  T (E , X), we can conclude

gfp(FE )X = h

yd(T )

(10)
=

h yd(T ) =

yd(T ).

T T (E ,X)

T T (E ,X)

T T (E,X)

The proof for lfp(E) is symmetric.

For the remaining section, we fix a polynomial equation system E : (X = PX )XX over K = S[A] and consider the induced operator F . The proof proceeds by induction on the fixed-point iterations F n(0) and F n(1), but requires some preparation. The idea is that if complete derivation trees correspond to the fixed points, their prefixes should correspond to the steps of the iteration. These prefixes are defined by simply cutting off the derivation trees at a certain depth and assigning a specific yield to the nodes at the cut-off depth (eventually, we will simply assign 0 for the least and 1 for the greatest fixed point).

Definition 17. Let T = (V, E, var, yd)  T (E, X), n  N and b  K . Let Vn  V be the nodes at depth  n. We define the (n, b)-truncation of T as

T

b n

:=

(Vn,

E



V2n,

var,

yd

),

yd (v) =

bvar(v), yd(v),

v at depth n, otherwise,

This defines a derivation tree (compatible with E except for its leaves) and we define mon(v) and yd(T bn) as in Definition 12.
The following, mostly technical lemma establishes the general connection between truncations of derivation trees and the fixed-point iteration.
Lemma 18 (tree iteration). Let K = S[A] and b  K . Then, F n(b)X = T T (E,X) yd(T bn), for all n  N, X  X.

10

M. Naaf

X1 = aX1 + bX2X3 X2 = cX12 X3 = d

T:

X1/b

X2/c X3/d

X1/a X1/a

X1/a X1/a

T

z 2

:

X1/b

X2/c X3/d

X1/z1 X1/z1

Fig. 1. A derivation tree T and its (2, z)-truncation for a sample equation system, with

node labels var(v)/yd(v). The trees have yield yd(T ) = abcd and yd(T

z 2

)

=

z12bcd.

Proof. Induction on n. For n = 0, we trivially have F n(b)X = yd(T b0 ) = bX for all derivation trees T  T (E, X). For the induction step, assume that F n(b)X =
T T (E,X) yd(T bn) for all X  X. We have to show that

F n+1(b)X = PX (F n(b)) =!

yd(T bn+1).

T T (E,X)

To simplify notation, let a be the tuple with aX =

T T (E,X) yd(T

b n

).

We

can

rewrite the left-hand side as follows (recall that m(X) denotes the exponent of

X in m):

PX (a) =

(c · m)(a) =

c·

am X (X )

c·mPX

c·mPX

X X

=

c · aX1 · aX1 · · · aX1 · . . . · aX · · · aX

c·mPX

m(X1) times

m(X ) times

Notice that the unfolded product is finite, since m only has finite exponents. By
Lemma 10, multiplication distributes over the (infinite) sums aX1 , aX2 , . . . . The product aX1 · aX1 · · · aX can thus be rewritten as sum:

=

c·

yd(Ti,1

b n

)

·

·

·

yd(Ti,m(Xi

)

b n

)

c · m  PX and all possible choices of trees Ti,j  T (E, Xi)

1i

=

yd(T bn+1) c · m  PX , T  T (E, X) with mon() = m, yd() = c

=

yd(T bn+1) T  T (E, X)

For these last three steps, recall that derivation trees from X first choose a

monomial (and corresponding coefficient) c · m  PX . The root  then has yield

c and the children are derivation trees from the indeterminates occurring in m.

By commutativity of the infinite product yd(T

b n+1

),

we

can

group

together

the

yields of the child subtrees, thereby obtaining a one-to-one correspondence with

the product terms in the first step.

Computing Least and Greatest Fixed Points in Absorptive Semirings

11

To prove Theorem 16, all that is left to do is to consider the supremum of the iteration F n(0) and the corresponding tree truncations, and dually the infimum of F n(1). For the infimum, one last obstacle needs to be resolved: We must show that whenever we pick for each n some n-truncation, their infimum can still be realized as yield of an actual (infinite) tree, even if we pick a different tree to truncate for each n. A similar observation has been used for strategy trees of model-checking games in [3], where it was called puzzle lemma (due to a more involved construction of the infinite tree).

Lemma 19 (puzzle lemma [3]). Let X  X and K = S[A]. Let (Tn)nN be

a family of trees Tn  T (E, X) such that their yields yd(Tn 1n) form a descending

chain. Then there is a tree T  T (E, X) with yd(T ) 

n yd(Tn

1 n

).

The proof in our setting is quite similar, so we refer to [3] or Appendix A for

a complete proof. Essentially, the finite number of indeterminates in A allows us

to choose a sufficiently large n such that the truncation Tn

1 n

contains a "nice"

part that we can repeat to obtain the infinite tree T . Here, "nice" means that no

matter how often we repeat this part, the yield does not fall below n yd(Tn 1n). With this taken care of, we can prove that the sum of all (finite) derivation

trees gives the least and greatest solutions.

Proof (of Theorem 16). Recall that F is fully continuous, as it is defined by polynomial expressions over a fully-continuous semiring. By Kleene's Fixed-Point theorem, we can thus express its least (or greatest) fixed point as supremum of F n(0) (or infimum of F n(1)) over n  N. By idempotence, sums coincide with suprema, so for the least solution we immediately obtain:

lfp(F )X = F n(0)X (1=8)

yd(T 0n) =

yd(T

0 n

)

.

nN

nN T T (E,X)

T T (E,X) nN

Now observe that yd(T

0n) = yd(T ) if T

has height < n, otherwise yd(T

0 n

)

=

0.

Hence

n yd(T

0 n

)

=

yd(T

)

if

T

is finite and 0 otherwise.

It remains to consider the greatest solution. We apply Lemma 11 to express

the infimum in S[A] as a supremum:

gfp(F )X =

F

n

(1)X

(18)
=

yd(T

1 n

)

nN

nN T T (E,X)

(1=1)

yn
nN

(yn)nN is a descending chain of monomials with yn = yd(Tn 1n) for some Tn  T (E, X)

(1=9) yd(T ) T  T (E, X) =

yd(T ).

T T (E,X)

In the last line, we apply the puzzle lemma. This gives us for each monomial
chain (yn)nN an infinite tree T with yd(T )  n yn. Conversely, each tree T induces the monomial chain defined by yn = yd(T 1n). It is easy to see that this chain has infimum yd(T ), so we have equality.

12

M. Naaf

4 Closed Form Solution
This section is devoted to the proof of our main result:
Theorem 1. Let K be an absorptive, fully-continuous semiring. Let E : (X = PX )XX be a polynomial equation system over K and X = {X1, . . . , X } with induced operator FE : K  K . Then,
lfp(FE ) = FE (0), gfp(FE ) = FE ( FE (1) ).
Towards the proof, we again fix a polynomial equation system E : (X = PX )XX over an absorptive, fully-continuous semiring K with induced operator F . Recall that denotes the number of equations (and indeterminates) of E. Our strategy is to prove that we can always find derivation trees of a certain shape, and that the yield of all other derivation trees is absorbed by these trees.

4.1 Deterministic Derivation Trees

Definition 20. A derivation tree T = (V, E, var, yd) is said to be deterministic if mon(v) depends only on var(v), i.e., the indeterminate labels of the (unordered) children of a node v are determined by the node's indeterminate label.

To reason about gfp(F ), we must reason about and construct infinite derivation trees. This is straight-forward for deterministic trees.

Lemma 21 (deterministic construction). Let X0  X. For each X  X0, let mX be a monomial with mX  PX such that all indeterminates occurring in mX are contained in X0. Then for each X  X0, there is a deterministic tree T  T (E, X) with var(v)  X0 and mon(v) = mvar(v) for all nodes v  T .
Proof (sketch). Starting from the root var() = X, define the (possibly infinite) tree T inductively by repeatedly adding to each leaf v child nodes according to mvar(v), always maintaining the desired property for all inner nodes.
It is easy to see that deterministic trees are uniquely defined by their prefix up to depth - 1, as at depth each path must either end or start to repeat (recall that there are only different indeterminates). Moreover, once we consider the infinitary power yd(T ), it does not matter how often a particular coefficient c occurs in T , since (cn) = c for all n > 0. This leads to the following simple but essential observations.

Lemma 22. If T  T (E, X) is deterministic, every indeterminate that occurs

in T

also occurs in the truncation T

1 -1

.

It

follows

that

yd(T )

=

yd(T

1).

Corollary 23. For each T  T (E, X), there is a deterministic tree T  T (E, X) such that yd(T 1)  yd(T ).

Proof (sketch). Choose any way to determinize T 1 (by Lemma 21) using only monomials appearing in T 1. This is always possible, as T 1 contains at most indeterminates and hence every path must contain a repetition or end in a leaf (cf. Appendix A). The inequality holds by Lemma 15 (yield comparison).

Computing Least and Greatest Fixed Points in Absorptive Semirings

13

(a)
X X
Y X
Y YX X

(b)
X X
Y TX TX TY

(c)

Z

Z

(d)
X Y

TX

TY

Fig. 2. Illustration of the construction steps in the proof of Lemma 24.

4.2 Constructing Simple Trees
The main insight behind Theorem 1 is that when we sum over the yield of all derivation trees, it suffices to consider trees of a particular shape corresponding to our intuition from the introduction: These trees consist of an arbitrary prefix up to (at most) depth (the reachability part), followed by deterministic trees (the cyclic part). See Fig. 2d for an illustration.
Lemma 24 (main lemma). For each T  T (E, X), there is a derivation tree T  T (E, X) such that all subtrees rooted at depth in T are deterministic and use only monomials m  PY (with Y  X) that occur infinitely often in T . Moreover, |T |m,Y  |T |m,Y for all m  PY , Y  X.
Proof. Let X  X be the set of indeterminates that occur infinitely often in T (may be empty). We write VX = {v  T | var(v) = X} for the set of nodes labeled X. For each X  X, the set VX is infinite. As the polynomial PX is finite, there must thus be infinitely many v  VX with the same monomial mon(v). For each X  X, choose such an infinitely often occurring monomial mX  PX . Using Lemma 21, we obtain for each X  X a deterministic tree TX  T (E, X) such that for all v  TX: var(v)  X and mon(v) occurs infinitely often in T .
Let W be the set of earliest occurrences of X in T (cf. Fig. 2a). Formally, W = {v  T | var(v)  X, there is no v v with var(v )  X}. Now let S be the tree that results from T by replacing every subtree at some v  W with the tree Tvar(v) (cf. Fig. 2b). The tree S is almost of the desired shape, but the trees TX may be rooted at depth > . To fix this, we consider the prefix up to the subtrees TX and eliminate all repetitions of indeterminates within the prefix. As all indeterminates in the prefix occur only finitely often, we can eliminate repetitions by replacing each first occurrence of an indeterminate Z by a last occurrence of Z within the prefix (cf. Fig. 2c).
More formally, call a path v0v1v2 . . . vk from the root of S unresolved if k  and no node on the path is contained in one of the deterministic subtrees TX. Given an unresolved path, there must be an indeterminate Z that occurs twice on the path. Further, Z / X, as otherwise the nodes labeled Z would lie within one of the deterministic subtrees by construction of S and W . Let i < j be indices such that vi is the first and vj the last occurrence of Z on the path, so var(vi) = var(vj) = Z. Now let S result from S by replacing the subtree Svi

14

M. Naaf

rooted at vi with the subtree Svj rooted at vj, thereby removing at least one occurrence of Z from the tree (Fig. 2c).
Apply this elimination step exhaustively, until there are no more unresolved
paths. As all indeterminates in the prefix of S occur only finitely often, this
process terminates. Let T be the resulting tree (notice that T is not uniquely
determined, but this does not affect our argument). Then T has the desired
shape: When no unresolved path exists, then all nodes at depth (if any) must be contained in one of deterministic subtrees TX.
Moreover, the elimination step only removes nodes of S, but neither adds
nodes nor modifies any node labels. It follows that |T |m,Y  |S|m,Y for all m  PY , Y  X. As the trees TX only use monomials that occur infinitely often in T , we further have |S|m,Y  |T |m,Y for all m, Y , closing the proof.

4.3 Proof of the Main Result

We relate infinite trees of this shape to the expression F ( F (1) ). The deterministic trees rooted at depth correspond to the inner term F (1), relying on Lemma 22 to ensure that applications of F suffice. The outer applications of F correspond to the prefix on which we impose no further restrictions (except that it has height at most ). The following lemma formalizes this intuition.

Lemma 25. Let b be the tuple with bX = T T (E,X) yd(T 1) for X  X. For each T  T (E, X), there is a tree T  T (E, X) such that yd(T )  yd(T b).

Proof. Let T  T (E, X). Using Lemma 24, we obtain a tree T of a certain shape: Let S1, . . . , Sk be the subtrees of T rooted at depth . These subtrees are deterministic and all monomials occurring in S1, . . . , Sk occur infinitely often in T and moreover, |T |m,Y  |T |m,Y for all m  PY , Y  X. We claim that

!
yd(T )  yd(T

k
1) · yd(Si)

i=1

To see this, we expand the definition of yd and rearrange terms. Borrowing the notation cm,Y for the coefficient of m  PY from the proof of Lemma 15, we obtain

(cm,Y )|T |m,Y
Y X, mPY

!


(cm,Y )|T

Y X, mPY

1|m,Y +

, k
i=1

·|Si |m,Y

To prove the inequality, it suffices to show that |T |m,Y  |T 1|m,Y +

k i=1



·

|Si|m,Y for all m, Y . This holds by construction of T : If |Si|m,Y > 0 for some

i, then m occurs infinitely often in T and hence |T |m,Y = . Otherwise, the

right-hand side is equal to |T 1|m,Y  |T |m,Y  |T |m,Y . This proves our claim.

Now let v1, . . . , vk  T be the root nodes of the deterministic subtrees

S1, . . . , Sk. By Lemma 22, yd(Si) = yd(Si 1)  bvar(vi), and thus

k

k

yd(T )  yd(T 1) · yd(Si)  yd(T 1) · bvar(vi) = yd(T b).

i=1

i=1

Computing Least and Greatest Fixed Points in Absorptive Semirings

15

We are now ready to prove our main result. The statement on the least solution follows rather directly from our earlier considerations. For greatest fixed points, the previous lemma already proves the difficult direction.

Proof (of Theorem 1). We first consider the least solution. By Theorem 16 and Lemma 18, it suffices to prove

lfp(F )X =

yd(T ) =!

yd(T 0) = F (0)X .

T T (E,X) T finite

T T (E,X)

Recall that yd(T 0) = 0 if T has height  , in particular if T is infinite, and yd(T 0) = yd(T ) otherwise. Hence F (0)X  lfp(F )X . For the other direction, let T  T (E, X) be finite and obtain T by Lemma 24. As T is finite, no monomials can occur infinitely often. Hence T has no subtrees rooted at depth and is thus of height < . But then, yd(T )  yd(T ) = yd(T 0)  F (0)X .
Now consider the greatest solution. It suffices to prove the result for K = S[A], as the general statement follows with Lemma 7. We know that gfp(F )X =
T T (E,X) yd(T ). On the other hand, Lemma 18 (tree iteration) entails

(F (1)X ) =

yd(T 1)  (1=0)

yd(T 1)

T T (E,X)

T T (E,X)

Let b = F (1). Applying Lemma 18 again gives

F (F (1))X = F (b)X =

yd(T b)

T T (E,X)

The direction gfp(F )  F (F (1)) follows immediately from Lemma 25. For the other direction, let T  T (E, X). Let v1, . . . , vk be the nodes at depth in T . By distributivity (Lemma 10), we get

yd(T b) = yd(T 1) ·

bvar(vi )

1ik

d=ist. yd(T 1) ·

yd(Si 1) Si  T (E, var(vi)) for all i
1ik

(23)
 yd(T 1) ·

abs.


yd(T

1) ·

d=ist.

yd(T )

yd(Si) Si  T (E, var(vi)) for all i
1ik
yd(Si) Si  T (E, var(vi)) for all i
1ik
T  T (E, X) = gfp(F )X

16

M. Naaf

Using this result, we can compute least and, most importantly, greatest solutions of polynomial equation systems in a polynomial number of semiring operations (including the infinitary power). Notice that, although the proof relied on S[A], the computation happens only in the semiring we consider. For instance, recall the example in the tropical semiring from the introduction.

Example 26. We recall Xa = 1Xa, Xb = min(1Xa, 20Xc) and Xc = 0Xc from the introduction. Notice that the one-element of the tropical semiring is the real value 0. Using Theorem 1, we collapse the infinite fixed-point iteration to

0 0

-F

1 1

-F

2 2

-F

3 3


-

 

-F

 20

F

0

0

0

0

0

0

and obtain the expected solution. In this example, one iteration of F would actually suffice (instead of = 3 iterations), since cycles have length one (see the graph in the introduction). In general, all steps are required (see below).

Coming back to our original motivation from semiring provenance, we can thus compute semiring provenance information for Bu¨chi games [6] or fixed-point logics such as the modal µ-calculus Lµ or least fixed-point logic LFP [3]. If we only need to compute a polynomial number of fixed points, such as for alternation-free Lµ, this information might be computable in polynomial time ­ depending on the cost of the semiring operations. In the most general semiring S[X], we cannot assume that semiring operations can be performed efficiently, as each multiplication can in the worst case double the number of monomials (this is not avoidable, as one can easily construct equation systems whose solution is a polynomial describing all exponentially many paths in a graph). Even if the solution consists of few monomials, we may get an intermediary blowup when computing F n(1), as seen in the following example. In such cases, the iterative approach presented in Section 5 may be preferable.

Example 27. Consider the polynomial equation system over S[a, b, c] shown on the left. (Assuming familiarity with Lµ and semiring provenance, this results from evaluating X. X P in a semiring interpretation that uses the indeterminates a, b, c to track whether the atom P holds at vertices v1, v2, v3.)

X1 = b · X2 X2 = (b + c) · X2X3 X3 = a · X1

v1

v2

v3

We apply Theorem 1 to compute the greatest solution:

1 -F

b b+c

-F

b2 + bc ab2 + abc + ac2

-F

ab3 + ab2c + abc2 a2b4 + a2b3c + a2b2c2 + a2bc3


-

a b a b

F

a

ab

ab2 + abc

a b

Here we need all = 3 inner applications of F until a appears in the first entry. We also see that the intermediate polynomials can become much longer than the

Computing Least and Greatest Fixed Points in Absorptive Semirings

17

solution. (Interpreting ab as provenance information, we see that the formula holds at the given graph precisely if P holds at v1 and v2, and it does not matter if it also holds at v3.)

Remark 28. One can generalize our main result to polynomial equation systems that allow  as exponent (similar to absorptive polynomials). We have chosen to spare the reader from the additional complications that arise from the corresponding derivation trees with infinite degree, in particular infinite products on the semiring level, as these are not relevant for the main ideas. Alternatively, the iterative approach of Sect. 5 can be used in this setting.

5 Iterative Computation
This section complements our main results by a second approach focused specifically on polynomial equation systems over the semiring S[A]. To this end, we adapt results of Hopkins and Kozen on Kleene algebras [12] since we can view absorptive semirings as a special case of Kleene algebras. These results are based on symbolic derivatives of polynomials (which is also the basis for Newton's method [5]) to express least solutions. Here, we generalize this approach to include the infinitary power operation, eventually leading to a similar statement also for greatest solutions.

5.1 Setting and Derivatives
It is convenient to slightly reformulate our problem setting: Instead of a system E : (X = PX )XX with polynomials PX over X and coefficients S[A], we now regard PX as an absorptive polynomial PX  S[A  X] (so we no longer distinguish between indeterminates of the polynomial system and indeterminates occurring in coefficients). This allows a more uniform treatment when we eliminate indeterminates one by one, and it is easy to see that it does not affect the solutions.
To simplify notation, we write S[A, X] for S[A{X}]. Recall that we write P (X)  S[A, X] to make explicit that X may occur in P ; then P (a)  S[A] denotes the polynomial that results from P (X) by replacing X with a  S[A]. In the following, we use X to denote an arbitrary (finite) indeterminate set.
Definition 29. Let X  X and P (X)  S[X]. We denote the partial derivative of P with respect to X as P (leaving X implicit) and define it inductively by
X = 1, Y = 0 for X = Y  X, (P Q) = P · Q + P · Q , (P + Q) = P + Q , P  = P  · P ,
where P (X), Q(X)  S[X].

18

M. Naaf

5.2 Solutions in One Dimension
We first show how least and greatest solutions of a single equation X = P (X) can be expressed using derivatives, following the proof in [12]. Notice that S[X], and in fact any absorptive semiring, can be regarded as a Kleene algebra in the sense of [12] by setting a = 1 for all a  K. Hence, most of the lemmas require no modifications, except for our addition of the infinitary power.
Lemma 30. Let P (X), Q(X)  S[X] and further a, b, c  S[X]. Then,

P (Q) = P (Q) · Q P (a + b) = P (a) + P (a + b) · b

(chain rule, cf. [12]), (Taylor's theorem (cf. [12]).

Proof. By structural induction on P . The proof of [12] also applies to S[X], so we only have to consider the case P = H. For the chain rule, we have
H(Q) = H(Q) = H(Q) · H(Q) = H(Q) · H (Q) · H = H(Q) · Q = H(Q) · Q ,

and for Taylor's theorem,
H(a + b) = H(a + b) = H(a) + H (a + b) · b 
(=) H(a) + H(a) + H (a + b) · b  · H (a + b) · b = H(a) + H(a + b) · H (a + b) · b = H(a) + H(a + b) · H (a + b) · b = H(a) + (H) (a + b) · b.

In (), we use the general observation that (a + b) = a + (a + b) · b for elements a, b of any absorptive, fully-continuous semiring.

These two observations suffice to prove the closed-form solution for single polynomial equations, including our new result for greatest solutions.
Theorem 31. Let P (X)  S[A, X]. Then X = P (X) has the least solution P (0) and the greatest solution P (0) + P (1) in S[A].
Proof. See [12] for a proof of the least solution. For the greatest solution, we need two auxiliary statements (see Appendix A for detailed proofs). First, it is easy to see by structural induction that for H(X)  S[X] and a, b, c  S[X],

ac  bc = H(a)c  H(b)c.

()

Moreover, all elements a, b, c of any absorptive, fully-continuous semiring satisfy

c + ab  b = c + ab  b.

()

Computing Least and Greatest Fixed Points in Absorptive Semirings

19

We first prove that P (0) + P (1) is a solution to the inequality X  P (X):

P P (0) + P (1) (3=0)P (0) + P P (0) + P (1) · P (0) + P (1)  P (0) + P (P (1)) · P (1)
()
 P (0) + P (1) · P (1) = P (0) + P (1).

We next show that this is the greatest solution to X  P (X). To this end, let a  S[A] be a solution, i.e., a  P (a). As 1  a, we get

P (0) + P (1) · a  P (0) + P (a) · a(3=0)P (a)  a.

Using (), we can conclude

P (0) + P

(1)

abs


P (0)

+P

(1)

·a



a.

Finally, note that the greatest solution to X  P (X) is also the greatest solution to X = P (X) by the well-known Knaster-Tarski theorem.

5.3 Solutions of Larger Systems

To solve systems with more than one equation, we eliminate indeterminates one by one, in each step applying Theorem 31. The main theoretical underpinning is the uniformity of the solutions in one indeterminate. In [12], this uniformity follows from the axiomatic proofs and the fact that instantiations preserve the axioms of Kleene algebra. Here, we instead appeal to the universal property of S[X] and the fact that fully-continuous semiring homomorphisms preserve least and greatest fixed points.
For the sake of simplicity, we only consider systems of two equations; we can inductively apply the same approach to larger systems. Moreover, we only state the result for greatest solutions, as least solutions are symmetric. We use the notation gfp(X  P (X, Y )) to refer to the greatest solution of the equation X = P (X, Y ) using Theorem 31 (where we treat the additional indeterminate Y as a coefficient, i.e., we apply the theorem with Y  A). With this notation, we can formulate the solution of a system in two indeterminates as follows:

Theorem 32. Consider the equation system E : X = P (X, Y ), Y = Q(X, Y ) with P, Q  S[A, X, Y ]. Let further

H(Y ) = gfp(X  P (X, Y )) b = gfp(Y  Q(H(Y ), Y ))

 S[A, Y ],  S[A].

Then (H(b), b) is the greatest solution of E.

Proof. It is easy to see that (H(b), b) is a solution: By definition of b, we have Q(H(b), b) = b. By definition of H, we further have P (H(Y ), Y ) = H(Y ), and by applying the instantiation Y  b we get P (H(b), b) = H(b).

20

M. Naaf

To prove that (H(b), b) is the greatest solution, we make use of the universal property. Let (c, d) be any solution with c, d  S[A]. We claim that H(d) = gfp(X  P (X, d)). To see this, consider the definition of H(Y ) and apply the instantiation Y  d. By the universal property, this instantiation is fully continuous and thus preserves greatest fixed points.
Now, since (c, d) is a solution, we have P (c, d) = c, and since H(d) is the greatest solution to X = P (X, d), we must have H(d)  c. Then also Q(H(d), d)  Q(c, d) = d. Since b is the greatest solution to Q(H(Y ), Y ) = Y and hence also to Q(H(Y ), Y )  Y , we have b  d. Finally, H(b)  H(d)  c, so (H(b), b) is indeed the greatest solution.
We can apply this second technique to semirings other than S[A] by first performing a symbolic abstraction. That is, we replace all coefficients by pairwise different indeterminates from A, then compute the solution and apply the reverse instantiation (which preserves solutions).

Example 33. Recall our example in the tropical semiring T. By replacing coefficients with indeterminates a, b, c, we obtain the equation system on the right.

Xa = 1  Xa Xb = min(1  Xa, 20  Xc) Xc = 0  Xc

Xa = a · Xa Xb = a · Xa + b · Xc Xc = c · Xc

We solve the system over S[Xa, Xb, Xc, a, b, c] by the iterative approach:

­ gfp(Xa  a · Xa) = 0 + a = a ­ gfp(Xb  a · a + b · Xc) = a + b · Xc ­ gfp(Xc  c · Xc) = c

(by Theorem 31), (we first instantiate Xa by a)

The greatest solution is thus Xa = a, Xb = a + bc, Xc = c. Applying the reverse substitution, we get the expected solution (, 20, 0) in T.

Usually, the closed-form solution in Theorem 1 is preferable, as we can work directly in the target semiring. The iterative technique is best suited to compute solutions in S[A], which is of interest for semiring provenance analysis. Compared to the closed-form solution, we need slightly fewer computation steps and can often avoid an intermediate blowup in the size of the polynomials.

Example 34. Recall the equation system X1 = b · X2, X2 = (b + c) · X2X3, X3 = a · X1 of Example 27. Eliminating indeterminates one by one, we get
­ gfp(X1  b · X2) = b · X2 ­ gfp(X2  (b + c) · X2X3) = (b + c)X3  = bX3 + cX3 ­ gfp(X3  ab · (bX3 + cX3)) = ab + abc = ab
and by substituting the results backwards, we obtain X1 = X2 = X3 = ab.

Computing Least and Greatest Fixed Points in Absorptive Semirings

21

Remark 35. An attentive reader may have noticed that we have phrased all results in this section for the semiring S[X] of absorptive polynomials, whereas the results in [12] apply to polynomials K[X] over an arbitrary Kleene algebra K. The reason for this restrictive choice is that the iterative lifting to multivariate equation systems requires some form of compositionality: In [12], K[X, Y ] is viewed as K[X][Y ]. Unfortunately, the usual notion of polynomials K[X] over an absorptive semiring K, as in Definition 2, is itself not absorptive, and it seems not obvious4 how one would define an absorptive version of K[X]. As our proofs rely on absorption, they do not apply to K[X][Y ].
Since our main result already provides a direct computation in any absorptive, fully-continuous semiring, we have here restricted our interest to S[X]. In fact, it was this limitation that motivated our search for a closed form solution.

6 Conclusion
We have presented two methods to compute least and, most importantly, greatest solutions of polynomial equation systems over absorptive, fully-continuous semirings. Both methods require only polynomially many applications of the semiring operations and the infinitary power, in terms of the number of equations.
While we assume full continuity mostly to guarantee the existence of both kinds of solutions, absorption is a strong assumption that leads to a particularly simple way of computing solutions. Our motivation to consider absorptive semirings comes from semiring provenance of fixed-point logics, where our methods can directly be applied to compute provenance information, for example of Bu¨chi games or formulae in fixed-point logics such as Lµ or LFP.
The first method, and our main result, is a closed-form solution that works in any absorptive, fully-continuous semiring and is as easy as computing the standard fixed-point iteration with an added application of the infinitary power. To prove the correctness for greatest solutions, we extended the notion of derivation trees used in the analysis of Newton's method [5] to infinite trees. Derivation trees provide an intuitive tool to understand the fixed-point iteration, but require somewhat involved arguments and constructions to properly handle infinite trees. Our main technical contribution is that it suffices to consider trees of a particular shape resembling the solution term F (F (1)), intuitively corresponding to a reachability prefix with infinitely repeating deterministic subtrees. For the second method, we applied results on least solutions over Kleene algebras [12] specifically to the semiring of generalized absorptive polynomials, and extended these results by similar observations for greatest solutions.
Comparing the two proofs, we see that the iterative approach has a simpler algebraic proof, raising the question whether we can avoid the constructions of infinite trees in our main proof in favor of algebraic arguments. A further direction for future work is to study systems of nested fixed points over absorptive semirings. Recently, quasipolynomial-time algorithms have been developed to
4 For instance, let a, b  K be incomparable. We want (aX + aX2) + bX2 = aX + bX2 by absorption, but also aX + (aX2 + bX2) = aX + (a + b)X2, violating associativity.

22

M. Naaf

solve such systems in the Boolean case [1] or over finite lattices [11]. With the simple computation based on the fixed-point iteration, absorptive semirings might be a candidate to further increase the applicability of these algorithms.

References
1. Arnold, A., Niwin´ski, D., Parys, P.: A quasi-polynomial black-box algorithm for fixed point evaluation. In: Baier, C., Goubault-Larrecq, J. (eds.) 29th EACSL Annual Conference on Computer Science Logic (CSL 2021). Leibniz International Proceedings in Informatics (LIPIcs), vol. 183, pp. 9:1­9:23. Dagstuhl, Germany (2021). doi:10.4230/LIPIcs.CSL.2021.9  22
2. Dannert, K., Gra¨del, E., Naaf, M., Tannen, V.: Generalized absorptive polynomials and provenance semantics for fixed-point logic. arXiv: 1910.07910 [cs.LO] (2019), https://arxiv.org/abs/1910.07910, full version of [3]  5, 23
3. Dannert, K., Gr¨adel, E., Naaf, M., Tannen, V.: Semiring provenance for fixedpoint logic. In: Baier, C., Goubault-Larrecq, J. (eds.) 29th EACSL Annual Conference on Computer Science Logic (CSL 2021). Leibniz International Proceedings in Informatics (LIPIcs), vol. 183, pp. 17:1­17:22. Dagstuhl, Germany (2021). doi:10.4230/LIPIcs.CSL.2021.17  1, 2, 3, 6, 11, 16, 22, 23
4. Deutch, D., Milo, T., Roy, S., Tannen, V.: Circuits for datalog provenance. In: Proc. 17th International Conference on Database Theory ICDT. pp. 201­212. OpenProceedings.org (2014). doi:10.5441/002/icdt.2014.22  1, 6
5. Esparza, J., Kiefer, S., Luttenberger, M.: Newtonian program analysis. Journal of the ACM 57(6), 33 (2010). doi:10.1145/1857914.1857917  2, 3, 7, 8, 17, 21
6. Gra¨del, E., Lu¨cking, N., Naaf, M.: Strategy analysis in bu¨chi games by valuations in absorptive semirings. To be published (2021)  16
7. Gr¨adel, E., Tannen, V.: Semiring provenance for first-order model checking. arXiv:1712.01980 [cs.LO] (2017), https://arxiv.org/abs/1712.01980  1
8. Gr¨adel, E., Tannen, V.: Provenance analysis for logic and games. Moscow Journal of Combinatorics and Number Theory 9(3), 203­228 (2020). doi:10.2140/moscow.2020.9.203  1
9. Green, T., Karvounarakis, G., Tannen, V.: Provenance semirings. In: Principles of Database Systems PODS. pp. 31­40 (2007). doi:10.1145/1265530.1265535  1
10. Green, T., Tannen, V.: The semiring framework for database provenance. In: Proceedings of PODS. pp. 93­99. ACM (2017). doi:10.1145/3034786.3056125
1
11. Hausmann, D., Schro¨der, L.: Computing nested fixpoints in quasipolynomial time. arXiv:1907.07020 [cs.CC] (2019), https://arxiv.org/abs/1907.07020  22
12. Hopkins, M., Kozen, D.: Parikh's theorem in commutative kleene algebra. In: Proceedings. 14th Symposium on Logic in Computer Science. pp. 394­401. IEEE (1999). doi:10.1109/LICS.1999.782634  2, 3, 17, 18, 19, 21
13. Mohri, M.: Semiring frameworks and algorithms for shortest-distance problems. Journal of Automata, Languages and Combinatorics 7(3), 321­350 (2002). doi:10.25596/jalc-2002-321  4

Computing Least and Greatest Fixed Points in Absorptive Semirings

23

A Omitted Proofs
This appendix contains proofs that were omitted or only sketched in the main paper.

A.1 Proofs of Section 3

Lemma 19 (puzzle lemma [3]). Let X  X and K = S[A]. Let (Tn)nN be

a family of trees Tn  T (E, X) such that their yields yd(Tn 1n) form a descending

chain. Then there is a tree T  T (E, X) with yd(T ) 

n yd(Tn

1 n

).

Proof. We sketch the main steps of the proof, more details can be found in [2] (notice that our notion of truncation is simpler, as we cut off at a certain depth instead of counting R-nodes).

1. Chain splitting Let en(m, Y ) = |Tn 1n|m,Y  N be the number of occurrences of m  PY in
the tree T 1n. As usual, let cm,Y be the coefficient of m in PY so that

yn := yd(Tn

1 n

)

=

(cm,Y )en(m,Y ).

Y X, mPY

Using the chain splitting lemma from [2], we can write the infimum as

yn =

(cm,Y )e(m,Y ),

nN

Y X, mPY

with e(m, Y ) := en(m, Y ).
nN

2. Problematic monomials

We say that a monomial m  PY is problematic if e(m, Y ) is finite. Un-

problematic monomials do not impose any restrictions, as they may appear

arbitrarily often (finite or infinite) in the tree T we construct (and T still

satisfies the desired inequality yd(T )  n yn). As the polynomial equation system is finite, there are only finitely many problematic monomials.

3. Decomposition into k-layers

We now decompose each of the trees Tn

1 n

into

k-layers,

each

of

which

simply

consists of k consecutive levels of the tree. We choose the layers such that

they cover the entire tree and do not overlap. If k is some constant, we can

choose a large enough n such that there is a k-layer in Tn

1 n

that does not

contain any problematic monomials (as there are only finitely many).

4. Repetition of a k-layer

We now construct T by first following the tree Tn (for the chosen n), but upon reaching the k-layer without problematic monomials, we continue T by

repeating this layer over and over, so that no further problematic monomials

occur in T . To this end, note that the k-layer is a forest consisting of several

trees. We determinize each such tree S by Lemma 21 and obtain a (possibly

infinite) deterministic tree S that we use in T to replace S. To ensure that

Lemma 21 can be applied, we choose k = + 1, so that each path trough the

k-layer must contain a repetition of indeterminates (cf. Corollary 23).

24

M. Naaf

5. Conclusion
This construction ensures that the number of occurrences of problematic monomials in T is bounded by their occurrences in Tn 1n. In other words, |T |m,Y  en(m, Y )  e(m, Y ) for all problematic m  PY and thus |T |m,Y  e(m, Y ) for all (problematic and unproblematic) m, Y . Hence

yd(T ) =

(cm,Y )|T |m,Y 

(cm,Y )e(m,Y ) =

yn.

Y X, mPY

Y X, mPY

nN

A.2 Proofs of Section 4
Corollary 23. For each T  T (E, X), there is a deterministic tree T  T (E, X)
such that yd(T 1)  yd(T ).
Proof. We use Lemma 21 to construct a deterministic tree T with yd(T 1)  yd(T ) as follows. We define X0 and monomials mX for X  X0 inductively by traversing the tree T level by level, starting with the root. We always maintain
the following invariant: After traversing level k, all indeterminates occurring in mX for X  X0(k) are contained in X0(k) or occur at level k + 1 in T .
For level 0 (consisting only of the root with var() = X), we set X0(0) := {X} and mX := mon(). The invariant holds due to the children of . Assume we have processed level k. Let Xt(okd)o be the set of indeterminates that occur in mX for X  X0(k), but are not contained in X0(k). If Xt(okd)o = , we are done. Otherwise, for each Y  Xt(okd)o, there is a node v at level k + 1 with var(v) = Y by the invariant. Choose any such node and set mY := mon(v). By definition of derivation trees, all indeterminates of mY occur as children of v on level k + 2, so the invariant holds. Then set X0(k+1) := X0(k)  Xt(okd)o.
This process never enters level : On each level, at least one indeterminate is added to X0(k) (or we stop) and there are only different indeterminates. Hence all monomials mX we choose occur in the truncation T 1. Now obtain T by applying Lemma 21 to k X0(k) and the chosen monomials mX . The inequality yd(T 1)  yd(T ) follows by Lemma 15.

A.3 Proofs of Section 5 We provide proofs for the two auxiliary statements in the proof of Theorem 31. Lemma A1. For H(X)  S[X] and a, b, c  S[X],
ac  bc = H(a)c  H(b)c.
Proof. Induction on the structure of H. If H is an indeterminate, this is trivial. If H(X) = H1(X) + H2(X), the claim holds by induction and distributivity. For H(X) = H1(X) · H2(X), the claim holds by induction and commutativity:
H1(a)H2(a)c  H1(a)H2(b)c = H2(b)H1(a)c  H1(b)H2(b)c.

Computing Least and Greatest Fixed Points in Absorptive Semirings

25

For H = G, the claim follows by full continuity of multiplication:

G(a)c =

Gn(a) · c =

Gn(a)b 

Gn(b)c = G(b)c

nN

nN

nN

Lemma A2. Let K be an absorptive, fully-continuous semiring. Then all elements a, b, c  K satisfy:

c + ab  b = c + ab  b.

Proof. We first show by induction that c + anb  b for all n  N. For n = 0, trivially c + a0b = c + b  b, for n = 1 this holds by assumption. The induction
step holds by absorption:

c + an+1b a=bs c + ac + an+1b = c + a(c + anb)  c + ab  b.

The claim then follows by full continuity:

c + ab = c +

an b = (c + anb)  b = b.

nN

nN

nN

