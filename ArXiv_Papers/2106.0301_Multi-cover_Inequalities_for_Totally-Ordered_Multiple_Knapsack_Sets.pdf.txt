arXiv:2106.00301v1 [math.OC] 1 Jun 2021

Noname manuscript No. (will be inserted by the editor)
Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets
Alberto Del Pia · Jeff Linderoth · Haoran Zhu
Abstract We propose a method to generate cutting-planes from multiple covers of knapsack constraints. The covers may come from different knapsack inequalities if the weights in the inequalities form a totally-ordered set. Thus, we introduce and study the structure of a totally-ordered multiple knapsack set. The valid multi-cover inequalities we derive for its convex hull have a number of interesting properties. First, they generalize the well-known (1, k)configuration inequalities. Second, they are not aggregation cuts. Third, they cannot be generated as a rank-1 Chv´atal-Gomory cut from the inequality system consisting of the knapsack constraints and all their minimal cover inequalities. We also provide conditions under which the inequalities are facets for the convex hull of the totally-ordered knapsack set, as well as conditions for those inequalities to fully characterize its convex hull. We give an integer program to solve the separation and provide numerical experiments that showcase the strength of these new inequalities.
Keywords Multiple knapsack problem · Cutting-planes · Knapsack polytope
A. Del Pia is partially funded by ONR grant N00014-19-1-2322. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the Office of Naval Research.
Alberto Del Pia Department of Industrial and Systems Engineering, University of Wisconsin-Madison, Wisconsin Institute for Discovery, Madison, WI, 53705, USA delpia@wisc.edu Jeff Linderoth Department of Industrial and Systems Engineering, University of Wisconsin-Madison, Wisconsin Institute for Discovery, Madison, WI, 53705, USA linderoth@wisc.edu Haoran Zhu Department of Industrial and Systems Engineering, University of Wisconsin-Madison, Madison, WI, 53705, USA hzhu94@wisc.edu

2

A. Del Pia et al.

1 Introduction

In this paper we study cutting-planes related to covers of 0-1 knapsack sets. A 0-1 knapsack set is a set of the form

Kknap := {x  {0, 1}n | aT x  b},
with (a, b)  Zn++1, and a cover is a subset C  {1, . . . , n} such that b. The associated cover inequality (CI)

jC aj >

xj  |C| - 1
jC

is valid for the knapsack polytope conv(Kknap) and is not satisfied by the incidence vector of C. There is a long and rich literature on (lifted) cover inequalities for the knapsack polytope [1, 12, 23, 10, 16], and the reader is directed to the recent survey [13] for a thorough introduction.
In this paper we consider the 0-1 multiple knapsack set

K = {x  {0, 1}n | Ax  b},

(1)

where

[A,

b]



m×(n+1)
Z+

.

A

standard

and

computationally

useful

way

for

gen-

erating valid inequalities for conv(K) is to generate lifted cover inequalities

(LCIs) for the knapsack sets defined by the individual constraints of K [6]. In

this way, the extensive literature regarding valid inequalities for conv(Kknap) can be leveraged to solve integer programs whose feasible region is K. In con-

trast to conv(Kknap), very little is known about the polyhedral structure of conv(K). In this paper, we introduce a family of cutting-planes, called multi-

cover inequalities (MCIs), that are derived by simultaneously considering mul-

tiple covers that satisfy a certain condition. The covers may come from any

inequality in the formulation, as long as the weights appearing in the knapsack

inequalities are totally-ordered. Moreover, when only a single cover is given,

the associated MCI reduces to a CI.

More formally, we present a new approach to generate valid inequalities for

a special multiple knapsack set, called the totally-ordered multiple knapsack

set (TOMKS). The multiple knapsack set K in (1) is called a TOMKS if the

column

vectors

{A·1, A·2, . . . , A·n}

of

the

constraint

matrix

A



m×n
Z+

form

a chain ordered by component-wise order. Without loss of generality we may

assume A·1  A·2  . . .  A·n. The TOMKS can arise in the context of chance-constrained programming.

Specifically, consider a knapsack constraint where the weights of the items (a)

depend on a random variable (), and we wish to satisfy the chance constraint

P{a()T x  }  1 - ,

(2)

selecting a subset of items (x  {0, 1}n) so that the likelihood that these items fit into the knapsack is sufficiently high. In the scenario approximation approach proposed in [5, 18], an independent Monte Carlo sample of N

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

3

realizations of the weights (a(1), . . . a(N )) is drawn and the deterministic constraints

a(i)T x   i = 1 . . . , N

(3)

are enforced. In [17] it is shown that for every   (0, 1), if the sample size N is sufficiently large:

1

1

N  2 2 log  + n log(2) ,

then any feasible solution to (3) satisfies the constraint (2) with probability at least 1 - . If the random weights of the items a1(), a2(), . . . an() are independently distributed with means µ1  µ2 . . .  µn, then the feasible region in (3) may either be a TOMKS, or the constraints can be (slightly) relaxed to obey the ordering property.
The TOMKS may arise in more general situations as well. For a general binary set, if two knapsack inequalities aT1 x  b1 and aT2 x  b2 have nonzero coefficients in few common variables, their intersection may be totallyordered, and the MCI would be applicable in this case. In the general case, if variables are fixed to zero or one, the induced face may be a TOMKS, and the resulting inequalities could then be lifted to be valid for the original set. In the special case where the multiple covers come from the same knapsack set, the MCI can also produce interesting inequalities. For example, the well-known (1, k)-configuration inequalities for conv(Kknap) [20] are a special case of MCI where two covers come from the same inequality and have particular structure (see Proposition 2). We also give an example where a facet of conv(Kknap) generated by a recent lifting procedure described by Letchford and Souli [16] is a MCI.
Interestingly, as observed by Laurent and Sassano [15], the convex hull of a TOMKS can be exactly characterized by all the associated minimal CIs if and only if the set of minimal covers has no minor isomorphic to Jq = {{2, . . . , q}, {1, i} for i = 2, . . . , q} with q  3, where the definition of minor can be found in Sect. 4. When the set of minimal covers does have a minor isomorphic to Jq, our new inequalities are important. In particular, when the minimal cover set is exactly Jq, conv(K) can be fully described by bound constraints, CIs, and a single MCI.
MCIs are generated by a simple algorithm (Algorithm 1) that takes as input a special family of covers C = {C1, C2, . . . Ck} that obeys a certain maximality criterion (defined in Definition 3). For many types of cover-families C , the MCI may be given in closed-form. We also give a condition under which an MCI defines a facet of conv(K) in Section 4, as well as a condition for the MCIs to fully describe conv(K).
MCIs may be generated by simultaneously considering multiple knapsack inequalities defining K. Another mechanism to generate inequalities taking into account information from multiple constraints of the formulation is to

4

A. Del Pia et al.

aggregate inequalities together, forming the set

A(A, b) :=

conv({x  {0, 1}n | T Ax  T b}.

Rm +

Inequalities valid for A(A, b) are known as aggregation cuts, and have been shown to be quite powerful from both an empirical [9] and theoretical [4] viewpoint. The well-known Chv´atal-Gomory (CG) cuts, lifted cover inequalities, and weight inequalities [22] are all aggregation cuts. In Example 6, we show that MCIs are not aggregation cuts. Furthermore, in Example 7, we show that MCIs cannot be obtained as a (rank-1) Chv´atal-Gomory cut from the linear system consisting of all minimal cover inequalities from K.
The paper is structured as follows: In Section 2, we define a certain type of dominance relationship between covers that is necessary to introduce the MCIs. The MCIs are defined in Section 3, where we also provide some examples to demonstrate that MCIs are not dominated by other well-known families of cutting-planes. Utilizing a combinatorial property of the multi-cover, in Section 3.2 we introduce a strengthening procedure for MCI. In Section 4 we provide a sufficient condition for the MCI to be facet-defining for conv(K), and we show a family of instances where the MCI inequalities are the only non-trivial inequalities besides cover inequalities for conv(K). Lastly in Section 5 and Section 6 we discuss the separation problem for MCIs, and we present numerical experiments showing the additional integrality gap that can be closed by MCIs when compared to CIs.
Next, we detail the differences between this paper and the preliminary IPCO version [7]. First, the MCI defined in [7] is referred to as the simpleMCI in this paper, while the MCI defined in this paper refers to a larger, more general, class of inequalities. This family contains both the simple-MCI and the antichain multi-cover inequalities AMCI in [7] as special cases. For that reason, we remove the AMCI section in [7] from this paper. Moreover, in Section 3 we introduce an analogous concept of extended cover inequality (ECI) for MCI, namely the extended MCI, and in Section 4 we provide a special scenario for MCIs to fully describe conv(K). Lastly, Section 5 and Section 6 have completely new results about separation and numerical experiments.

Notation. For a positive integer n, we denote by [n] := {1, . . . , n}. The incidence vector of a set S  [n] is denoted by S. Therefore, given a TOMKS K, we say that a set S  [n] is a cover for K if S / K. For a vector x  Rn and
a set S  [n], we define x(S) := iS xi. This in particular means x() = 0. We denote the power set of a set S, the set of all subsets of S, as 2S. Lastly, we denote ej to be the j-th unit vector of the ambient space.

2 A Dominance Relation
In this section we define a dominance relation between covers and show some of its important properties.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

5

Definition 1 (Dominance) For S1, S2  [n], we say that S1 dominates S2 and write S1 S2, if there exists an injective function f : S2  S1 with f (i)  i i  S2.
The dominance relation in Definition 1 is reflexive, antisymmetric, and transitive, so (2[n], ) forms a partially ordered set. For two sets S1, S2  [n], we say S1 and S2 are comparable if S1 S2 or S2 S1.
The dominance relation has a natural use in the context of covers. In fact, if C2 is a cover for a TOMKS K and C1 dominates C2, then C1 is also a cover for K. Next, we present two technical lemmas about dominance.
Lemma 1 Let S1, S2  [n] with S1 = S2. Then for any S  S1  S2, S1 S2 if and only if S1 \ S S2 \ S .
Proof Let S0 := S1  S2. First, we show that for any S  S0, S1 \ S S2 \ S implies that S1 S2. From Definition 1, there exists an injective function g : S2 \ S  S1 \ S such that g(i)  i i  S2 \ S . Now we define the function f as follows: for any i  S2, if i  S , then f (i) := i; if i  S2 \ S , then f (i) := g(i). So f is a function maps elements from S2 to S1. Apparently this function f is an injective function, with f (i)  i i  S2, therefore we have proven that S1 S2.
Next we show that S1 S2 implies S1 \ S0 S2 \ S0. From Definition 1, there exists an injective function g : S2  S1 such that g(i)  i i  S2. We define the function f as follows: for any i  S2 \ S0, f (i) := gt(i)(i) where t(i) is the smallest integer number t  1 such that gt(i)  S1 \ S0, and gt = g  g  . . .  g is the tth functional power of g. Since g is an injective function from S2 to S1, we know for any i  S2 \ S0, there must exist t  N such that gt(i)  S1 \ S0. Hence the function f is well defined and it is from S2 \ S0 to S1 \ S0. It remains to show that f is an injective function and that f (i)  i i  S2 \ S0. The fact that f (i)  i i  S2 \ S0 follows directly from the property g(i)  i i  S2 and the definition of f . Finally, we show that f is injective. Assume, for a contradiction, that f is not injective. Then there exists i, j  S2 \ S0 with i = j such that f (i) = f (j), i.e., gt(i)(i) = gt(j)(j). By eventually switching i and j, we can assume without loss of generality that t(i)  t(j). Since g is injective, we know that i = gt(j)-t(i)(j). If t(j) - t(i) = 0, then i = j which gives us a contradiction. Thus we now assume t(j) - t(i)  1. In this case, the fact that gt(j)-t(i)(j) is in S2 \ S0 contradicts the fact that the codomain of g is S1. We have thereby shown that f is injective, and this concludes the proof of S1 \ S0 S2 \ S0.
Lastly, we want to show that, for any S  S0, S1 S2 implies that S1 \ S S2 S . If S = S0, then from above, we have already shown that S1 \S0 S2 \S0. If S S0, let S = S0 \S , then S1 \S = (S1 \S0)S , S2 \S = (S2 \S0)S . From S1 \ S0 S2 \ S0, we can easily know that (S1 \ S0)  S (S2 \ S0)  S , which is just S1 \ S S2 \ S .
Lemma 2 Let S  [n] and let S1, S2  S. Then, S1 S2 if and only if S \ S2 S \ S1.

6

A. Del Pia et al.

Proof It suffices to prove the implication from left to right, i.e., that S1 S2 implies S \ S2 S \ S1. In fact, once this implication is proven, it is simple to observe that the reverse implication holds as well. To see this, assume S \ S2 S \ S1. Using the implication from left to right, we then obtain S \ (S \ S1) S \ (S \ S2), which can be rewritten as S1 S2. Hence, in the remainder of the proof we show the implication from left to right.
From Definition 1, we know that there exists an injective function f : S2  S1 with f (i)  i i  S2. Define S~1 := f (S2). To complete the proof, it suffices to show that S \ S2 S \ S~1. In fact, since S~1  S1, then S \ S~1  S \ S1, thus using the identity function we obtain S \ S~1 S \ S1. Since the domination relation is transitive, we then obtain S \ S2 S \ S~1 S \ S1, as desired. Hence we now show that that S \ S2 S \ S~1.
Note that |S~1| = |S2|, thus also |S \ S~1| = |S \ S2|, and we denote the latter cardinality by t. Let S \ S~1 = {i1, . . . , it} and S \ S2 = {j1, . . . , jt}, where i1 < . . . < it and j1 < . . . < jt. It suffices to show that jh  ih h  [t]. In fact, then we can consider the injective function g : S \ S~1  S \ S2 defined by g(ih) := jh, and obtain that S \ S2 S \ S~1. Thus, in the remainder of the proof we show that jh  ih h  [t]. We prove this statement by contradiction, thus we suppose that there exists at least one index h such that jh > ih, and we define h to be the minimum such index, i.e., h := min{h | jh > ih}.
We now show that {j  S \ S2 | j  ih } = {j1, . . . , jh-1}. The containment  holds because, by definition of h, we have jh > ih . To prove the containment , we just need to show that jh-1  ih . If not, we have jh-1 > ih , thus jh-1 > ih > ih-1, which contradicts the choice of h.
Now we consider the sets T1 := {j  S~1 | j  ih } and T2 := {j  S2 | j  ih }. Since S~1, S2  S, we have S~1 = S \ (S \ S~1) and S2 = S \ (S \ S2). We obtain
|T1| = |{j  S | j  ih }| - |{j  S \ S~1 | j  ih }| = |{j  S | j  ih }| - h, |T2| = |{j  S | j  ih }| - |{j  S \ S2 | j  ih }| = |{j  S | j  ih }| - h + 1,
therefore |T1| < |T2|. To obtain a contradiction we now show |T1|  |T2|. Since f (S2) = S~1 and f (j)  j j  S2, we obtain
|T1| = |{j  S~1 | j  ih }| = |{j  f (S2) | j  ih }|  |{j  S2 | j  ih }| = |T2|.
We have derived a contradiction. Therefore, we have shown that jh  ih h  [t], and this concludes the proof.

3 Multi-cover Inequalities and Variation
Throughout this section, we consider a TOMKS K := {x  {0, 1}n | Ax  b}, and we introduce the multi-cover inequalities (MCIs), which form a novel family of valid inequalities for K. Each MCI can be obtained from a special family of covers {C1, . . . , Ck} for K that we call a multi-cover. In order to define a multi-cover, we first introduce the discrepancy family.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

7

Definition 2 (Discrepancy family) For a family of sets C = {C1, . . . , Ck}, we say that {C1 \ kh=1Ch, . . . , Ck \ kh=1Ch} is the discrepancy family of C , and we denote it by D(C ).
Now we can define the concept of a multi-cover.
Definition 3 (Multi-cover) Let C be a family of covers for K. We then say that C is a multi-cover for K if for any set T  DD(C )D with T / D(C ), there exists some D  D(C ) such that T D or D T .
Example 1 Consider the TOMKS:
K := {x  {0, 1}5 | 19x1 + 11x2 + 5x3 + 4x4 + 2x5  31, 16x1 + 10x2 + 7x3 + 5x4 + 3x5  30}.
We have that C = {C1, C2} := {{1, 2, 5}, {1, 3, 4, 5}} is a multi-cover. In fact, it is simple to check that C1 and C2 are covers for K. Furthermore, the discrepancy family of C is D(C ) = {{2}, {3, 4}}, and for any T  {2, 3, 4}, if |T | = 1 we have {2} T , while if |T |  2 we have T {3, 4}.
For a given family of covers {C1, . . . , Ck} for K, throughout this paper, for ease of notation we define C0 := kh=1Ch, C := kh=1Ch, C¯h := C \ Ch for h  [k], and similarly T¯ := C \ T for any T  C.
We are now ready to introduce our multi-cover inequalities for K. These inequalities are defined by the following algorithm.

Algorithm 1 Multi-cover inequality (MCI)

Input: A multi-cover {C1, . . . , Ck} for K. Output: A multi-cover inequality.

1: Let {i1, . . . , im} := C \ C0, with i1 < . . . < im.

2: Set i := 1 if i  {i1, . . . , im}, and i := 0 otherwise.

3: for t = m - 1, . . . , 1 do

4:

let it be any integer  maxh[k]:itCh max C¯h: >it  + 1.

5: for j  C0 do

6:

let j be any integer  minh[k] max max <j, C¯h  , >j, C¯h  + 1 .

7: Set  := maxkh=1 (Ch) - 1. 8: return the inequality T x  .

We remark that in Algorithm 1, in the case where we take the minimum or maximum over an empty set (see Step 4 and 6), the corresponding minimum or maximum should be set to zero.
For the above algorithm, we have the following easy observation.
Observation 1 Given a multi-cover {Ch}kh=1, Algorithm 1 performs a number of operations that is polynomial in |C| and k. Furthermore, supp() = C.
At Step 4 and 6 of Algorithm 1, when the  is fixed to =, the obtained MCI is called the simple-MCI, which was given in [7]. Note that given a multi-cover, we can obtain several MCIs, but only one simple-MCI.

8

A. Del Pia et al.

Definition 4 (simple-MCI) Given a multi-cover {C1, . . . , Ck} and one of its MCIs T x  , if for every i  C \ C0, i = maxh[k]:iCh max C¯h: >i  + 1
and for every j  C0, j = minh[k] max max <j, C¯h  , t>j,tC¯h t + 1 , then such MCI T x   is called a simple-MCI (S-MCI).

The main result of this section is that, given a multi-cover for K, then any of its MCI is valid for conv(K). Before presenting the theorem, we will need the following auxiliary result.

Proposition 1 Let associated MCIs. If

{Ch}kh=1 be a there exists T

multi-cover and let T x    C \ C0, with T / {C¯h}kh=1

be one and T

of its C¯h

for some h  [k], then (T ) > (C¯h ).

We remark that Proposition 1 does not depend on the specific property of multi-covers. That is, it holds for any family of covers.

Proof Let T and C¯h be the sets as assumed in the statement of this proposition, with T C¯h . Let T0 := T  C¯h , T1 := T \ T0, and T2 := C¯h \ T0. Then T = T0  T1, C¯h = T0  T2. Since T = C¯h and T C¯h , then we know T1 = . By Lemma 1, we know that T1 T2. If T2 = , then (T ) = (T0) + (T1) > (T0) = (C¯h ). Hence we assume T2 = . Let T2 := {j1, . . . , jt}. Since T1 T2 and T1  T2 = , we know there exists {k1, . . . , kt}  T1 such that k1 < j1, . . . , kt < jt.
W.l.o.g., consider k1 and j1. By definition, there is k1 < j1, k1 / C¯h , j1  C¯h , or equivalently: k1 < j1, k1  Ch , j1  C¯h . Therefore, j1  { | > k1,  C¯h , k1  Ch }. By construction of MCI, we know that k1 > j1 . For the remaining j2 and j2, . . . , kt and jt, the same argument yields k2 > j2 , . . . , kt > jt .
Therefore, (T ) = (T1) + (T0)  k1 + . . . + kt + (T0) > j1 + . . . + jt + (T0) = (T2) + (T0) = (C¯h ), which concludes the proof.

Now we are ready to present the first main result of this paper.

Theorem 1 Given a multi-cover {Ch}kh=1 for a TOMKS K, then the corresponding MCIs are valid for conv(K).

Proof Since supp() = C, in order to show that T x   is valid for conv(K),
it suffices to show that, for any T  C with (T )   +1, T must be a cover for K. Note that by Step 7 of Algorithm 1, we have  +1 = maxkh=1 (Ch), and for any T1, T2  C, (T1)  (T2) is equivalent to (T¯1)  (T¯2). Therefore from Lemma 2, it suffices to show that: for any T  C with (T¯)  minkh=1 (C¯h), there must exist some h  [k] such that C¯h T¯. We will assume that T / {Ch}kh=1 since otherwise C¯h T¯ trivially holds. In the following, the proof is subdivided into two cases, depending on whether T¯  C0 =  or not.
First, we consider the case T¯  C0 = . In this case, we have C0  T . by Definition 3 of multi-cover, we know there must exist h  [k] such that either
Ch \ C0 T \ C0, or T \ C0 Ch \ C0. By the above assumption C0  T

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

9

and Lemma 1, we know that either Ch T or T Ch . If T Ch , then Lemma 2 implies C¯h T¯, which completes the proof. So we assume Ch T , or equivalently, T¯ C¯h . Since T¯  C \ C0 and T¯ = C¯h , by Proposition 1 we obtain that (T¯) > (C¯h ), and this contradicts to the assumption that (T¯)  minkh=1 (C¯h).
Next, we consider the case T¯  C0 = . In this case, we want to construct a D¯  C with D¯  C0 = , (D¯ )  (T¯), and D¯ T¯. Then since (T¯)  minkh=1 (C¯h), we have (D¯ )  minkh=1 (C¯h) where D¯  C0 = . According to our discussion in the previous case, we know that there exists some h  [k] such that C¯h D¯ , which implies C¯h T¯ since forms a partial order, and
the proof is completed. Next, we arbitrarily pick t  T¯  C0. Then by Step 6 of Algorithm 1, we
know that there exists h  [k], such that:

t  max

max
<t, C¯h



,
t>t ,tC¯h

t

+1

.

If {  C¯h | < t}  T¯, then we have (T¯)  <t, C¯h  + t , which is at least <t, C¯h  + t>t,tC¯h t + 1. Since t / C¯h , we know that
<t, C¯h  + t>t,tC¯h t + 1 = (C¯h ) + 1. Hence (T¯) > (C¯h ), and this contradicts the initial assumption (T¯)  minkh=1 (C¯h). Therefore we can find some   C¯h ,  < t such that  / T¯. Now define D¯ :=

T¯  { } \ {t}. Since  < t, clearly D¯ T¯. Also (T¯) - (D¯ ) = t -   ,

since then

t we

 max <t, C¯h  , are done. Otherwise,

we we

know that (T¯) - can replace T¯ by

(D¯ )  0. If D¯ , consider

D¯  C0 = any index

, in

D¯  C0 and apply once more the above discussion. Every time we are able

to obtain a set D¯ with |D¯  C0| decreased by 1. At the end we will obtain a

set D¯ with the desired property: D¯  C0 = , (D¯ )  (T¯), and D¯ T¯. This

completes the proof of the case T¯  C0 = .

Therefore from the discussion of the above two cases, we have concluded the proof that the MCI T x   is a valid inequality for conv(K).

3.1 Illustrative examples
In this section, we provide some examples to showcase the novelty of our cutgenerating procedure. We start with a simple example to help understand Algorithm 1.
Example 2 Consider a multi-cover {C1, C2} = {{1, 2, 3, 4}, {1, 2, 4, 5, 6, 7}}, here C = [7], C0 = {1, 2, 4}, and {i1, i2, i3, i4} = {3, 5, 6, 7}. Next, we compute the coefficients of one particular MCI.
The coefficient 7 is initialized as 1. For t = 3, the coefficient 6  maxh[2]:6Ch max C¯h: >6  + 1 = 1, and we pick 6 = 1. Similarly, for t = 2,

10

A. Del Pia et al.

we pick 5 = 1. For t = 1, we have 3  maxh[2]:3Ch max C¯h: >2  + 1 = 2, and we pick 3 = 3. For j  C0 = {1, 2, 4}, from Step 6, we have:

1



min max{
h[2]

max 
<1, C¯h

,


>1, C¯h

+ 1} = 4,

2



min max{
h[2]

max 
<2, C¯h

,


>2, C¯h

+ 1} = 4,

4



min max{
h[2]

max 
<4, C¯h

,


>4, C¯h

+ 1} = 3.

Here we pick j as small as possible, for j  C0. Hence  = (4, 4, 3, 3, 1, 1, 1), and from Step 7, we have  = maxh[2] (Ch) - 1 = 13. Therefore, we obtain the MCI 4x1 + 4x2 + 3x3 + 3x4 + x5 + x6 + x7  13. Note that such MCI is not an S-MCI, because at Step 4 for t = 1, we selected i1 = 3 instead of the lower bound 2.

In fact, for some multi-covers with a specific discrepancy family, we are able to write some MCIs in closed form. The next example can be seen as a generalization of the multi-cover in Example 2.

Example 3 Consider {C1, C2} with discrepancy family {{i1}, {i2, . . . , it}}, with i1 < . . . < it and t  3. Here the family of covers {C1, C2} is a multi-cover, and the following inequality is one of its associated MCIs:

t

t

txi +

(t-1)xi +

(t- +2)xi + xi +

xi  ,

i<i1 ,iC

i1 i<i2 ,iC

=3 i -1<i<i ,iC

=2

i>it ,iC

(4)

where  is the left-hand-side term evaluated at the point C1 (or C2 ) minus

1.

Here is the S-MCI formula for another multi-cover with a specific structure.

Example 4 Consider {C1, C2} with discrepancy family {{i1, it+1}, {i2, . . . , it}} for some t  3, with i1 < . . . < it+1. It is simple to verify that {C1, C2} is a multi-cover, and the obtained S-MCI is:

t

(2t - 1)xi +

(2t - 3)xi +

(2t - 2 + 3)xi+

i<i1 ,iC

i1 i<i2 ,iC

=3 i -1<i<i ,iC

(5)

t

+ 2xi +

2xi + xit+1 +

2xi  ,

=2

it <i<it+1 ,iC

i>it+1 ,iC

where  is the left-hand-side term evaluated at the point C1 (or C2 ) minus 1.

Next, we provide another simple example of S-MCI.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

11

Example 5 Consider {C1, C2, C3} with discrepancy family {{i1, i3}, {i1, i4, i5}, {i2, i3, i5}}, with i1 < . . . < i5. Here the family of covers {C1, C2, C3} is a multi-cover, and the obtained S-MCI is:

5xi +

3xi + 2xi2 +

3xi + 2xi3 +

i<i1 ,iC

i1 i<i2 ,iC

i2 <i<i3 ,iC

(6)

+

2xi + xi4 +

2xi + xi5 +

2xi  ,

i3 <i<i4 ,iC

i4 <i<i5 ,iC

i>i5 ,iC

where  is the left-hand-side term evaluated at the point C1 (or C2 , C3 ) minus 1.

Next, we present some illustrative examples to showcase the utility of MCIs. The first example shows that, unlike LCIs or CG cuts, S-MCIs are not aggregation cuts for the original linear system.

Example 6 Consider the TOMKS K and the multi-cover {C1, C2} defined in Example 1. Note that point C1 only violates the first knapsack constraint,
and point C2 only violates the second knapsack constraint. The associated

S-MCI is

3x1 + 2x2 + x3 + x4 + x5  5,

(7)

and (7) is violated by both C1 and C2 .

One can further check that this S-MCI (7) is facet-defining for conv(K).

In fact, conv(K) can be exactly characterized by this S-MCI, along with the

bound constraints 0  xi  1 i  [5], and the following four CIs: x1+x2+x5 
2, x1 + x2 + x4  2, x1 + x2 + x3  2, x1 + x3 + x4 + x5  3. Now consider an aggregation of the knapsack inequalities for K given
by inequality 1(19, 11, 5, 4, 2)T x + 2(16, 10, 7, 5, 3)T x  311 + 302, where 1, 2  0. For any choice of 1  0, 2  0, it can be verified that C1 and C2 cannot both be covers for the knapsack set given by this single inequality, so any aggregation cut for K can cut off at most one vector among C1 and C2 . Therefore, the inequality (7) is not an aggregation cut. In some cases, it may be possible to obtain an S-MCI as a CG cut for the original linear system augmented with its minimal cover inequalities. In this example, consider the set

KCI := {x  {0, 1}5 | 19x1 + 11x2 + 5x3 + 4x4 + 2x5  31, 16x1 + 10x2 + 7x3 + 5x4 + 3x5  30, x1 + x2 + x3  2, x1 + x2 + x4  2, x1 + x2 + x5  2, x1 + x3 + x4 + x5  3}.

The inequality (7) is indeed a CG cut with respect to KCI , as shown by

multipliers

1 12

·(19,

11,

5,

4,

2)+

1 4

·(1,

1,

1,

0,

0)+

1 3

·(1,

1,

0,

1,

0)+

1 2

·(1,

1,

0,

0,

1)+

1 3

·

(1,

0,

1,

1,

1)

=

(3,

2,

1,

1,

1),

1 12

·

31

+

1 4

·

2

+

1 3

·

2

+

1 2

·

2

+

1 3

·

3

=

5.75.

Hence

(3, 2, 1, 1, 1)T x  5.75 = 5 is a CG cut for KCI .

Example 6 demonstrates that MCIs can be obtained from multiple knap-
sack sets simultaneously. Specifically, the inequality (7) is facet-defining for conv(K), but it is neither valid for {x  {0, 1}5 | 19x1+11x2+5x3+4x4+2x5  31} nor for {x  {0, 1}5 | 16x1 + 10x2 + 7x3 + 5x4 + 3x5  30}. Example 6

12

A. Del Pia et al.

also shows that an S-MCI can be a CG cut for the linear system given by the original knapsack constraints along with all their minimal cover inequalities. In the next example, we will see that this is not always the case.

Example 7 Consider the following TOMKS:

K := {x  {0, 1}8 | 28x1 + 24x2 + 20x3 + 19x4 + 15x5 + 10x6 + 7x7 + 6x8  96, 27x1 + 24x2 + 21x3 + 19x4 + 13x5 + 12x6 + 7x7 + 4x8  96}.

Define covers C1 = {2, 3, 4, 5, 6, 7, 8}, C2 = {1, 3, 4, 5, 6, 8}, C3 = {1, 2, 3, 5, 6}, C4 = {1, 2, 3, 5, 7, 8}. We have C = [8], C0 = {3, 5}, and the discrepancy family is D(C ) = {{2, 4, 6, 7, 8}, {1, 4, 6, 8}, {1, 2, 6}, {1, 2, 7, 8}} =: {D1, D2, D3, D4}.
First, we verify that C is a multi-cover. For any set T  C \ C0 and T / D(C ), if 1  T , |T | = 2, then T is clearly dominated by either D2, D3 or D4. If 1  T , |T | = 3, then either T D3 or D3 T . If 1  T , |T | = 4, then T must be comparable with D2 or D3. If 1  T , |T | = 5, then T D1. If 1 / T, then clearly D1 T since T  D1. Hence we have shown that for any T  C \ C0 and T / D(C ), T must be comparable with some set in D(C ). Therefore C is a multi-cover.
When Algorithm 1 is applied to C , we obtain the S-MCI T x   given

by

4x1 + 3x2 + 3x3 + 2x4 + 3x5 + 2x6 + x7 + x8  14,

(8)

and it can be shown that (8) is facet-defining for conv(K).
Consider the linear system given by all the minimal cover inequalities for
K, as well as the original two linear constraints. We refer to this linear system as KCI , which consists of 30 inequalities. Solving max{T x | x  KCI } gives optimal value 15.307, so the corresponding CG cut with respect to KCI with the same left-hand-side coefficient vector  is T x  15, which is weaker than
inequality (8).

Even when the cover-family consists of covers all coming from the same knapsack inequality, the MCI can produce interesting inequalities. In the next example, we show an MCI that cannot be obtained as an LCI, regardless of the lifting order.

Example 8 (Example 3 in [16]) Let K := {x  {0, 1}5 | 10x1 + 7x2 + 7x3 + 4x4 + 4x5  16}, and consider the multi-cover C := {{1, 3}, {1, 4, 5}, {2, 3, 5}}. From inequality (6) of Example 5, we know that the corresponding S-MCI is

3x1 + 2x2 + 2x3 + x4 + x5  4.

(9)

The inequality (9) is the same inequality produced by the new lifting procedure described in [16], and the authors of [16] state that (9) is both a facet of conv(K) and cannot be obtained from any cover inequality by standard sequential lifting methods, regardless of the lifting order.

Next, we discuss how the well-known (1, k)-configuration inequality can be derived from the MCI.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

13

Proposition 2 Consider a knapsack set K = {x  {0, 1}n | aT x  b}, a
nonempty subset Q  [n], and t  [n] \ Q. Assume that iQ ai  b and that H  {t} is a minimal cover for all H  Q with |H| = k. Then for any
T (r)  Q with |T (r)| = r, k  r  |Q|, the (1, k)-configuration inequality

(r - k + 1)xt +

xj  r

jT (r)

can be obtained from an MCI associated with two covers of K.

Proof When r = k, then the inequality in the statement reduces to a CI.
Hence we assume r > k. W.l.o.g. we assume a1  . . .  an. Consider a new knapsack set K := {x  {0, 1}n+1 | a T x  b}, with ai = ai i  t, at+1 = at, aj = aj-1 j > t + 1. Then clearly we have a1  . . .  an+1.
Since for any H  Q with |H| = k, H{t} is a cover for K, we know that for
any j  Q, the set Q {t} \{j} is also a cover for K, i.e., iQ ai -aj +at > b. From the assumption that iQ ai  b, we have at > aj, or equivalently, t < j for any j  Q. Now for any T (r)  Q with |T (r)| = r, k  r  |Q|, let
T (r) := {j1, . . . , jr} with j1 < . . . < jr, so we have t < j1 from above. Then
consider C1 := {t}  {jr-k+1, . . . , jr}, C1 := {t}  {jr-k+1 + 1, . . . , jr + 1}, and C2 := {t + 1}  {j1 + 1, . . . , jr + 1}. Since {jr-k+1, . . . , jr}  Q with |{jr-k+1, . . . , jr}| = k, we know that C1 is a cover for K, so C1 is a cover for K from the construction of K . Furthermore C2 is a cover for K since at+1 = at. Note that the discrepancy family of {C1, C2} is {{t}, {t + 1, j1 + 1, . . . , jr-k + 1}}, thus by Example 3, the inequality

r
(r - k + 1)xt + xt+1 + xj +1  r
=1

(10)

is an MCI for K associated with {C1, C2}. Since K can be obtained by projecting out of the variable xt+1 of K , we project out the xt+1 variable in (10)
and relabel the indices. We obtain the following (1,k)-configuration inequality

for K:
r

(r - k + 1)xt + xj = (r - k + 1)xt +

xj  r.

=1

jT (r)

3.2 Extended MCI

In this section, we propose a procedure to strengthen, or extend, an MCI in a similar fashion to a well-known procedure for CIs [1]. We call the strengthened inequalities extended MCI (E-MCI).
For any set C  [n], let min(C) denote the least element in C. Recall that for a cover C  [n], its corresponding extended cover inequality ECI is simply:

x([min(C) - 1]  C)  |C| - 1,

(11)

14

A. Del Pia et al.

where the coefficient of each index i that is less than min(C) is increased from 0 to 1. For a multi-cover {C1, . . . , Ck} one can perform a similar extension: let T x   be an MCI of this multi-cover, then the inequality x([min(C) - 1]) + T x   is also valid for K. However, the improved coefficients in general can be larger than 1, and the indices of the variables included in the inequality do not have to be limited in the set [min(C) - 1]. Before introducing the formal definition for our extended inequality, for any Ch and vector , we denote by 2,Ch the second least number in the multiset {i, i  Ch}, which allows duplication. In cases where multiple minimum numbers exist in {i, i  Ch}, then 2,Ch is simply miniCh i.
Definition 5 (Extended MCI) Given an MCI T x   generated from a multi-cover {C1, . . . , Ck}. Then the following inequality

i[n]\C

max
h[k]:i<min(Ch

)

2,Ch

xi + T x  

(12)

is called an extended MCI (E-MCI).

Same as the remark we made after Algorithm 1, here for an index i with {h  [k] | i < min(Ch)} = , the maximum over this empty set is set to be zero. It is easy to observe that, when (12) is applied to the normal CI, this inequality gives the same ECI as (11).
Next, we prove that inequality (12) is indeed a valid inequality for K.
Theorem 2 For a TOMKS K and an MCI T x   generated from a multicover {C1, . . . , Ck}, the E-MCI (12) is valid for K.
Proof In order to show that inequality (12) is valid for K, it suffices to show that for any S  [n] whose incidence vector S violates the inequality (12), then S must be a cover for K. Let E := {i  [n]\C | h  [k] s.t. i < min(Ch)}. The proof is by induction on |S  E|.
When |S  E| = 0, S violates inequality (12) if and only if S violates the original MCI T x  , which implies that S is a cover for K since we know that T x   is valid for K. Now we assume that when |S  E| = N (N < |E|) our statement is true. Consider the case where |S  E| = N + 1. We want to show that S is not in K. Arbitrarily pick i  S  E, with maxh[k]:i<min(Ch) 2,Ch = 2,Ch for some h  [k]. We consider two cases.
1. If {i  Ch | i  2,Ch }  S, by definition of 2,Ch , we know that {i  Ch | i < 2,Ch } has at most one element, and that element is larger than i since i < min(Ch). Therefore, we obtain
S  {i}  {i  Ch | i  2,Ch } {i  Ch | i < 2,Ch }  {i  Ch | i  2,Ch }
= Ch ,
which indicates that S must also be a cover for K.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

15

2. If there exists j  {i  Ch | i  2,Ch } and j / S, then we have j  2,Ch , which is the coefficient of xi in equality (12). Consider S := S \ {i}  {j}, which is dominated by S since i < min(Ch). Since S violates inequality (12), we know that S also violates inequality (12). Note that |S  E| = |S  E| - 1 = N , so by the inductive hypothesis, we know that S must be a cover for K. Since S S , we obtain that S must also be a cover for K.
By induction, we conclude the proof.

The next example is obtained from Example 8 by simply adding two more variables.
Example 9 Let K := {x  {0, 1}7 | 10x1 +10x2 +7x3 +7x4 +7x5 +4x6 +4x7  16}, and we consider the multi-cover C := {{2, 5}, {2, 6, 7}, {4, 5, 7}}. From Example 5, we have the following S-MCI:

3x2 + 2x4 + 2x5 + x6 + x7  4.
Now we lift the coefficients of indices 1 and 3. For index 3, note that {h  [3] | 3 < min(Ch)} = {3}, and the second smallest number in {4, 5, 7} is 2, so the extended coefficient for x3 is 2. Similarly, for index 1 we have {h  [3] | 1 < min(Ch)} = {1, 2, 3}, and 2,C1 = 3, 2,C2 = 1, 2,C3 = 2, so the extended coefficient for x1 is 3. Therefore, we obtain the following E-MCI:

3x1 + 3x2 + 2x3 + 2x4 + 2x5 + x6 + x7  4.

(13)

In fact, this inequality turns out to be the only non-trivial facet-defining inequality of conv(K) that is not an ECI.

We give another interesting example with only one knapsack constraint.
Example 10 Let K := {x  {0, 1}6 | 66x1 +61x2 +54x3 +33x4 +21x5 +16x6  130}. From the multi-cover {C1, C2} := {{2, 3, 6}, {2, 4, 5, 6}} we obtain an MCI: 3x2 + 2x3 + x4 + x5 + x6  5. Note that 2,C1 = 2, 2,C2 = 1, so from (12) we obtain the corresponding E-MCI 2x1 + 3x2 + 2x3 + x4 + x5 + x6  5, which is also a facet-defining inequality for conv(K).

4 Facet-defining Inequalities
In this section, we provide a sufficient condition for a S-MCI to define a facet of conv(K). We also given a family of instances in which all the non-trivial facet-defining inequalities of conv(K) are given by MCIs.
Given a multi-cover {C1, . . . , Ck} and an S-MCI T x  , we denote by {it,1, . . . , it,nt } := {i  C \ C0 | i = t} the set of indices whose S-MCI coefficients are all t, where it,1 < . . . < it,nt .
Theorem 3 Let {C1, . . . , Ck} be a multi-cover for a TOMKS K, and let T x   be the corresponding S-MCI. Assume that the following conditions hold:

16

A. Del Pia et al.

1. C0 = ; 2. For each h  [k], cover Ch is a minimal cover; 3. For any t = 2, . . . , maxni=1 i, there exists some it-1, t / Cht  {Ch}kh=1
with it,1  Cht and i1,n1  Cht , such that Cht  {it-1, t } \ {it,nt } is not a cover; 4. There exists some Ch1  {Ch}kh=1, such that i1,1  Ch1 and for any i / C, Ch1  {i } \ {i1,1} is not a cover. 5. For any t = 1, . . . , maxni=1 i, (Cht ) =  + 1.
Then T x   is a facet-defining inequality of conv(K).
The proof of this theorem is deferred to Appendix A.
Example 11 Consider the TOMKS and the multi-cover in Example 8. We have C1 = {1, 3}, C2 = {1, 4, 5}, C3 = {2, 3, 5}, Then the corresponding S-MCI T x   is 3x1 + 2x2 + 2x3 + x4 + x5  4. Here we have i1,1 = 4, i1,2 = 5, i2,1 = 2, i2,2 = 3, i3,1 = 1.
Clearly condition 1 in Theorem 3 holds. Since (C1) - 3 = 10  16, (C2) - 5 = 14  16, (C3) - 5 = 14  16, condition 2 holds as well. For t = 2, let Ch2 = C3, then i1,1 / Ch2 , i1,2  Ch2 , i2,1  Ch2 , and Ch2  {i1,1} \ {i2,2} = {2, 4, 5} is not a cover. For t = 3, let Ch3 = C2, then i2,1 / Ch3 , i1,2  Ch3 , i3,1  Ch3 , and Ch3  {i2,1} \ {i3,1} = {2, 4, 5} is not a cover. So condition 3 holds. Let Ch1 = C2, then i1,1  Ch1 , since here C = [5], condition 4 holds. Lastly, (Ch1 ) = (Ch2 ) = (Ch3 ) = 5, so condition 5 also holds. Hence Theorem 3 yields that this S-MCI is facet-defining.
A clutter is a family of subsets of a ground set with the property that no subset in the clutter is contained in any other subset in the clutter. It is simple to check that the set of minimal covers C of a knapsack set is a clutter, which we call the minimal cover set. For a clutter C and every subset Z of [n], the deletion is defined as {A  C | A  Z = }, and the contraction is defined as {A - Z | A  C}. A minor of C is a clutter that may be obtained from C by a sequence of deletions and contractions. For a minimal cover set of a TOMKS, we have the following theorem that was mentioned in Section 1.
Theorem 4 Let C be the minimal cover set of a TOMKS K. Then conv(K) = {x  [0, 1]n | x(C)  |C|-1, C  C} if and only if C has no minor isomorphic to Jq = {{2, . . . , q}, {1, i} for i = 2, . . . , q} with q  3.
Theorem 4 follows easily from Theorem 1.1 in [15] (see also [21]) and the fact that the minimal cover set C of a TOMKS K is indeed a shift clutter as defined in [3]. For completeness, we provide a proof in Appendix B.
From Theorem 4, we know that in order for conv(K) to have non-trivial facet-defining inequalities other than CIs, the minimal cover set C must have minors isomorphic to Jq. Now we consider a special clutter {{1, . . . , p - 1, p + 1, . . . , q}, {1, . . . , p, i} for i = p + 1, . . . , q} for some p = 1, . . . , q - 2, q  n. After contracting {1, . . . , p-1}, we obtain a minor {{p+1, . . . , q}, {p, i} for i = p + 1, . . . , q} that is isomorphic to Jq-p+1. The next theorem states that, if the

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

17

minimal cover set is this particular clutter, then we can provide the complete linear description of conv(K).

Theorem 5 Let K be a TOMKS whose minimal cover set is

{{1, . . . , p - 1, p + 1, . . . , q}, {1, . . . , p, i} for i = p + 1, . . . , q} for some p =

1, . . . , q - 2, q  n. Then conv(K) can be described by the bound constraints,

the CIs:

p i=1

xi

+

xj



p

for

j

=

p

+

1, .

.

.,

q,

p-1 i=1

xi

+

q i=p+1

xi



q

-

2,

and one MCI: (q - p)

p-1 i=1

xi

+

(q

-

p

-

1)xp

+

q i=p+1

xi



p(q

-

p)

-

1.

Since CI is a special case of MCI, Theorem 5 can be seen as a particular instance where the facet-defining inequalities are all given by MCIs. The proof of this theorem can be found in Appendix C.

5 Separation Problem
The separation problem for a multiple knapsack set K is: "Given a vector x~  [0, 1]n, either find an inequality that is valid for K and violated by x~, or prove that no such inequality exists". Even though the separation problems for some well-known classes of inequalities, e.g., CIs, simple LCIs and general LCIs have all been shown to be N P-hard [8, 11, 14], several efficient heuristics and exact separation algorithms have been proposed [6, 10, 24, 22]. In this section, we propose a mixed-integer programming (MIP) formulation to solve the exact separation problem for MCIs.
First, we introduce the following concept of a skeleton. For D  [n] and a function f : D  N, we denote by f (D) := {f (i) | i  D} the image of D under f .
Definition 6 (Skeleton) Let C  2[n]. For any i  DD(C )D, let f (i) := k if i is the k-th least element of DD(C )D. Then we say that {f (D) | D  D(C )} is the skeleton of C .
In other words, the skeleton of C is isomorphic to D(C ) by relabelling the elements of DD(C )D with their order in the set.
Due to the lack of a complete understanding of multi-covers, it is currently challenging to derive an efficient scheme to separate various MCIs altogether. In fact, for any given family of covers, we conjecture that it is N P-hard to decide whether or not it is a multi-cover. However, different multi-covers with the same (or similar) skeleton structure tend to have very similar combinatorial properties. It turns out that for any fixed skeleton, we are able to formulate as a MIP problem the separation problem for MCIs whose associated multicovers have that skeleton. We present the exact formulation in Appendix D. Here we mainly introduce a different formulation, which enables us to separate a sub-family of MCIs whose associated multi-cover's skeleton is either {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}}, for any t  3. There are the inequalities given in Examples 3 and 4. Given a vector x~  [0, 1]n, we provide below the formulation for the corresponding separation problem:

18

A. Del Pia et al.

min t + i - (i + i + i)x~i

i[n]

i[n]

s.t. t  i, t  i,

i[n]

i[n]

ui + vi + wi  1, i  [n]

i  j + (1 + M )ui - M, i  j + (1 + M )vi - M,

w1,i + w2,i = wi, i  [n]

i  M ui, i  M vi, i  M wi, i  [n]

i, j  [n], j > i

i  j + (1 + nM )w1,i - nM, i  j + (1 + nM )w2,i - nM,

j>i

j>i

i  j + M w1,i - M, i  j + M w2,i - M, i, j  [n], j < i

i  [n]

Aj,i(ui + wi)  (bj + 1) · j ,

Aj,i(vi + wi)  (bj + 1) · µj, j  [m]

i[n]

i[n]

j  1,

µj  1,

j[m]

j[m]

vi  2, uj  vi, vi + uj  2,

i[n]

j<i

ji

j, µj  {0, 1}, j  [m]

ui, vi, wi, w1,i, w2,i, zi  {0, 1}, i  [n]

i, i, i  Z, i  [n].

i  [n]

(Sep2)

Next we show that, the separation problem for MCIs from multi-covers with skeleton {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}} can be exactly solved by solving the above MIP problem.

Theorem 6 Given a TOMKS K and a point x~, there exists a multi-cover C whose skeleton is {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}} for some t  3 and an associated MCI to separate x~ from K, if and only if (Sep2) has an optimal value less than 1.
Proof First, we explain the meaning of the variables in (Sep2). Let C1 and
C2 be two covers, for any i  [n], we define ui := 1{i  C1 \ C2}, vi := 1{i  C2 \ C1}, and wi := 1{i  C1  C2}. So we have the second constraint
ui + vi + wi  1 in (Sep2). Variables i, i, i denote the coefficients for index i in C1 \ C2, C2 \ C1 and C1  C2 respectively, which is enforced by i  M ui etc., through some "big-M" constant. From Step 7 of Algorithm 1,

(i + i + i)x  max( i + i, i + i) - 1

i[n]

i

i

i

i

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

19

is the MCI we will obtain. Introducing an additional variable t and constraints
t  i i, t  i i, we obtain the objective function and the first constraint of (Sep2). In particular, the objective value is strictly less than 1 if and only
if the obtained inequality is violated by x~. Using a big-M formulation, i  j + (1 + M )ui - M formulates the constraint of Step 4 of Algorithm 1: for i  C1 \ C2, i  maxj>i,jC2\C2 j + 1. By splitting the binary variable wi into two binary variables w1,i and w2,i, and using the big-M formulation i  j>i j + (1 + nM )w1,i - nM, i  j + M w1,i - M etc., we are able to formulate the constraint of Step 6 of Algorithm 1:

i  max{ max j,

j + 1} or

j <i,j C1 \C2

j >i,j C1 \C2

i  max{ max j,

j + 1}.

j <i,j C2 \C1

j >i,j C2 \C1

Constraints i[n] Aj,i(ui + wi)  (bj + 1) · j , i[n] Aj,i(vi + wi)  (bj + 1) · µj and i   1, i µi  1 enforce that C1 and C2 are two covers of K. Lastly, the constraints i[n] vi  2, j<i uj  vi, vi + ji uj  2 enforce the {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}} skeleton structures with
t  3. In particular, constraint j<i uj  vi means min{i | i  C1 \ C2} < min{i | i  C2 \ C1}, and constraint vi + ji uj  2 means |C1 \ C2|  2, and max{i | i  C1 \ C2} > max{i | i  C2 \ C1} if |C1 \ C2| = 2. These
are exactly the conditions for {C1, C2} to have skeleton {{1}, {2, . . . , t}} or
{{1, t + 1}, {2, . . . , t}}.

It's worth mentioning that, the constraint i[n] vi  2 in (Sep2) can actually be removed. In that case, (Sep2) will also be able to separate MCIs with skeleton {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}} for some t  2, as well as the normal CIs, since the optimal solution to (Sep2) with binary variables u = v = 0 corresponds to a separating CI, where the cover is given by the support of the w vector.

6 Numerical Experiments
In this section we present results of numerical experiments designed to test the optimality gap closed by our proposed cutting-planes and their variants.
For a given fractional solution, we use the separation formulation (Sep2) to produce MCIs that arise from multi-covers with two specific skeletons. We also relax the constraint i[n] vi  2 therein, so the separation problem may separate CI as well. The numerical experiment proceeds as follows: for a given totally-ordered multiple knapsack problem, in the i-th iteration we optimize the linear objective function over the current linear relaxation, and obtain an optimal solution xi. We terminate the experiment if the separation problem (Sep2) associated with xi does not have optimal value being strictly less than 1. Otherwise, we add the separating cutting-plane generated from (Sep2) into the

20

A. Del Pia et al.

current linear relaxation, then proceed to the next step. The linear relaxation in the first iteration is initialized as the natural LP relaxation of the problem.
For our experiments, we create synthetic instances of the multiple knapsack problem: max{cT x | Ax  b, x  {0, 1}n}, where A  Zm + ×n, c  Zn+, b  Zm + . For each row of the matrix Aj, we generate n random integers in the range [1, n2] and then sort them in non-increasing order. The right-hand-side number bj is generated as a random integer number in the range [Aj,1, i(Aj,i)]. The objective vector c is also generated from sorting n random integer numbers in [1, n2] in non-increasing order. We create ten instances of sizes n  {20, 30} and with m  {1, 2, 3} constraints.
We compare the MCI inequality and two of its variants against analogous CIs. Specifically, we will compare the MCI against the original CI, the E-MCI against the classical ECI, and a lifted version of MCI (L-MCI) with a lifted CI (LCI ). To obtain a lifted CI or a lifted MCI, we start with the original CI or MCI, and then apply the simple sequential up-lifting procedure of [19], lifting the variables in the order 1, 2, . . . , n. In subsequent tables and figures, we use the following abbreviations:

LP: Denotes the natural LP relaxation. MCI : Denotes the linear relaxation after iteratively solving the separation problem (Sep2) to add all CIs and MCIs whose associated multi-covers have skeleton {{1}, {2, . . . , t}} or {{1, t + 1}, {2, . . . , t}}. E-MCI : Denotes the linear relaxation where each MCI found is strengthened/extended as in (12). L-MCI : Denotes the linear relaxation where each MCI is lifted. CI : Denotes the linear relaxation obtained after adding all CIs. Here the separation problem is exactly solved by solving an IP, as in [6]. ECI : Denotes the linear relaxation where each additional inequality is the ECI of the separating CI in the current iteration. LCI : Denotes the linear relaxation where each additional inequality is the LCI of the separating CI in the current iteration.

We report the summary of numerical results in Table 1 and Table 2, and more details can be found in Appendix E. For different combinations of (n, m), in Table 1, we list the average optimality gap obtained from optimizing over the different relaxations studied, and in Table 2, we list the total number of instances that have been solved to optimality for each method. From these two tables, one can see quite clearly that the L-MCI is able to close much more optimality gap than its LCI counterpart, and solve most (60 - 80%) of the instances to optimality. The difference between the two methods on each instance is shown directly in Figure 1, where we see that instances with over 3% optimality gap using LCI may be solved at the root node to optimality with LMCI.
Because our separation method is based on the solution of a difficult MIP problem (Sep2), we only conduct our experiments for small-sized knapsack instances. However, we believe the computational results are promising enough

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

21

Table 1: Average optimality gap of different cutting-plane closure. (%)

(n,m) LP

MCI

E-MCI L-MCI CI

ECI

LCI

(20, 1) 3.93

1.08

0.27

0.11

2.00

0.65

0.63

(20, 2) 6.01

2.90

1.02

0.21

4.23

1.69

1.12

(20, 3) 6.03

3.89

0.73

0.27

4.67

1.17

1.12

(30, 1) 6.34

4.78

0.59

0.24

5.24

0.68

0.65

(30, 2) 4.76

2.95

0.89

0.19

3.51

1.09

0.83

(30, 3) 3.13

2.50

0.83

0.31

2.67

0.90

0.80

Table 2: Number of instances been solved to optimality. (out of 10)

(n,m) LP
(20, 1) 0 (20, 2) 0 (20, 3) 0
(30, 1) 0 (30, 2) 0 (30, 3) 0

MCI
3 0 1
1 1 1

E-MCI L-MCI CI

4

6

1

2

6

0

4

8

0

3

7

1

5

7

0

2

6

1

ECI

LCI

1

2

1

2

2

2

3

3

4

5

2

2

Fig. 1: The x-axis and y-axis of each dot represent the optimality gap closed by LCI and L-MCI for each instance respectively.
to encourage others to seek efficient heuristic separation methods for this large family of inequalities.

22

A. Del Pia et al.

7 Conclusion
In this work, we introduced a new family of valid inequalities for the intersection of knapsack sets and exhibited several scenarios in which the inequalities are not implied by other known families of cutting-planes. The numerical experiments demonstrated the potential for this new family of cuts to strengthen the linear programming relaxation more than known classes of inequalities. Our work is among the very first that explicitly studies the polyhedral structure of the intersection of multiple knapsack sets, and we hope that the ideas presented here will give rise to new methods for generating strong valid inequalities for complex binary sets that arise in practical settings.

References
1. Balas, E.: Facets of the knapsack polytope. Mathematical programming 8(1), 146­164 (1975)
2. Balas, E., Jeroslow, R.: Canonical cuts on the unit hypercube. SIAM Journal on Applied Mathematics 23(1), 61­69 (1972)
3. Bertolazzi, P., Sassano, A.: An O(mn) algorithm for regular set-covering problems. Theoretical Computer Science 54(2-3), 237­247 (1987)
4. Bodur, M., Del Pia, A., Dey, S.S., Molinaro, M., Pokutta, S.: Aggregation-based cuttingplanes for packing and covering integer programs. Math. Program. 171(1-2, Ser. A), 331­359 (2018). DOI 10.1007/s10107-017-1192-x. URL https://doi.org/10.1007/ s10107-017-1192-x
5. Calafiore, G.C., Campi, M.C.: The scenario approach to robust control design. IEEE Trans. Automat. Control 51(5), 742­753 (2006). DOI 10.1109/TAC.2006.875041. URL https://doi.org/10.1109/TAC.2006.875041
6. Crowder, H., Johnson, E.L., Padberg, M.: Solving large-scale zero-one linear programming problems. Operations Research 31(5), 803­834 (1983)
7. Del Pia, A., Linderoth, J., Zhu, H.: Multi-cover inequalities for totally-ordered multiple knapsack sets. Proceedings of IPCO (2021)
8. Ferreira, C.E., Martin, A., Weismantel, R.: Solving multiple knapsack problems by cutting planes. SIAM Journal on Optimization 6(3), 858­877 (1996)
9. Fukasawa, R., Goycoolea, M.: On the exact separation of mixed integer knapsack cuts. Mathematical Programming 128, 19­41 (2011)
10. Gu, Z., Nemhauser, G.L., Savelsbergh, M.W.: Lifted cover inequalities for 0-1 integer programs: Computation. INFORMS Journal on Computing 10(4), 427­437 (1998)
11. Gu, Z., Nemhauser, G.L., Savelsbergh, M.W.: Lifted cover inequalities for 0-1 integer programs: Complexity. INFORMS Journal on Computing 11(1), 117­123 (1999)
12. Hammer, P.L., Johnson, E.L., Peled, U.N.: Facet of regular 0­1 polytopes. Mathematical Programming 8(1), 179­206 (1975)
13. Hojny, C., Gally, T., Habeck, O., Lu¨then, H., Matter, F., Pfetsch, M.E., Schmitt, A.: Knapsack polytopes: a survey. Annals of Operations Research pp. 1­49 (2019)
14. Klabjan, D., Nemhauser, G.L., Tovey, C.: The complexity of cover inequality separation. Operations Research Letters 23(1-2), 35­40 (1998)
15. Laurent, M., Sassano, A.: A characterization of knapsacks with the max-flow-min-cut property. Operations Research Letters 11(2), 105­110 (1992)
16. Letchford, A.N., Souli, G.: On lifted cover inequalities: A new lifting procedure with unusual properties. Operations Research Letters 47(2), 83­87 (2019)
17. Luedtke, J., Ahmed, S.: A sample approximation approach for optimization with probabilistic constraints. SIAM J. Optim. 19(2), 674­699 (2008). DOI 10.1137/070702928. URL https://doi.org/10.1137/070702928
18. Nemirovski, A., Shapiro, A.: Scenario approximation of chance constraints. In: G. Calafiore, F. Dabbene (eds.) Probabilistic and Randomized Methods for Design Under Uncertainty, pp. 3­48. Springer (2005)

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

23

19. Padberg, M.W.: A note on zero-one programming. Operations Research 23(4), 833­837 (1975)
20. Padberg, M.W.: (1, k)-configurations and facets for packing problems. Mathematical Programming 18(1), 94­99 (1980)
21. Seymour, P.D.: The matroids with the max-flow min-cut property. Journal of Combinatorial Theory, Series B 23(2-3), 189­222 (1977)
22. Weismantel, R.: On the 0/1 knapsack polytope. Mathematical Programming 77(3), 49­68 (1997)
23. Wolsey, L.A.: Facets and strong valid inequalities for integer programs. Operations research 24(2), 367­372 (1976)
24. Wolsey, L.A., Nemhauser, G.L.: Integer and combinatorial optimization, vol. 55. John Wiley & Sons (1999)

Appendix A Proof of Theorem 3

First, by Step 4 in Algorithm 1, we have the following easy observation.
Observation 2 Let {C1, . . . , Ck} be a multi-cover and let T x   its corresponding S-MCI. If there exist some t  N,  [nt] and h  [k] such that it,  Ch , then {it, , . . . , it,nt }  Ch .
Now we can prove Theorem 3.

Proof (Proof of Theorem 3) Consider the set of binary points whose support is in one of the following sets:

S1

:= {Cht

 {it-1,

t } \ {it,

}|

t

= 2, . . . , mnax i,
i=1

S2

:=

{Cht

\

{i1,n1 }

|

t

=

2, . . . , mnax i},
i=1

= 1, . . . , nt},

(14) (15)

S3 := {Ch1 \ {i1, } | = 1, . . . , n1}, S4 := {Ch1  {i } \ {i1,1} | i / C}.

(16) (17)

First, we want to prove that any set in (14)-(17) is not a cover for K. By condition 3,
we know i1,n1  Cht for any t = 2, . . . , maxni=1 i, and by condition 4, we know i1,1  Ch1 . From Observation 2, there is {i1,1, . . . , i1,n1 }  Ch1 . Hence by condition 2, we know that for any t = 2, . . . , maxni=1 i, Cht \ {i1,n1 } is not a cover for K, and for any = 1, . . . , n1, Ch1 \ {i1, } is not a cover for K. So any set in S2  S3 is not a cover. Condition 4 directly states
that any set in S4 is not a cover. Furthermore, condition 3 states that it,1  Cht , then by Observation 2, we know that for any  [nt], it,  Cht . Also, condition 3 states that Cht  {it-1, t } \ {it,nt } is not a cover, so Cht  {it-1, t } \ {it, } is also not a cover of K. Hence any set in S1 is not a cover of K.
Now we want to show that T x =  is the only hyperplane that contains all the incidence
vectors of the sets in S1S2S3S4. Let uT x = v be the hyperplane that contains all those
binary points. Then, from the sets in S3, we know that ui1,1 = . . . = ui1,n1 , and we denote it to be . Since for any t = 2, . . . , maxni=1 i and = 1, . . . , nt, u(Cht  {it-1, t } \ {it, }) = v, we know that for any t = 2, . . . , maxni=1 i, uit,1 = . . . = uit,nt . Furthermore, since u(Cht  {it-1, t } \ {it, }) = u(Cht \ {i1,n1 }) = v, we obtain that for any t = 2, . . . , maxni=1 i and
= 1, . . . , nt, uit, -uit-1, t = ui1,n1 = . Lastly, from the points in S3 and in S4, we know that ui = 0 for any i / C. Hence we obtain that, for any t = 1, . . . , maxni=1 i, = 1, . . . , nt, there is uit, =  · t, and for any i / C, ui = 0. Since it, = t and i = 0 for any t = 1, . . . , maxni=1 i, = 1, . . . , nt, i / C, and {it,1, . . . , it,nt } = {i  C \ C0 | i = t}, we know that ui =  · i for any i / C0. By condition 1, we have u =  · . Using condition 5, it is simple to check that v = u(Cht ) -  =  · (Cht ) -  =  ·  for any t = 1, . . . , maxni=1 i. Thus, we obtain that (u, v) =  · (, ), and this concludes the proof that T x =  is the
only hyperplane that contains all the incidence vectors of sets in S1  S2  S3  S4, which are all in the TOMKS K. Since the S-MCI T x   is a valid inequality for conv(K), we
obtain that T x   is a facet-defining inequality for conv(K).

24

A. Del Pia et al.

Appendix B Proof of Theorem 4
Here we restate Theorem 1.1 in [15].
Theorem 7 (Theorem 1.1 [15]) If a clutter L has no P4 := {{1, 2}, {2, 3}, {3, 4}} minor, then
conv({x  Zn+ | x(L)  1, L  L }) = {x  Rn+ | x(L)  1, L  L }
if and only if L has no minor isomorphic to one of the following clutters: 1. Q6 = {{1, 3, 5}, {1, 4, 6}, {2, 3, 6}, {2, 4, 5}}; 2. Jq = {{2, . . . , q}, {1, i} for i = 2, . . . , q}, q  3.
Proof (Proof of Theorem 4) Let C be a minimal cover set of a TOMKS K. We have the following claim.
Claim 1 C has no minor isomorphic to P4 or Q6.
Proof of claim Let {{i1, i2}, {i2, i3}, {i3, i4}} be the subset of one of the minors M of C, with {{i1, i2}, {i2, i3}, {i3, i4}} being isomorphic to P4 and i1 < . . . < i4. Then by the TOMKS property of K, M should also contain {{i1, i3}, {i1, i4}, {i2, i4}}. This is a contradiction.
Now assume that {{i1, i3, i5}, {i1, i4, i6}, {i2, i3, i6}, {i2, i4, i5}} is the subset of one of the minors M of C, such that it is isomorphic to Q6. W.l.o.g. we assume that i1 < . . . < i6. Then M must also contain {i2, i3, i5}, and this gives us a contradiction. For any other possible ordering of the indices, we can obtain a symmetric argument.
From Claim 1 and Theorem 7, we obtain the following statement: If C is the minimal cover set of a TOMKS K, then conv({y  Zn+ | y(C)  1, C  C}) = {y  Rn+ | y(C)  1, C  C} if and only if C has no minor isomorphic to a clutter Jq, with q  3. Therefore, all extreme points of the polytope {y  [0, 1]n | y(C)  1, C  C} are integral if and only if C has no minor isomorphic to Jq. By substituting the variable y with 1 - x, we know that conv({x  {0, 1}n | x(C)  |C| - 1, C  C}) = {x  [0, 1]n | x(C)  |C| - 1, C  C} if and only if C has no minor isomorphic to Jq. Moreover, it was shown in [2] that, conv(K) = conv({x  {0, 1}n | x(C)  |C| - 1, C  C}), and this completes the proof.

Appendix C Proof of Theorem 5
Proof Let T x  0 be a non-trivial facet-defining inequality for conv(K). Then clearly we have that   Rn+, 0 > 0 (see also [12]). W.l.o.g. we can assume 0 = 1. Denote X := {x  K | T x = 1}, which has dimension n - 1 since T x  1 is facet-defining. First, we obtain the following claims.
Claim 2 i = 0 for all i = q + 1, . . . , n.
Proof of claim For any i  [n] \ [q], there exists some x  X with xi = 0, since otherwise X  {x | xi = 1, T x = 1}, which has dimension n - 2. If supp(x )  {i} is a cover for K, then it must contain some minimal cover in Jq. However, supp(x ) does not contain any minimal cover (since x is feasible), and i  [n] \ [q] is not contained in any minimal cover. Hence we know that x + ei  K, which has T (x + ei)  1. Because T x = 1, we obtain that i = 0.
Claim 3 1 = . . . = p-1 = ([n]) - 1 > 0.
Proof of claim Suppose i = 0 for some i  [p - 1]. From the minimal cover structure of K, we know that [n] \ {i} is not a cover for K. Hence ([n]) = ([n] \ {i})  1 = 0, which means that T x  1 is dominated by the bound constraints xj  1, j  [n], a contradiction. Furthermore, for any i  [p - 1], there exists some point x  X with xi = 0, since otherwise X  {x | xi = 1, T x = 0} which has dimension n - 2. Hence 1 = T x  ([n] \ {i})  1, which gives i = ([n]) - 1, for any i  [p - 1].

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

25

Claim 4 If p > 0, then ([p]) = 1.

Proof of claim Since

p i=1

xi

=

p

-

1

is

not

valid

for

K,

and

X

is

(n

-

1)-dimensional,

we

know that there exists x  X with x ([p]) = p or p - 2. If x ([p]) = p - 2, then there must

exist i, j  [p] such that xi = xj = 0. From Claim 3 and the assumption of p > 0, we know

it's impossible. Hence there exists x  X with xi = 1 for any i  [p]. From the minimal cover set K, we know xj = 0 for any j  [q] \ [p]. Therefore, 1 = T x = ([p]) = 1.

Next, we consider three different cases.

1. Case p = 0. In this case, we want to show that T x  1 is the same as the CI

p-1 i=1

xi

+

q i=p+1

xi



q

-

2.

First,

we

prove

that

x([q])

-

xp

=

q

-

2

for

any

x



X.

If not, then there exists some x  X and i, j  [q] \ {p}, such that xi = xj = 0.

We construct a new point x from x by switching the j-th component from 0 to 1,

and setting xp = 0. Since xp = xi = 0, we know that x  K. Note that 1  T x = T x + j = 1 + j , thus we have j = 0. Hence ([n] \ {p, j}) = ([n]).
However, [n] \ {p, j} is not a cover, and we obtain ([n])  1, which means that the

inequality T x  1 is dominated by the bound constraints, a contradiction. Therefore

x([q]) - xp = q - 2 for any x  X. Since X = {x  K | T x = 1} is assumed to have dimension (n - 1), we know that T x  1 must be the same inequality as the CI:

p-1 i=1

xi

+

q i=p+1

xi



q

-

2.

2. Case p > 0, and there exists x  X with xp = 0, such that xi = 1 for any i 

supp()  {p + 1, . . . , q}. In this case consider such point x . From Claim 3, we have

([n] \ {i}) = 1 for any i  [p - 1], thus we know that xi = 1 for any i  [p - 1].

Hence T x = ([n]) - p = 1, from Claim 3 we have 1 = . . . = p-1 = p. Also

by Claim

4, we have 1

=

...

=

p

=

1 p

.

So

the

original

inequality

T x



1 is

just

(

1 p

,

.

.

.

,

1 p

,

p+1

,

.

.

.

,

q

,

0,

.

.

.

,

0)T

x



1,

and

from

Claim

3,

there

is

q i=p+1

i

=

1-

1 p

· (p - 1)

=

1 p

.

Multiplying

each

CI

p i=1

xi

+

xj



p

by

a

non-negative

number

j for each j = p + 1, . . . , q, and summing them up, we obtain that our facet-defining

inequality T x  1 is dominated by the CIs

p i=1

xi

+ xj



p

for

j

=

p + 1, . . . , q.

This

means that T x  1 coincides with one of these CIs.

3. Case p > 0, and for any x  X with xp = 0, there is xj = 0 for some index j  supp()  {p + 1, . . . , q}. In this case, we have the following claim.

Claim 5 p+1 = . . . = q = 1 - p > 0.

Proof of claim First, we show that i > 0 for any i  [q] \ [p]. If not, there is i  [q] \ [p]

such that i = 0. Arbitrarily pick a point x  X with xp = 0. By the assumption of this case, then there must exist j  [q] \ [p] such that xj = 0 and j > 0. Then we

construct another point x from x by setting the i-th component to 0. Since i = 0, we have T x = T x = 1, where xp = xp = 0, xj = xj = 0, xi = 0. Note that x + ej
is also a feasible point in K. However, 1 = T x < T (x + ej ), a contradiction.

Next, we show that i = 1 - p for any i  [q] \ [p]. Note that since [q] \ {p} is

a minimal cover, we know that [q] \ {p, i} is not a cover for any i  [q] \ [p]. Hence

([q] \ {p, i})  1. Then from Claim 2 and 3, we obtain p + i  1, for any i  [q] \ [p].

If

for some i

p i=1

xi

+ xi

 [q] \ [p] there is p + i > 1, = p for any x  X. Thus T x 

then ([q] \ {p, i }) < 1, 1 coincides with the CI

which yields

p i=1

xi

+

xi

that  p.

However, we have shown that i > 0 for any i  [q] \ [p], and this gives a contradiction

because p  q - 2. Therefore, for any i  [q] \ [p], we have p + i = 1.

Let 1 := , then Claim 2 gives q+1 = . . . = n = 0, Claim 3 gives 1 = . . . = p-1 =

, Claim 4 gives p = 1 - (p - 1), and Claim 5 gives p+1 = . . . = q = p - 1.

Also from Claim 3, we have ([n]) -  = 1, hence:  = (q - p)(p - 1), which gives



=

q-p p(q-p)-1

.

Therefore,

the

original

facet-defining

inequality

T x



1

coincides

with

(q - p)

p-1 i=1

xi

+

(q

-

p

-

1)xp

+

q i=p+1

xi



p(q

- p) - 1.

Note

that

for

the

multi-cover

{{1, . . . , p - 1, p + 1, . . . , q}, {1, . . . , p, q}}, the inequality has the same structure as the

one given in Example 3, and the corresponding MCI is (q - p)

q i=p+1

xi



p(q

-

p)

-

1.

The above discussion concludes the proof.

p-1 i=1

xi

+

(q

-

p

-

1)xp

+

26

A. Del Pia et al.

Appendix D Separation Formulation in Section 5

Let C be a cover-family. From the definition of multi-cover, C is a multi-cover if and only its skeleton S satisfies the property: For any T  SS S, there exists some S  S such that T is comparable with S . Henceforth all skeletons are assumed to have such property.
Now for a given skeleton S := {S1, . . . , Sk} and a fractional solution x~, we consider the following MIP. We let S := ki=1Si and S¯h := S \ Sh for any h  [k].

min t +

i -

(i +

si )x~i

i[n]

i[n]

sS

s.t. t 

si , h  [k]

i[n] sSh

usi + wi  1, si  M usi , i  M wi i  [n]
sS

usi = 1, s  S
i[n]

si  sj + (1 + M )usi - M,

wi =

wih, i  [n]

h[k]

i, j  [n], j > i, s  S, s  (s)

i 

sj + (1 + n|S¯h|M )wih - n|S¯h|M, i  [n], h  [k]

j>i sS¯h

i 

sj + |S¯h|M wih - |S¯h|M, i, j  [n], j < i, h  [k]

sS¯h

(

usi + wi)Aj,i  (bj + 1)hj , h  [k], j  [m]

i[n] sSh

usi + usj+1  1, s = 1, . . . , |S| - 1
j<i

m
hj  1,
j=1

h  [k]

usi  {0, 1}, si  Z, wi, wih, hj  {0, 1}, s  S, i  [n], j  [m], h  [k].

(Sep-S )

Here (s) := {s  S | h  [k], s.t. s  Sh, s / Sh, s > s}. Then, the separation problem of MCIs with skeleton S can be solved exactly using the MIP (Sep-S ).

Theorem 8 Given a TOMKS K. For any given skeleton S and a point x~, there exists a multi-cover C whose skeleton is S and an associated MCI that separates x~ from K if and only if (Sep-S ) admits an optimal value less than 1.

Proof In (Sep-S ), binary usi denotes whether or not the index i of variables corresponds to the index s in the skeleton; si denotes the MCI coefficient of variable xi, when usi = 1; Binary wi denotes whether or not variable index i appears in the intersection of the
multi-cover; i denotes the MCI coefficient of variable xi, when wi = 1; For any h  [k] and j  [m], binary hj denotes whether or not the cover Ch corresponding to the skeleton Sh
violates the j-th knapsack constraint of the problem; t + i[n] i represents the maximum
value of (Ch), h  [k]. Therefore, the associated MCI is represented by the inequality:

(i + si )xi  t +

i - 1.

i[n]

sS

i[n]

Hence the optimal value of (Sep-S ) is strictly less than 1 if and only if the MCI is a separating inequality.

Multi-cover Inequalities for Totally-Ordered Multiple Knapsack Sets

27

Now we verify that the meaning of those variables can be formulated by the constraints
in (Sep-S ). For each index s  S, since it only corresponds to one variable index i  [n], so we have constraint i[n] usi = 1, s  S. Similarly, for each index i  [n], since it either appears in the intersection of the covers, or corresponds to a single index s  S, or is not contained by any cover, so we have constraint sS usi + wi  1, i  [n]. Constraint si  sj + (1 + M )usi - M, j > i, s  S, s  (s) formulates the Step 4 of Algorithm 1, and constraints i  j>i sS¯h sj + (1 + n|S¯h|M )wih - n|S¯h|M, i  [n], h  [k], i 
sS¯h sj + |S¯h|M wih - |S¯h|M, j < i, h  [k] as well as wi = h[k] wih formulate the Step 6 of Algorithm 1. Constraint usi + j<i usj+1  1, s = 1, . . . , |S| - 1 formulates the bijective relation between skeleton and the discrepancy family of multi-cover: if index
i  [n] corresponds to the skeleton index s  S, then for any skeleton index s > s, it only
corresponds to the index j > i. The remaining constraints are easy to interpret.

Appendix E Numerical Results Report

The following two tables present the detailed results for the optimality gap we obtained from solving different linear relaxation problems.

(n, m, seed) LP

MCI

E-MCI L-MCI CI

ECI

LCI

(20, 1, 1)

1.05 0.81

0.58

0.48

0.87

0.59

0.59

(20, 1, 2)

3.7

1.92

0.17

0

2.55

0.82

0.82

(20, 1, 3)

0.87 0.24

0.24

0.22

0.68

0.63

0.63

(20, 1, 4)

1.78 0

0

0

1.00

0.16

0

(20, 1, 5)

6.15 1.06

1.06

0.14

2.79

2.07

2.07

(20, 1, 6)

9.90 5.69

0.22

0

6.47

1.01

1.01

(20, 1, 7)

7.29 0

0

0

0

0

0

(20, 1, 8)

3.06 0.41

0.40

0.29

1.99

0.54

0.54

(20, 1, 9)

1.48 0.65

0

0

0.87

0.49

0.49

(20, 1, 10) 4.03 0

0

0

2.81

0.15

0.15

average

3.93 1.08

0.27

0.11

2.00

0.65

0.63

(20, 2, 1)

3.37 1.79

0.89

0.60

1.83

1.50

0.83

(20, 2, 2)

12.50 7.18

3.16

0

8.68

4.98

0

(20, 2, 3)

1.45 0.27

0.05

0

0.81

0.10

0.08

(20, 2, 4)

3.96 1.66

0.65

0.10

2.79

0.83

0.83

(20, 2, 5)

3.15 1.65

1.39

1.03

2.04

1.65

1.65

(20, 2, 6)

5.43 1.73

0

0

4.34

0

0

(20, 2, 7)

9.63 3.69

0.23

0

6.36

0.67

0.67

(20, 2, 8)

2.49 0.50

0.46

0

1.52

1.06

1.06

(20, 2, 9)

14.64 8.82

2.66

0

10.67

2.83

2.83

(20, 2, 10) 3.45 1.67

0.73

0.41

3.24

3.24

3.24

average

6.01 2.90

1.02

0.21

4.23

1.69

1.12

(20, 3, 1)

5.53 3.27

0

0

3.27

0

0

(20, 3, 2)

4.46 2.88

1.64

0

3.88

3.08

3.08

(20, 3, 3)

25.31 19.53

0

0

19.80

0

0

(20, 3, 4)

3.77 3.03

1.74

1.64

3.60

2.00

2.00

(20, 3, 5)

4.97 2.32

1.46

0

4.12

1.67

1.67

(20, 3, 6)

1.87 0

0

0

0.28

0.12

0.12

(20, 3, 7)

3.72 0.88

0

0

3.15

1.46

1.46

(20, 3, 8)

3.31 1.66

0.41

0

1.96

0.83

0.83

(20, 3, 9)

1.29 0.87

0.44

0

1.08

0.62

0.16

(20, 3, 10) 6.11 4.42

1.58

1.09

5.53

1.90

1.90

average

6.03 3.89

0.73

0.27

4.67

1.17

1.12

28

(n, m, seed)
(30, 1, 1) (30, 1, 2) (30, 1, 3) (30, 1, 4) (30, 1, 5) (30, 1, 6) (30, 1, 7) (30, 1, 8) (30, 1, 9) (30, 1, 10)
average
(30, 2, 1) (30, 2, 2) (30, 2, 3) (30, 2, 4) (30, 2, 5) (30, 2, 6) (30, 2, 7) (30, 2, 8) (30, 2, 9) (30, 2, 10)
average
(30, 3, 1) (30, 3, 2) (30, 3, 3) (30, 3, 4) (30, 3, 5) (30, 3, 6) (30, 3, 7) (30, 3, 8) (30, 3, 9) (30, 3, 10)
average

LP
7.95 2.48 24.75 2.84 1.66 9.45 1.43 3.81 6.20 2.83
6.34
5.73 5.14 9.94 3.02 2.98 4.93 3.40 5.86 3.04 3.59
4.76
3.76 4.13 14.64 1.57 1.09 1.46 0.99 1.23 0.99 1.46
3.13

MCI
5.29 0.91 23.35 1.37 0 6.74 1.27 2.84 4.66 1.34
4.78
4.42 3.25 7.20 0.63 2.46 2.78 2.10 5.06 0 1.61
2.95
2.94 3.26 13.62 1.49 1.00 0 0.88 0.55 0.77 0.53
2.50

E-MCI
0.64 0.20 0.70 1.27 0 1.53 1.17 0.42 0 0
0.59
0.67 3.25 0 0 0 0 1.99 1.35 0 1.61
0.89
1.19 0.37 3.92 1.37 0.60 0 0.11 0 0.41 0.37
0.83

L-MCI
0 0 0 0.81 0 0.77 0.83 0 0 0
0.24
0 0.30 0 0 0 0 0 0.20 0 1.37
0.19
0 0 1.67 0.89 0.37 0 0 0 0.19 0
0.31

CI
6.05 1.38 24.24 1.48 0 7.60 1.31 3.17 5.23 1.91
5.24
4.78 4.05 8.11 1.38 2.46 3.42 2.80 5.45 0.86 1.77
3.51
3.14 3.68 13.98 1.55 1.05 0 0.92 0.80 0.83 0.70
2.67

A. Del Pia et al.

ECI

LCI

0.76

0.76

0.25

0.25

0.70

0.70

1.48

1.48

0

0

1.84

1.84

1.25

1.25

0.47

0.22

0

0

0

0

0.68

0.65

0.69

0.69

3.78

3.78

0

0

0

0

0

0

0

0

2.80

0.74

1.35

1.35

0.58

0

1.73

1.73

1.09

0.83

1.32

0.71

0.38

0.19

4.04

4.04

1.41

1.41

0.61

0.42

0

0

0.11

0.11

0

0

0.51

0.51

0.60

0.60

0.90

0.80

