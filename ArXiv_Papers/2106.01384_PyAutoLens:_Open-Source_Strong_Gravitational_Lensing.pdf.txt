PyAutoLens: Open-Source Strong Gravitational Lensing

DOI: 10.21105/joss.02825
Software · Review · Repository · Archive
Editor: Juanjo Bazán Reviewers:
· @aureliocarnero · @zonca
Submitted: 27 October 2020 Published: 20 February 2021
License Authors of papers retain copyright and release the work under a Creative Commons Attribution 4.0 International License (CC BY 4.0).

James. W. Nightingale1, Richard G. Hayes1, Ashley Kelly1, Aristeidis Amvrosiadis1, Amy Etherington1, Qiuhan He1, Nan Li2, XiaoYue Cao3, Jonathan Frawley4, Shaun Cole1, Andrea Enia5, Carlos S. Frenk1, David R. Harvey6, Ran Li3, Richard J. Massey1, Mattia Negrello7, and Andrew Robertson1
1 Institute for Computational Cosmology, Stockton Rd, Durham DH1 3LE 2 Key Laboratory of Space Astronomy and Technology, National Astronomical Observatories, Chinese Academy of Sciences, Beijing 100101, China 3 National Astronomical Observatories, Chinese Academy of Sciences, 20A Datun Road, Chaoyang District, Beijing 100012, China 4 Advanced Research Computing, Durham University, Durham DH1 3LE 5 Dipartimento di Fisica e Astronomia, Università degli Studi di Bologna, Via Berti Pichat 6/2, I-40127 Bologna, Italy 6 Lorentz Institute, Leiden University, Niels Bohrweg 2, Leiden, NL-2333 CA, The Netherlands 7 School of Physics and Astronomy, Cardiff University, The Parade, Cardiff CF24 3AA, UK
Summary
Strong gravitational lensing, which can make a background source galaxy appears multiple times due to its light rays being deflected by the mass of one or more foreground lens galaxies, provides astronomers with a powerful tool to study dark matter, cosmology and the most distant Universe. PyAutoLens is an open-source Python 3.6+ package for strong gravitational lensing, with core features including fully automated strong lens modeling of galaxies and galaxy clusters, support for direct imaging and interferometer datasets and comprehensive tools for simulating samples of strong lenses. The API allows users to perform ray-tracing by using analytic light and mass profiles to build strong lens systems. Accompanying PyAutoLens is the autolens workspace, which includes example scripts, lens datasets and the HowToLens lectures in Jupyter notebook format which introduce non-experts to strong lensing using PyAutoLens. Readers can try PyAutoLens right now by going to the introduction Jupyter notebook on Binder or checkout the readthedocs for a complete overview of PyAutoLens's features.
Background

When two galaxies are aligned down the line-of-sight to Earth, light rays from the background galaxy are deflected by the intervening mass of one or more foreground galaxies. Sometimes its light is fully bent around the foreground galaxies, traversing multiple paths to the Earth, meaning that the background galaxy is observed multiple times. This alignment of galaxies is called a strong gravitational lens, an example of which, SLACS1430+4105, is shown in the image below. The massive elliptical lens galaxy can be seen in the centre of the left panel, surrounded by a multiply imaged source galaxy whose light has been distorted into an Einstein ring. The central panel shows a PyAutoLens reconstruction of the lensed source's light, where the foreground lens's light was simultaneously fitted for and subtracted to reveal the source. The right panel shows a pixelized reconstruction of the source's unlensed light distribution performed by PyAutoLens, which is created using a model of the lens galaxy's mass to trace backwards how the source's light is gravitationally lensed.

Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 1
//doi.org/10.21105/joss.02825

Figure 1: Hubble Space Telescope imaging of the strong lens SLACSJ1430+1405 (left column), a fit to its lensed source galaxy (middle column) and unlensed source reconstruction (right column) using PyAutoLens.
Strong lensing provides astronomers with an invaluable tool to study a diverse range of topics. Mass modeling of strong lenses has quantified the distribution of stars (Koopmans et al., 2009) (Sonnenfeld et al., 2015) (Treu et al., 2009) (Nightingale et al., 2019) and invisible dark matter (Vegetti et al., 2014) of galaxies. The source galaxy is highly magnified and reconstruction of its light allows a view of fainter or more distant objects than would otherwise be possible (Dye et al., 2014) (Enia et al., 2018). Strong lensing is a competitive test of cosmological models, for example the expansion rate of the Universe can be inferred from the `time-delay' between different image paths to the same distant quasar (Suyu et al., 2017). Strong lensing of galaxy clusters has also made many contributions to all these topics (Jullo et al., 2010) (Richard et al., 2014) (Atek et al., 2015).
Statement of Need
The past decade has seen the discovery of many hundreds of galaxy-scale and cluster-scale lenses, with high quality imaging (Bolton et al., 2012), interferometer (Negrello et al., 2014) (Enia et al., 2018) and spectroscopy (Czoske et al., 2012) datasets now available. Historically, the modeling of a strong lens is a time-intensive process that requires significant human intervention to perform, restricting the scope and size of the scientific analysis. In the next decade of order of one hundred thousand strong lenses will be discovered by surveys such as Euclid, LSST and SKA (Collett, 2015), demanding a widely available and automated approach for strong lens analysis. PyAutoLens aims to meet this need, by making strong lens analysis accessible to the wider Astronomy community and enabling the automated analysis of large samples of strong lenses.
Software API and Features
A gravitational lens system can be quickly assembled from Python objects which provide abstract data representations of the different components of a strong lens. A Galaxy object contains one or more LightProfile's and MassProfile's, which represent its two dimensional distribution of starlight and mass. Galaxy's lie at a particular distance (redshift) from the observer, and are grouped into Plane's. Raytracing through multiple Planes is achieved by passing them to a Tracer with an astropy Cosmology. By passing any of these objects a Grid2D object strong lens quantities can be computed, including multi-plane ray-tracing sightlines (McCully et al., 2014). All of these objects are extensible, making it straightforward to compose highly customized lensing system. Ray-tracing calculations are optimized using the packages NumPy (van der Walt et al., 2011), numba (Lam et al., 2015) and pyquad (Kelly, 2020).
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 2
//doi.org/10.21105/joss.02825

To perform lens modeling, PyAutoLens adopts the probabilistic programming language Py AutoFit (https://github.com/rhayes777/PyAutoFit). PyAutoFit allows users to compose a lens model from LightProfile, MassProfile and Galaxy objects, customize the model parameterization and fit it to data via a NonLinearSearch (e.g., dynesty (Speagle, 2020), emcee (Foreman-Mackey et al., 2013), PySwarms (Miranda, 2018)). By composing a lens model with a Pixelization and Regularization object, the background source's light is reconstructed using a rectangular grid or Voronoi mesh that accounts for irregular galaxy morphologies. Lensed quasar and supernovae datasets can be fitted using a PointSource, which uses their observed positions, flux-ratios and time-delays to fit the lens model. Strong lensing clusters consisting of any number of lens galaxies can also be analysed with PyAutoL ens using these objects.
Automated lens modeling uses PyAutoFit's non-linear search chaining feature, which breaks the model-fit into a chained sequence of non-linear searches. These fits pass information gained about simpler lens models fitted by earlier searches to subsequent searches, which fit progressively more complex models. By granularizing the model-fitting procedure, automated pipelines that fit complex lens models without human intervention can be carefully crafted, with example pipelines found on the autolens workspace. To ensure the analysis and interpretation of fits to large lens datasets is feasible, PyAutoFit's database tools write lens modeling results to a relational database which can be loaded from hard-disk to a Python script or Jupyter notebook. This uses memory-light Python generators, ensuring it is practical for thousands of lenses.
PyAutoLens includes a comprehensive visualization library for the analysis of both direct imaging and submm / radio interferometer datasets, tools for preprocessing data to formats suited to lens analysis and options to include effects like the telescope optics and background sky subtraction in the model-fit. Interferometer analysis is performed directly on the observed visibilities in their native Fourier space, circumventing issues associated with the incomplete sampling of the uv-plane that give rise to artefacts that can bias the inferred mass model and source reconstruction in real-space. To make feasible the analysis of millions of visibilities, PyAutoLens uses PyNUFFT (Lin, 2018) to fit the visibilities via a non-uniform fast Fourier transform and PyLops (Ravasi & Vasconcelos, 2019) to express the memory-intensive linear algebra calculations as efficient linear operators (Powell et al., 2020). Creating realistic simulations of imaging and interferometer strong lensing datasets is possible, as performed by (Alexander et al., 2019) (Hermans et al., 2019) who used PyAutoLens to train neural networks to detect strong lenses.
Performance
The analysis of direct imaging datasets and interferometer datasets (up to of order 1 million visibilities) are both feasible on hardware with at least 4GB of RAM. The time it takes to perform lens modeling with PyAutoLens is highly variable and depends on the size of the dataset being analysed and complexity of the model being fitted. They can vary from minutes to thousands of CPU hours. The run-times section on readthedocs provides graphs showing the performance of the latest release of PyAutoLens and a calculator for estimating how long a lens model fit may take. For large jobs we recommend users install PyAutoLens on a HPC cluster and documentation is provided on how to set this up.
Workspace and HowToLens Tutorials
PyAutoLens is distributed with the autolens workspace, which contains example scripts for modeling and simulating strong lenses and tutorials on how to preprocess imaging and interferometer datasets before a PyAutoLens analysis. Also included are the HowToLens tutorials,
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 3
//doi.org/10.21105/joss.02825

a five chapter lecture series composed of over 30 Jupyter notebooks aimed at non-experts, introducing them to strong gravitational lensing, Bayesian inference and teaching them how to use PyAutoLens for their scientific study. The lectures are available on our Binder and may therefore be taken without a local PyAutoLens installation.
Software Citations
PyAutoLens is written in Python 3.6+ (Van Rossum & Drake, 2009) and uses the following software packages:
· Astropy (Astropy Collaboration et al., 2013) (Price-Whelan et al., 2018) · COLOSSUS (Diemer, 2018) · corner.py (Foreman-Mackey, 2016) · dynesty (Speagle, 2020) · emcee (Foreman-Mackey et al., 2013) · Matplotlib (Hunter, 2007) · numba (Lam et al., 2015) · NumPy (van der Walt et al., 2011) · PyAutoFit (Nightingale et al., 2021) · PyLops (Ravasi & Vasconcelos, 2019) · PyMultiNest (Buchner et al., 2014) (Feroz et al., 2009) · PyNUFFT (Lin, 2018) · pyprojroot (https://github.com/chendaniely/pyprojroot) · pyquad (Kelly, 2020) · PySwarms (Miranda, 2018) · scikit-image (Van der Walt et al., 2014) · scikit-learn (Pedregosa et al., 2011) · Scipy (Virtanen et al., 2020)
Related Software
· AutoLens (Nightingale & Dye, 2015) (Nightingale et al., 2018) · gravlens http://www.physics.rutgers.edu/~keeton/gravlens/manual.pdf · lenstronomy https://github.com/sibirrer/lenstronomy (Birrer & Amara, 2018) · visilens https://github.com/jspilker/visilens (Spilker et al., 2016)
Acknowledgements
JWN and RJM are supported by the UK Space Agency, through grant ST/V001582/1, and by InnovateUK through grant TS/V002856/1. RGH is supported by STFC Opportunities grant ST/T002565/1. QH, CSF and SMC are supported by ERC Advanced In-vestigator grant, DMIDAS [GA 786910] and also by the STFCConsolidated Grant for Astronomy at Durham [grant numbersST/F001166/1, ST/I00162X/1,ST/P000541/1]. RJM is supported by a Royal Society University Research Fellowship. DH acknowledges support by the ITP Delta foundation. AR is supported bythe ERC Horizon2020 project `EWC' (award AMD-776247-6). MN has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement no. 707601. This work used the DiRAC@Durham facility managed by the Institute for Computational Cosmology on behalf of the STFC DiRAC HPC Facility (www.dirac.ac.uk). The equipment was funded by BEIS
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 4
//doi.org/10.21105/joss.02825

capital funding via STFC capital grants ST/K00042X/1, ST/P002293/1, ST/R002371/1 and ST/S002502/1, Durham University and STFC operations grant ST/R000832/1. DiRAC is part of the National e-Infrastructure.
References
Alexander, S., Bramburger, J. J., & McDonough, E. (2019). Dark disk substructure and superfluid dark matter. Physics Letters, Section B: Nuclear, Elementary Particle and High-Energy Physics, 797, 1­7. https://doi.org/10.1016/j.physletb.2019.134871
Astropy Collaboration, Robitaille, T. P., Tollerud, E. J., Greenfield, P., Droettboom, M., Bray, E., Aldcroft, T., Davis, M., Ginsburg, A., Price-Whelan, A. M., Kerzendorf, W. E., Conley, A., Crighton, N., Barbary, K., Muna, D., Ferguson, H., Grollier, F., Parikh, M. M., Nair, P. H., ... Streicher, O. (2013). Astropy: A community Python package for astronomy. 558, A33. https://doi.org/10.1051/0004-6361/201322068
Atek, H., Richard, J., Kneib, J. P., Jauzac, M., Schaerer, D., Clement, B., Limousin, M., Jullo, E., Natarajan, P., Egami, E., & Ebeling, H. (2015). New constraints on the faint end of the UV luminosity function at z  7-8 using the gravitational lensing of the hubble frontier fields cluster A2744. Astrophysical Journal, 800(1). https://doi.org/10.1088/ 0004-637X/800/1/18
Birrer, S., & Amara, A. (2018). lenstronomy: Multi-purpose gravitational lens modelling software package. Physics of the Dark Universe, 22, 189­201. https://doi.org/10.1016/ j.dark.2018.11.002
Bolton, A. S., Brownstein, J. R., Kochanek, C. S., Shu, Y., Schlegel, D. J., Eisenstein, D. J., Wake, D. A., Connolly, N., Maraston, C., Arneson, R. A., & Weaver, B. A. (2012). The BOSS emission-line lens survey. II. Investigating mass-density profile evolution in the SLACS+BELLS strong gravitational lens sample. Astrophysical Journal, 757(1), 82. https://doi.org/10.1088/0004-637X/757/1/82
Buchner, J., Georgakakis, A., Nandra, K., Hsu, L., Rangel, C., Brightman, M., Merloni, A., Salvato, M., Donley, J., & Kocevski, D. (2014). X-ray spectral modelling of the AGN obscuring region in the CDFS: Bayesian model selection and catalogue. Astronomy and Astrophysics, 564, A125. https://doi.org/10.1051/0004-6361/201322971
Collett, T. E. (2015). The population of galaxy-galaxy strong lenses in forthcoming optical imaging surveys. Astrophysical Journal, 811(1), 20. https://doi.org/10.1088/0004-637X/ 811/1/20
Czoske, O., Barnabè, M., Koopmans, L. V. E., Treu, T., & Bolton, A. S. (2012). Twodimensional kinematics of SLACS lenses - IV. The complete VLT-VIMOS data set. Monthly Notices of the Royal Astronomical Society, 419(1), 656­668. https://doi.org/10.1111/j. 1365-2966.2011.19726.x
Diemer, B. (2018). COLOSSUS: A Python Toolkit for Cosmology, Large-scale Structure, and Dark Matter Halos. The Astrophysical Journal Supplement Series, 239(2), 35. https: //doi.org/10.3847/1538-4365/aaee8c
Dye, S., Negrello, M., Hopwood, R., Nightingale, J. W., Bussmann, R. S., Amber, S., Bourne, N., Cooray, A., Dariush, A., Dunne, L., Eales, S. A., Gonzalez-Nuevo, J., Ibar, E., Ivison, R. J., Maddox, S., Valiante, E., & Smith, M. (2014). Herschel*-ATLAS: Modelling the first strong gravitational lenses. Monthly Notices of the Royal Astronomical Society, 440(3), 2013­2025. https://doi.org/10.1093/mnras/stu305
Enia, A., Negrello, M., Gurwell, M., Dye, S., Rodighiero, G., Massardi, M., De Zotti, G., Franceschini, A., Cooray, A., Werf, P. van der, Birkinshaw, M., Michalowski, M. J., &
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 5
//doi.org/10.21105/joss.02825

Oteo, I. (2018). The Herschel-ATLAS: Magnifications and physical sizes of 500-µmselected strongly lensed galaxies. Monthly Notices of the Royal Astronomical Society, 475(3), 3467­3484. https://doi.org/10.1093/mnras/sty021
Feroz, F., Hobson, M. P., & Bridges, M. (2009). MultiNest: An efficient and robust Bayesian inference tool for cosmology and particle physics. Monthly Notices of the Royal Astronomical Society, 398(4), 1601­1614. https://doi.org/10.1111/j.1365-2966.2009.14548.x
Foreman-Mackey, D. (2016). Corner.py: Scatterplot matrices in python. The Journal of Open Source Software, 1(2), 24. https://doi.org/10.21105/joss.00024
Foreman-Mackey, D., Hogg, D. W., Lang, D., & Goodman, J. (2013). emcee : The MCMC Hammer. Publications of the Astronomical Society of the Pacific, 125(925), 306­312. https://doi.org/10.1086/670067
Hermans, J., Begy, V., & Louppe, G. (2019). Likelihood-free MCMC with Amortized Approximate Likelihood Ratios. i. http://arxiv.org/abs/1903.04057
Hunter, J. D. (2007). Matplotlib: A 2D graphics environment. Computing in Science & Engineering, 9(3), 90­95. https://doi.org/10.1109/MCSE.2007.55
Jullo, E., Natarajan, P., Kneib, J. P., D'Aloisio, A., Limousin, M., Richard, J., & Schimd, C. (2010). Cosmological constraints from strong gravitational lensing in clusters of galaxies. Science, 329(5994), 924­927. https://doi.org/10.1126/science.1185759
Kelly, A. J. (2020). Pyquad (Version 0.6.4) [Computer software]. Zenodo. https://doi.org/ 10.5281/zenodo.3936959
Koopmans, L. V. E., Bolton, A., Treu, T., Czoske, O., Auger, M. W., Barnabè, M., Vegetti, S., Gavazzi, R., Moustakas, L. A., & Burles, S. (2009). The structure and dynamics of massive early-type galaxies: On homology, isothermality, and isotropy inside one effective radius. Astrophysical Journal, 703(1 PART 2), L51­L54. https://doi.org/10.1088/0004-637X/ 703/1/L51
Lam, S. K., Pitrou, A., & Seibert, S. (2015). Numba: a LLVM-based Python JIT compiler. Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC - LLVM '15, 1­6. https://doi.org/10.1145/2833157.2833162
Lin, J. M. (2018). Python non-uniform fast fourier transform (PyNUFFT): An accelerated non-cartesian MRI package on a heterogeneous platform (CPU/GPU). Journal of Imaging, 4(3), 1­22. https://doi.org/10.3390/jimaging4030051
McCully, C., Keeton, C. R., Wong, K. C., & Zabludoff, A. I. (2014). A new hybrid framework to efficiently model lines of sight to gravitational lenses. Monthly Notices of the Royal Astronomical Society, 443(4), 3631­3642. https://doi.org/10.1093/mnras/stu1316
Miranda, L. J. V. (2018). PySwarms, a research-toolkit for Particle Swarm Optimization in Python. Journal of Open Source Software, 3. https://doi.org/10.21105/joss.00433
Negrello, M., Hopwood, R., Dye, S., Cunha, E. da, Serjeant, S., Fritz, J., Rowlands, K., Fleuren, S., Bussmann, R. S., Cooray, A., Dannerbauer, H., Gonzalez-Nuevo, J., Lapi, A., Omont, A., Amber, S., Auld, R., Baes, M., Buttiglione, S., Cava, A., ... Wardlow, J. (2014). Herschel *-ATLAS: Deep HST/WFC3 imaging of strongly lensed submillimetre galaxies. Monthly Notices of the Royal Astronomical Society, 440(3), 1999­2012. https: //doi.org/10.1093/mnras/stu413
Nightingale, J. W., & Dye, S. (2015). Adaptive semi-linear inversion of strong gravitational lens imaging. Monthly Notices of the Royal Astronomical Society, 452(3), 2940­2959. https://doi.org/10.1093/mnras/stv1455
Nightingale, J. W., Dye, S., & Massey, R. J. (2018). AutoLens: Automated modeling of a strong lens's light, mass, and source. Monthly Notices of the Royal Astronomical Society, 478(4), 4738­4784. https://doi.org/10.1093/mnras/sty1264
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 6
//doi.org/10.21105/joss.02825

Nightingale, J. W., Hayes, R. G., & Griffiths, M. (2021). `PyAutoFit`: A classy probabilistic programming language for model composition and fitting. Journal of Open Source Software, 6(58), 2550. https://doi.org/10.21105/joss.02550
Nightingale, J. W., Massey, R. J., Harvey, D. R., Cooper, A. P., Etherington, A., Tam, S. I., & Hayes, R. G. (2019). Galaxy structure with strong gravitational lensing: Decomposing the internal mass distribution of massive elliptical galaxies. Monthly Notices of the Royal Astronomical Society, 489(2), 2049­2068. https://doi.org/10.1093/mnras/stz2220
Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., Cournapeau, D., Brucher, M., Perrot, M., & Duchesnay, E. (2011). Scikit-learn: Machine learning in Python. Journal of Machine Learning Research, 12, 2825­2830.
Powell, D., Vegetti, S., McKean, J. P., Spingola, C., Rizzo, F., & Stacey, H. R. (2020). A novel approach to visibility-space modelling of interferometric gravitational lens observations at high angular resolution. Monthly Notices of the Royal Astronomical Society, 501(1), 515­ 530. https://doi.org/10.1093/mnras/staa2740
Price-Whelan, A. M., Sipcz, B. M., Günther, H. M., Lim, P. L., Crawford, S. M., Conseil, S., Shupe, D. L., Craig, M. W., Dencheva, N., Ginsburg, A., VanderPlas, J. T., Bradley, L. D., Pérez-Suárez, D., de Val-Borro, M., Paper Contributors, (Primary., Aldcroft, T. L., Cruz, K. L., Robitaille, T. P., Tollerud, E. J., ... Contributors, (Astropy. (2018). The Astropy Project: Building an Open-science Project and Status of the v2.0 Core Package. 156, 123. https://doi.org/10.3847/1538-3881/aabc4f
Ravasi, M., & Vasconcelos, I. (2019). PyLops ­ A Linear-Operator Python Library for large scale optimization. http://arxiv.org/abs/1907.12349
Richard, J., Jauzac, M., Limousin, M., Jullo, E., Clément, B., Ebeling, H., Kneib, J. P., Atek, H., Natarajan, P., Egami, E., Livermore, R., & Bower, R. (2014). Mass and magnification maps for the hubble space telescope frontier fields clusters: Implications for high-redshift studies. Monthly Notices of the Royal Astronomical Society, 444(1), 268­289. https: //doi.org/10.1093/mnras/stu1395
Sonnenfeld, A., Treu, T., Marshall, P. J., Suyu, S. H., Gavazzi, R., Auger, M. W., & Nipoti, C. (2015). The sl2s galaxy-scale lens sample. V. Dark matter halos and stellar imf of massive early-type galaxies out to redshift 0.8. Astrophysical Journal, 800(2), 94. https://doi.org/10.1088/0004-637X/800/2/94
Speagle, J. S. (2020). dynesty: a dynamic nested sampling package for estimating Bayesian posteriors and evidences. Monthly Notices of the Royal Astronomical Society, 493(3), 3132­3158. https://doi.org/10.1093/mnras/staa278
Spilker, J. S., Marrone, D. P., Aravena, M., Béthermin, M., Bothwell, M. S., Carlstrom, J. E., Chapman, S. C., Crawford, T. M., de Breuck, C., Fassnacht, C. D., Gonzalez, A. H., Greve, T. R., Hezaveh, Y., Litke, K., Ma, J., Malkan, M., Rotermund, K. M., Strandet, M., Vieira, J. D., ... Welikala, N. (2016). ALMA Imaging and Gravitational Lens Models of South Pole TelescopeSelected Dusty, Star-Forming Galaxies at High Redshifts. 826, 112. https://doi.org/10.3847/0004-637X/826/2/112
Suyu, S. H., Bonvin, V., Courbin, F., Fassnacht, C. D., Rusu, C. E., Sluse, D., Treu, T., Wong, K. C., Auger, M. W., Ding, X., Hilbert, S., Marshall, P. J., Rumbaugh, N., Sonnenfeld, A., Tewes, M., Tihhonova, O., Agnello, A., Blandford, R. D., Chen, G. C. F., ... Spiniello, C. (2017). H0LiCOW - I. H0 Lenses in COSMOGRAIL's Wellspring: Program overview. Monthly Notices of the Royal Astronomical Society, 468(3), 2590­2604. https://doi.org/ 10.1093/mnras/stx483
Treu, T., Gavazzi, R., Gorecki, A., Marshall, P. J., Koopmans, L. V. E., Bolton, A. S., Moustakas, L. A., & Burles, S. (2009). The slacs survey. VIII. the relation between
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 7
//doi.org/10.21105/joss.02825

environment and internal structure of early-type galaxies. Astrophysical Journal, 690(1), 670­682. https://doi.org/10.1088/0004-637X/690/1/670 van der Walt, S., Colbert, S. C., & Varoquaux, G. (2011). The NumPy Array2D: A structure for efficient numerical computation. Computing in Science Engineering, 13(2), 22­30. https://doi.org/10.1109/MCSE.2011.37 Van der Walt, S., Schönberger, J. L., Nunez-Iglesias, J., Boulogne, F., Warner, J. D., Yager, N., Gouillart, E., & Yu, T. (2014). Scikit-image: Image processing in python. PeerJ, 2, e453. Van Rossum, G., & Drake, F. L. (2009). Python 3 reference manual. CreateSpace. ISBN: 1441412697 Vegetti, S., Koopmans, L. V. E., Auger, M. W., Treu, T., & Bolton, A. S. (2014). Inference of the cold dark matter substructure mass function at z = 0.2 using strong gravitational lenses. Monthly Notices of the Royal Astronomical Society, 442(3), 2017­2035. https: //doi.org/10.1093/mnras/stu943 Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M., Reddy, T., Cournapeau, D., Burovski, E., Peterson, P., Weckesser, W., Bright, J., van der Walt, S. J., Brett, M., Wilson, J., Jarrod Millman, K., Mayorov, N., Nelson, A. R. J., Jones, E., Kern, R., Larson, E., ... Contributors, S. 1. 0. (2020). SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. Nature Methods, 17, 261­272. https://doi.org/10.1038/ s41592-019-0686-2
Nightingale et al., (2021). PyAutoLens: Open-Source Strong Gravitational Lensing. Journal of Open Source Software, 6(58), 2825. https: 8
//doi.org/10.21105/joss.02825

