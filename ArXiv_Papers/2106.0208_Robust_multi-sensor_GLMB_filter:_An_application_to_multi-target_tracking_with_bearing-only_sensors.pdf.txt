arXiv:2106.00208v1 [eess.SP] 1 Jun 2021

Robust multi-sensor GLMB filter: An application to multi-target
tracking with bearing-only sensors
Cong-Thanh Do1,*, Tran Thien Dat Nguyen1, and Hoa Van Nguyen2
1School of Electrical Engineering, Computing, and Mathematical Sciences, Curtin University, Bentley, WA 6102, Australia
2School of Computer Science, The University of Adelaide, Adelaide, SA 5005, Australia *Corresponding author, thanh.docong@postgrad.curtin.edu.au; thanhdc@tnu.edu.vn
June 2, 2021
Abstract
This paper proposes an efficient and robust algorithm to estimate target trajectories via multi-sensor bearing-only measurements with unknown target detection profiles and clutter rates. In particular, we propose to combine the multi-sensor Generalized Labeled Multi-Bernoulli (MS-GLMB) filter to estimate target trajectories and robust Cardinalized Probability Hypothesis Density (CPHD) filters to estimate the clutter rates. Experimental results show that the proposed robust filter exhibits near-optimal performance in the sense that it is comparable to the optimal MS-GLMB operating with the true clutter rate. More importantly, it outperforms other studied filters when the detection profile and clutter rate are unknown an time-variant. This is attributed to the ability of the robust filter to learn the background parameters on-the-fly.
Keywords-- Multi-sensor GLMB filter; robust tracking; bearing-only sensors; bootstrapping method; Labeled Random Finite Sets.
1 Introduction
Bearing-only tracking is the problem of estimating the (multi-)target trajectories with only angle or direction of arrival measurements [1]. This problem has been widely studied in both defence and civil applications, such as tracking missiles [2], under-water surveillance [3], autonomous navigation [4], via the deployments of airborne radars, sonars, and other types of the passive surveillance system. However, due to the intrinsic nonlinearity and poor observability [5, 6], it is not always possible to construct a (proper) tractable filter [7, 8] with this type of measurement. The reason is, theoretically, it is required that, for fully observing the kinematic state of the target, the motion of the sensor platform must have at least one order higher than that of the target's motion [9, 1]. To increase observability, the strategy of integrating multiple sensors has been proposed in [10, 11]. The multi-sensor framework allows the reduction of the system uncertainty and enhances the capability of the tracking algorithms to resolve the ambiguity of the target states. In addition to the mentioned technical challenges, the multi-target tracking solution, in general, is also subjected to uncertainty induced by noise-corrupted measurements, false alarms, miss-detection, target appearances, and disappearances. Hence, the problem of tracking multiple targets using multiple bearing-only sensors still captivates the tracking community.
Currently, there are several techniques for solving the multi-target tracking problem. These techniques can be categorized into three main paradigms: the Joint Probabilistic Data Association (JPDA) [12], Multiple Hypotheses Tracking (MHT) [13], and Random Finite Set (RFS) [14]. Among those, the RFS framework models the set of target states as a random variable instead of estimating measurement-to-track association hypothesis [15]. This formulation then allows the application of Bayesian recursion to produce the multi-target posterior density.
In general, propagating a multi-target density is computationally expensive. Various filters only propagate the first moment of the multi-target density in the RFS paradigm, such as the Probability Hypothesis Density (PHD) filters [16, 17, 18]. The recent introduction of labeled RFS [19] led to the development of filters capable of estimating the trajectories, such as the Generalized Labeled Multi-Bernoulli (GLMB) filters [20, 21, 22], and Labeled MultiBernoulli (LMB) approximation [23]. The scalability of this approach has recently been demonstrated via its ability to track over one million targets [24]. Furthermore, labeled RFS filters can also be formulated to jointly track the targets and their ancestral information via a spawning model as in [25, 26]. Today, RFS-based filters have been applied to many fields ranging from space debris tracking [27, 28], crowd surveillance [29, 30], automation [31, 26] to cell tracking [32, 33].
Multi-sensor setting frequently appears in multi-target tracking applications. There are two architectures for multi-sensor multi-target tracking: distributed (decentralized) and centralized. In the distributed setting, information of targets is processed by individual sensors then fused to form a posterior multi-target density. However, the correlation between the fused (from distributed sensor nodes) and the actual multi-sensor updated densities needs to be strong to warrant consistent tracking capability. In the RFS framework, the decentralized multi-sensor tracking problem has been addressed in [34, 35] with PHD/CPHD filter, [36, 37, 38] with Multi-Bernoulli filter, and in [39, 40, 41] with LMB/GLMB filter. In the centralized setting, measurements from all sensors are delivered to a central node for direct computation of the multi-target density. Solutions for this problem have been developed via PHD, CPHD filters in [42, 43], Multi-Bernoulli filter in [44], or Labeled Multi-Bernoulli filter in [45, 46, 47, 48]. The iterated corrector method, which sequentially performs update overall sensors, is also widely used in practice [42, 49]. Notably, the recent multi-sensor GLMB (MS-GLMB) filter [22] efficiently performs joint sensors update with linear complexity in the total number of measurements across the sensors and a quadratic complexity to the number of hypothesized targets.
Information of targets detection probability and clutter rate (background information) influences the performance of multi-target filters while it is usually assumed to be known and constant. However, this assumption is strong and
1

Figure 1: Evolution of the labeled multi-target state over time.

often does not hold in practice since these parameters are often time-varying in practical applications. Furthermore, the problem is worsened in multi-sensor tracking as background information must be provided for each sensor. For single-sensor systems, this problem has been addressed in [50, 51, 52, 53]. However, it has not yet been tackled in the multi-sensor multi-target tracking framework.
This paper introduces a robust filter capable of estimating target trajectories with a centralized multi-sensor setting in an unknown background environment. Our filter combines multiple independent, robust CPHD filters [52] to estimate clutter rate (each filter estimates the clutter rate of one sensor) and an efficient MS-GLMB [22] to handle the main filtering process. The detection probability of a target is augmented to its state for joint estimation [53].
The structure of this paper is as follows. In Section 2, we start with providing readers background information on multi-target tracking in the RFS paradigm. In Section 3, we detail the formulation and implementation of our robust filter. Finally, in Section 4, we demonstrate the performance of our filter in different tracking scenarios. Although this filter can handle different types of sensors, we focus on showing its performance with bearing-only sensors in this work.

2 Background
This section briefly summarizes some fundamental concepts related to multi-target tracking in the RFS framework.

2.1 The labeled RFS

An RFS is a random variable defined on the space of sets with a finite number of elements. The elements of an RFS

are random and unordered, which allows it to describe the multi-target state naturally. A labeled RFS is essentially

the RFS, in which each element has a distinct label [19]. This framework allows the joint modelling of the target

state and its identities; hence, filters based on labeled RFS can provide trajectories estimation. For consistency, we

adhere to the following notation scheme from [19] throughout our discussion. Specifically, the inner product of two

functions f and g concerning their variable x is defined as xf, gy fi  f pxq g pxq dx. For a given set S, the class of all

finite subsets of S is denoted by FpSq. The Kronecker delta function with arbitrary argument (integers, vectors, sets,

etc.) is given by,

#

S pXq " 1, X " S .

(1)

0, X  S

The indicator function of the set S is defined as follows,

#

1S pXq " 1, X  S .

(2)

0, otherwise

For a finite set X, the number of elements of X, or its cardinality, is denoted by |X|, and the set exponential is defined

as

rf

p¨qsX

"


xPX

f

pxq ,

with

fH

"

1.

We

denote

the

single-target

state

by

lower-case

letters

and

the

multi-target

states by upper-case letters, i.e. x and X. We differentiate the unlabeled target state with the labeled version by

standard-faced and bold-faced letters, i.e. X and X. Blackboard upper case letters (e.g. X, L, Z) are used to denote

spaces.

Each labeled target state x contains an unlabeled kinematic state x P X augmented with a unique label P L,

hence x " px, q P X ^ L. Each distinct label P L at time k consists of two components: time of birth, tb  k, and

a unique index i to differentiate targets born at the same time. We use subscript `+' to denote the next time step.

The birth labels at time k ` 1 belong to the label space B` " tpk ` 1, iq : i P Nu, and hence L X B` " H. The labels space at time k ` 1 is then L` " L Z B` (Z denotes the disjoint union operator).

The distinct label indicator [19] is given as,

 pXq " |X| p|L pXq|q ,

(3)

where L : X ^ L Ñ L is a mapping from a labeled RFS to the labels, which satisfies the projection Lpx, q " . A labeled RFS X has distinct labels if  pXq " 1.
The integral of a function f : F pX ^ Lq Ñ R is given by [19]



8
ÿ

1

 ÿ

f pXq X " i! i"0 p 1,..., iqPLi

f ptpx1,
Xi

1q , . . . , pxi,

iquqd px1, . . . , xiq .

(4)

2

2.2 RFS multi-target filtering

2.2.1 The Bayesian recursion

In Bayesian paradigm, given the multi-target transition density f` pX`|Xq and the multi-target likelihood function g pZ`|X`q, the (labeled) multi-target probability density function1 is propagated via the Bayesian recursion as [14],



 pX`q " f` pX`|Xq  pXq X,

(5)

`

pX`|Z`q

"

g` pZ`|X`q  pX`q  g` pZ`|Xq  pXq X

,

(6)

where the integrals are the set integral defined in Eq. (4). In the above expression, the dependence on previous

measurements of the prior density is omitted for compactness.

2.3 The multi-target transition model

For a current multi-target state X  X ^ L, at the next time step, a target px, q P X either continues to exist in the sensor field of view with the probability pSpx, q, or it disappears with the probability qSpx, q " 1 ´ pSpx, q. If it exists, its state is predicted via a single target transition density of the form fSpx`|x, q p `q where fSpx`|x, q is the spatial transition density and  p `q implies the old label is retained. The multi-target transition density from set X to the next time step surviving targets set XS` can be written as [19],

fS` pXS`|Xq "  pXS`q  pXq 1LpXq pL pXS`qq rS` pXS`|¨qsX ,

(7)

where

ÿ

"

i

S` pXS`|x, q "

 p `q pS px, q fS` px`|x, q ` 1 ´ 1LpXS`q p q qS px, q .

(8)

px`, q ` PXS`

In addition, new targets can also spontaneously appear in the tracking region at each time step. Let XB` denote

the multi-target state of those newborn targets with LpXB`q P B`, the set of new births can be modeled with an

LMB RFS as [19, 20],

fB` pXB`q "  pXB`q B pL pXB`qq rpB`sXB` ,

(9)

where

B pLq " r1 ´ rB`sB`´L 1B` pLq rrB`sL ,

(10)

rB`p q is the birth probability of target labeled and pB`px, q is its spatial distribution.

Due to the independence between surviving and new-born targets, the multi-target transition kernel can be

written as,

f` pX`|Xq " fS` pXS`|Xq fB` pXB`q ,

(11)

where XS` " X` X pX ^ Lq, and XB` " X` X pX ^ B`q.

2.3.1 The single-sensor multi-target likelihood model

At time k, each target px, q P X can generate a measurement z P Z with the detection probability of pDpx, q or it is misdetected with the probability qDpx, q " 1 ´ pDpx, q. The likelihood of target px, q generates a measurement z is gpz|x, q. In addition, due to sensor imperfections and environmental conditions, clutter can also be included in the observation set. The clutter set is modelled with Poisson RFS, with the state of clutter targets is assumed to be uniformly distributed over the state space. Denoting Z as the measurement space, given the set Z " z1:|Z| P Z and the multi-target state X at the current time step k, the multi-target likelihood function is given as [19]

ÿ gpZ |X q9

 Zpp qqpx, q,

PpLpXqq px, qX

(12)

where  is the set of all positive 1-1 labels to measurement indices association maps ( : L Ñ t0 : |Z|u) with the zero measurement index indicates miss-detection. The positive 1-1 condition implies each measurement can only be assigned to at most one label. The function  is given by

pZp qqpx,

q

"

# PD px, qgpzp q|x,
pzpp qq

q,

1 ´ PDpx, q,

p q  0 ,
p q " 0,

(13)

where  is the Poisson clutter intensity.

2.4 The Generalized Labeled Multi-Bernoulli (GLMB) filter

GLMB filter is an exact solution for the Bayes optimal multi-target tracking problem [55]. Given its formulation on

labeled RFS, GLMB filter estimates target states and their labels which, in turn, allows the estimation of trajectories.

The filter first assumes the probability density function of the multi-target state at time k be given in the GLMB

form, i.e.

 pXq "  pXq

ÿ

pI,qI pL pXqq "ppqiX ,

(14)

pI,qPF pLq^

where I represents a set of labels, and  P  represents a history of association maps up to time k. Each ppqp¨, q

represents a spatial distribution of a single object on X (with  ppq px, q dx " 1), and each non-negative weight pI,q

satisfies,

ÿ ÿ pI,q pLq " 1.

(15)

IPF pLq P

Via Bayes recursion with the multi-object transition model in (11) and likelihood function in (12), the prior GLMB density is propagated through time [20]. A more efficient implementation that combines the prediction and update steps into one single filtering step is also presented in [56].

1This is not a probability density function but is equivalent to one as shown in [54]. Hence, with a slight abuse of terminology, we regard this function as a probability density function.

3

Figure 2: The proposed structure for the robust multi-sensor GLMB filter.

3 The robust multi-sensor GLMB filter
This section details the implementation of our robust MS-GLMB filter that can track multiple targets without prior knowledge of the detection profile and clutter rate. In particular, for each sensor, we implement an independent, robust CPHD filter to estimate its clutter rate. The estimated clutter rate is then bootstrapped into the MS-GLMB filter for the main filtering process. The detection probability of a target is augmented to the filtering state space of the filters for estimation. The schematic of the algorithm is given in Fig. 2.

3.1 The multi-target system modelling

3.1.1 Robust CPHD filter

CPHD filter is a low-cost multi-target tracking filter built on the premise of standard RFS. The multi-target density is approximated by its first moment (PHD) and the cardinality distribution in this filter. While being more accurate than the PHD filter, the CPHD filter is highly efficient with the complexity of O `|Z|2. In [52], the CPHD filter is extended to jointly estimate the clutter rate and detection probability (the robust CPHD) online. In this proposed filter, the robust CPHD filter is used to estimate the clutter rate of each sensor with the unknown target detection probability.
Following [52], the clutter and actual targets are modelled as two different types of targets. The detection probability is augmented to the target state for joint estimation. Denoting the state spaces for actual and clutter targets as Xp1q and Xp0q, the hybrid state space is then given by [52]:

phq
X

"

´ p1q X

^

pq ¯ X

Z

´ p0q X

^

pq ¯ X

,

(16)

where Xpq " r0, 1s is the space of unknown detection probability. For consistency, we use the superscripts p1q,p0q and phq to denote functions or variables on space of actual, clutter,
and hybrid targets, respectively. For the vth sensor, at the next time step, a target survives with the probability ppSv,hqpxphqq and has the transition
density of f`pvqpxp`hq|xphqq or being terminated with the probability 1 ´ ppSv,hqpxphqq. The survival probability and transition density are given respectively as [52]:

pSpv,hq pxphq q

"

#ppS1qpxq, ppSv,0q ,

xphq xphq

P P

Xp1q Xp0q

^ ^

Xpq Xpq

,

(17)

f`pvq pxp`hq |xphq q

"

$'&f`p1qpx`|xqfpv`q pa`|aq, f`pv,0qpc`|cq,

'%0,

xp`hq " px`, a`q, xphq " px, aq P Xp1q ^ Xpq xp`hq " pc`, b`q, xphq " pc, bq P Xp0q ^ Xpq .
otherwise

(18)

Given a target with the state xphq defined on the hybrid state-space, it can generate a measurement z P Z with the probability ppDhqpxphqq and the likelihood gpv,hqpz|xphqq, or being miss-detected with the probability of 1 ´ ppDhqpxphqq.
The detection probability and the likelihood of observing z are given respectively as [52]:

#

pDphqpxphqq "

a, b,

gpv,hqpz|xphqq

"

#gpvqpz|xq µpvqpzq

xphq xphq

" "

px, aq P Xp1q ^ Xpq pc, bq P Xp0q ^ Xpq

,

xphq xphq

" "

px, aq P Xp1q ^ Xpq pc, bq P Xp0q ^ Xpq

.

(19) (20)

3.1.2 MS-GLMB filter

MS-GLMB filter [22] is an extension of the efficient GLMB filter [56] to the multi-sensor framework. Given its

labeled RFS formulation, the MS-GLMB filter propagates the labeled multi-target density hence providing trajectory

estimates. In this work, the MS-GLMB filter is formulated to carry out the main filtering process. The sensor clutter

rates are bootstrapped from the robust CPHD filters.

As all sensors are independent, we can write the state distribution of a target with label and association history

 as ppqpx, ,

q " ppqpx,

q

V
v"1

ppq pv q.

Given the inclusion of the detection probability, the state transition model

in Eq. (8) can be rewritten as:

ÿ

S` pXS`|x, , q "

 p `q pS px, q fS` px`|x, q

px`, q ` PXS`

V

^



fpv`q

pv`

|v

q

`

" 1

´

1LpXS`q p

i q qS

px,

q,

v"1

(21)

where fvp`q p¨|¨qis the state transition density of the detection probability of the target on the vth sensor.

4

For multi-sensor multi-target tracking, we follow [22] to extend the likelihood in Eq. (12) to multiple sensors

case.

Specifically,

given

the

multi-target

state

X

and

the

set

of

measurements

Z pvq

"

zpvq 1:|Z pvq |

P

Z

produced

by

sensor vth, each observation of a target px, , q P X on this sensor is either a measurement zjpvq P Zpvq with the

detection probability of v and the likelihood of gpvqpzpvq|x, q or empty (miss-detected) with the probability 1 ´ v.

Furthermore, the set Zpvq may also contain measurements that are not generated by any targets and the set of those

false measurements is modeled by Poisson RFS with the rate (intensity) of pvq (estimated by the robust CPHD

filter). The multi-target likelihood of this sensor can be written as [19, 20],

gpvq

´ Z

pvq

|X

¯

9

ÿ

1pvq pLpX qq

´pvq¯

,,Zpvp,vqpvq Lp¨qq

X p¨q

,

pvq Ppvq

(22)

where

pv,jq

tz 1:M

pvq

u

px,

,

$ &

v

gpvq

pzj

|px,

qq

q"

pvqpzj q

%1 ´ v

j " 1 : M pvq j " 0.

(23)

Notations are defined as the same as those in Eq. (12) with the additional superscript pvq to indicate the sensor index. Via the assumption that all sensors are conditionally independent and the following abbreviations:

Z

fi

´ Z

p1q

,

.

.

.

, ZpV q¯ ,

(24)

 fi p1q ^ ¨ ¨ ¨ ^ pV q,

pIq fi p1qpIq ^ ¨ ¨ ¨ ^ pV qpIq,



fi

´p1q,

.

.

.

,

pV

¯
q

,

(25) (26) (27)

V
1pIqpq fi  1pvqpIq ´pvq¯ ,
v"1

Zpjp1q,...,jpV qq

fi

V


Zpvv,jpvqqpx, ,

q,

v"1

the multi-sensor multi-target likelihood can be written simply as:

(28) (29)

gpZ |X q

"

V


gpvq

´ Z

pvq

|X

¯

9

ÿ

1pLpX

qq

pq

"ZpLp¨qq

iX p¨q

.

v"1

P

(30)

Note that, as all the terms piq (i " 1, . . . , V ) are positive 1-1, the multi-sensor extended association map  is also positive 1-1.

3.2 Clutter rate estimation with robust CPHD filter

For the vth sensor, the recursion of the robust CPHD filter at each time step starts with the prior PHD and cardinality distributions of targets on the hybrid state space. Note that we also have the prior GLMB density of the labeled targets state (from the MS-GLMB filter). Since the MS-GLMB filter combines measurements from all sensors, its contained information is more accurate than that of the current vth robust CPHD filter (which is only updated by measurements from the vth sensor). Basing on that fact, instead of using the prior PHD and cardinality from the current robust CPHD filter, we use prior information from the GLMB density to predict the PHD and cardinality distribution at the next time step. Specifically, given the GLMB prior as in Eq. (14), the PHD and cardinality distribution of an actual target can be computed, respectively as



~p1q px, vq " ÿ ÿ pI,qppqpx, q ppqpvq 

ppqpiq di,

I, PI

iPt1:V u´tvu

~p1qpnq " ÿ n p|I|q pI,q.

I ,

(31) (32)

The cardinality distribution of targets on the hybrid state space is then ~phq " ~p1q ° p0q (`°' denotes convolution operation).
Given Eq. (31), Eq. (32) and the priors information of the current sensor clutter targets, the robust CPHD prediction can be carried out as [52]:



`pv,1q px`, a`q "p1qpx`, a`q `

ppS1qpxqf`p1qpx`|xqfpv`q pa`|vq~p1q px, vq dv dx,

(33)

`pv,0q pbq "pv,0qpbq ` ppSv,0qpv,0q pbq ,

n

8

p`v,hqpnq " ÿ p`v,hqpn ´ jq ÿ Cji~phqpiqp1 ´ vqi´j jv,

j"0

i"j

A~p1q,

ppS1q E

`

A  pv,0q ,

ppSv,0q E

v "

A 1,

~p1qE

`

x1,



pv,0q y

,

(34) (35)
(36)

where

Cji

is

the

binomial

coefficient,

i.e.,

Cji

"

i! j!pi´jq!

.

Given the measurements set Z`pvq, the updated PHD and cardinality distribution can be written as [52]:

`pv,1q

´ x`,

a`|Z`pvq¯

"

`pv,1q

px`,

a`q

^

» xpZv`p,v1qq"`pv,hq,Z`pvqi,p`v,hqy

-------- p1 ´ a q ^ `

xpZv`p,v0qq "`pv,hq ,Z`pvq i,p`v,hq y

-- --

x1, `pv,1qy ` x1, `pv,0qy

--

ÿ `
zPZ`pvq

fi

ffi

ffi

a` ^ gpv,1q pz|x`q

ffi ffi,

x`pv,0q ,

ppDv`,0q µpvq y

`

x`pv,1q ,

ppDv`,1q g pv,1q

pz|¨qy

ffi ffi ffi

­

fl

(37)

5

`pv,0q ´b`|Z`pvq¯ " `pv,0q pb`q ^

» xpZv`p,v1qq"`pv,hq,Z`pvqi,p`v,hqy

------ p1 ´ b q ^ `

xp`v,0q "`pv,hq ,Z`pvq i,p`v,hq y

-- --

x1, `pv,1qy ` x1, `pv,0qy

­

ÿ `
zPZ`psq

fi

ffi

b` ^ µpvqpzq

ffi ffi,

x`pv,0q ,

ppDv`,0q µpvq y

`

x`pv,1q ,

ppDv`,1q g pv,1q

pz|¨qy

ffi ffi fl

(38)

where

$0,

&

pv,hq
 pnq " % , `

pnq¨pv,0q r` Z`pvq spnq Ap`v,hq ,p`v,0q E

n  |Z`pvq| n  |Z`pvq| ,

$

'0,

p`v,uq

"`pv,hq Z`pvq i

pnq

"

&

'%P|pZn`pqvq

|`u

´n´´|Z`pvq v`

¯¯ |`u

,

n  |Z`pvq| ` u n  |Z`pvq| ` u ,

(39) (40)

v`

"1

´

x`pv,1q, ppDv`,1qy x1, `pv,1qy

` `

x`pv,0q, ppDv`,0qy , x1, `pv,0qy

ppDv`,1qpx, aq "a,

ppDv`,0qpbq "b,

(41)
(42) (43)

and

Pjn

is

the

permutation

coefficient,

i.e.,

Pjn

"

n! pn´jq!

.

In this work, we model the kinematic state and detection probability of targets with Gaussian and Beta distri-

butions, respectively. The analytic implementation can be found in Proposition 13 and 14 of [52]. For clutter rate

estimation, given the PHD of clutter targets is written as a mixture of Beta distributions, i.e.

J pv,0q
pv,0qpb`q " ÿ wipv,0qipv,0qpb`|spiv,0q, tpiv,0qq,
i"1

(44)

where

p¨|s, tq

denotes

a

Beta

distribution

with

mean

s ps`tq

and

variance

st ps`tq2 ps`t`1q

.

The

mean

clutter

rate

for

the

vth sensor is computed as [52]

¯pvq

"

J pv,0q
ÿ
i"1

wipv,0q

spiv,0q spiv,0q ` tpiv,0q

.

(45)

Practically, the presented clutter rate estimation step can be parallelized for V sensors to reduce the computation

time.

3.3 Multi-target state filtering with MS-GLMB filter

Given the set of estimated clutter rates ¯p1:V q (see Eq. (45)), the main multi-target filtering is carried out via the MS-GLMB filter. Noting that the detection probability  of a target is augmented to its state for joint estimation as in [53]. For the initial GLMB density of the form in Eq. (14), the transition model in Eq. (11), Eq. (21) and the multi-sensor multi-target likelihood in Eq. (12), the filtering density at the next time step is given as:

` pX`|Z`q 9 pX`q

ÿ

 pI ,q ZpI`,,I` ,` q I`

rL

pX`qs

,, ppZ`,`

q

X`

,

I ,,I` ,`

(46)

where I P F pLq ,  P , I` P F pL`q , ` P ` pI`q , and

ZpI`,,I` ,` q

"1`pI`q

p`q

" 1

´

P¯Spq iI ´I`

"P¯Spq iI XI`

r1

´

rB ,` sB` ´I`

rBB`,`XI`

,, ¯Zp`,`

q

I`

,

(47)

P¯Spq p q "@ppq p¨, q , PS p¨, qD,

¯Zp`,`q p

`q

 "

p¯`pq px`,

V
`q  ppqpvqZp``p `qq px`, `,

`q dx`d1:V ,

v"1



V

pS px`, `, `q "

PS px,

`q fS` px`|x,

`q ppq px,

 `q dx ^

ppqpvqfpv`q pv`|vqdv,

v"1

p¯p`q px`, `,

`q

"1L p

`q

pS

px`, `, P¯Spq p `q

`q

` 1B`

p

`q pB,`

px`,

`q ,

pZp`,`q px`, `,

`q

"

p¯p`q

px`,

`,

`q Zp``p `qq ¯Zp`,`q p `q

px`,

`

`q .

(48) (49) (50) (51)
(52)

The number of components in the GLMB filtering density grows exponentially over time. Hence, it needs to be truncated to keep the filter tractable. To select significant components, one approach is to formulate the multidimensional assignment on the extended association maps. However, solving this problem is NP-hard and intractable given a high number of sensors. On the other hand, significant components can be efficiently sampled from a stationary distribution via the Gibbs sampler. However, this approach is also intractable with a high number of sensors due to the amount of memory required to store the high-dimensional distribution. In this work, minimally-Markovian (between sensors) on the stationary distribution is assumed [22], which allows a significant reduction of computation time and memory usage. Hence it allows the filter to operate with a high number of sensors in an online fashion. The filtering procedure is given in Alg. 2 of [22].
In this filter, we model the kinematic with the Gaussian distribution and independent Beta distribution for the detection probability of each sensor. The procedures to predict and update each Beta distribution are described in [52].

6

Parameters Scenario No.
1 2 3

Detection probability pD

Clutter rate ¯p1,...,V q

0.9

30

0.5

5

varying between (0.5 - 0.9) varying between (5 - 30)

Table 1: Scenarios with different unknown parameters

The pseudo-code in Alg. 1 lays out the implementation of our algorithm. The modelCPHD and modelGLMB

classes contain the corresponding transition and likelihood models for the CPHD and MS-GLMB filters as discussed

in Subsections 3.1.1 and 3.1.2. Given the posterior density, multi-target [19] or multi-trajectory [22, 57] estimators

can be applied to extracts target tracks. In this work, we use the sub-optimal multi-target estimators proposed in [19]

to

estimate

tracks.

The

complexity

of

the

MS-GLMB

filter

is

OpT

P

2

p|

V
v"1

Z

pvq|qq.

Hence

the

overall

complexity

of

our

algorithm

is

OpT P 2p|

V
v"1

Z pvq |qq.

Algorithm 1 Robust MS-GLMB filtering algorithm
Input: modelGLMB, priorGLMB, modelCPHD, rpriorCPHDsp1:V q, Z` Output: rposteriorCPHDsp1:V q, EstimatedTracks

Compute ~p1q, ~p1q via Eq.(31) and Eq.(32) using priorGLMB.
for v " 1 : V do (parallelizable) posteriorCPHD = Robust-CPHD-Recursion(~p1q, ~p1q, modelCPHD, priorCPHDpvq, Z`q Compute ¯pvq via Eq.(45) using posteriorCPHDpvq
end for posteriorGLMB = MS-GLMB-Recursion(¯p1:V q, modelGLMB, priorGLMB, Z`) EstimatedTracks = Multi-Target-Estimator(posteriorGLMB)

4 Numerical study

In this section, we conduct numerical studies to compare the performance of our proposed robust MS-GLMB filter to

the ones of MS-GLMB (sub-optimal implementation) and iterated corrector GLMB (IC-GLMB) filters. The ground

truth consists of 10 targets in a 2-D surveillance area over a period of 100 seconds. The true target trajectories

are shown in Fig. 3. A target kinematic state is represented by a 4-D vector of planar position and velocity, i.e., xk " rpx, py, p9x, p9ysT , where T denotes the matrix transpose operation. The single target transition density is given

by

fS` px`|x, q " N px`; F x, Qq ,

(53)

where N p¨; x¯, P q denotes a Gaussian distribution with mean x¯ and covariance P ,

F

,, "

I2 02

I2  I2

« Q " a2

4 4

I2

3 2

I2

3 2

I2

ff ,

2I2

with a " 0.15pm{sq,  " 1psq and In is a n ^ n identity matrix. The probability of survival pS is set to 0.98. The
new-born targets are modeled by an LMB RFS of cardinality 6 and the parameters are given as tprB`, ppBiq`qu6i"1 where rB` " 0.01 and ppBiq` " N px; mpBiq`, QB`q with QB` " diagpr10, 5, 10, 5sq and

mpB1`q " p100, 100, 0, 0q, mpB4`q " p900, 100, 0, 0q,

mpB2`q " p100, 500, 0, 0q, mpB5`q " p900, 500, 0, 0q,

mpB3`q " p100, 900, 0, 0q, mpB6`q " p900, 900, 0, 0q.

There are eight fixed bearing-only sensors located at position spvq " ´spxvq, spyvq¯ , v " 1, 2, ..., 8, as illustrated in Fig. 3. For sensor vth , the likelihood that a target px, q generates a measurement zpvq is given as

gpvq

´ z

pvq

|x,

, spvq¯ " N ´zpvq; hpvq px, spvqq, 2¯ ,

(54)

where

h

px,

sq

"

arctan

^

px py

´ ´

sx sy



,

(55)

and  " {180 (rad). Note that MS-GLMB and robust CPHD filters share the same single-object kinematic transition and likelihood models.
For a fair performance comparison, all three filters sample 3000 components during the update stage, and a maximum of 1000 components is allowed in the posterior density. We experimented with 100 Monte Carlo (MC) trials. The errors of the estimates are quantified via the OSPA [58] and OSPAp2q [24] metrics (between the estimated value and the ground truth). The cut-off and norm order of the metrics are set to 100(m) and 1, respectively. The window length of OSPAp2q metric is set to 10(s). We perform the study on three scenarios with different simulated detection probability and clutter rate settings as given in Tab. 1. These settings are the same for all 8 sensors.
To show the robustness of the proposed algorithm, we keep the parameters unchanged for our filter across all scenarios. As the estimated pD and ¯ for all 8 sensors are similar at each scenario, we only show the results from 1 sensor (per scenario) for demonstration purpose.

7

Figure 3: True target trajectories and sensor locations.
4.1 Scenario 1
In this scenario, we test the performance of different filters in high clutter rate and high detection probability. For the IC-GLMB and MS-GLMB filters, we set the detection probability pD and clutter rate ¯ to 0.9 and 30, respectively, while these parameters are kept unknown to our filter.
Fig. 4 shows the estimated detection probability and clutter rate from our filter compared to the correct values. Specifically, Fig. 4a suggests that the detection probability starts at around 0.7 (our initial settings). It approaches the correct value of 0.9 while the estimated clutter rate is slightly below the true value.

(a) Mean estimated detection probability

(b) Mean estimated clutter rate

Figure 4: Mean estimated detection probability and mean clutter rate together with 0.4- bound curves in the first tracking scenario.

Regarding filtering performance, Fig. 5 shows that our filter exhibits low tracking errors both in terms of localization and cardinality estimation. On the other hand, although the IC-GLMB filter gives reasonably low error in localization, it shows drastic decay in cardinality estimation quality, hence the high overall errors. Moreover, its 0.4- bounds (for visualisation) over 100 MC runs show unstable tracking performance at each time step. Furthermore, the OSPA and OSPAp2q errors of our method and MS-GLMB filter are similar, as shown in Fig. 5a and Fig. 5b. It demonstrates that our proposed method is competitive to the MS-GLMB filter. However, ours assumes no prior information on the target detection probability and clutter rate.
Fig. 6 shows that our filter has slightly better cardinality estimation than MS-GLMB, while IC-GLMB fails due to the high number of sensors.

4.2 Scenario 2
Different from Scenario 1, in this scenario, we attempt to test the tracking ability of different filters under the condition of low detection probability and low clutter rate. In this test, we set pD " 0.5 and ¯ " 5 for the IC-GLMB and MS-GLMB filters, while these parameters are estimated online in our proposed filter.
Fig. 7 shows that our filter correctly estimates the clutter rate of sensors (Fig. 7b), but it slightly overestimates the targets detection probability. In particular, the average detection probability starts at around 0.65 (near our initial setting), then it gradually reduces to 0.55 instead of the true value of 0.5 as shown in Fig. 7a.
In terms of filtering performance, Fig. 8 shows that IC-GLMB cannot provide reliable estimates due to a high number of sensors. On the other hand, the OSPA and OSPAp2q errors for our method and MS-GLMB filter are almost similar, as shown in Fig. 8a and Fig. 8b. Interestingly, although we assume no prior information on the unknown background information for our filter, the OSPAp2q error of ours is slightly lower than that of the MS-GLMB filter.
Fig. 9 shows that the MS-GLMB filter has better cardinality estimation than ours from time steps 30 to 60. From time step 60 onward, the MS-GLMB filter tends to provide overestimation while ours slightly underestimates the

8

(a) Mean OSPA errors

(b) Mean OSPAp2q errors

Figure 5: Mean OSPA (left) and OSPAp2q (right) errors in the first tracking scenario for different filters.

Figure 6: Mean estimated cardinality for different filters in scenario 1 with the ground true values.

(a) Mean estimated detection probability

(b) Mean estimated clutter rate

Figure 7: Mean estimated detection probability and mean clutter rate together with 0.4- bound curves in the second tracking scenario.

number of targets. IC-GLMB cannot reliably track targets in this scenario.
4.3 Scenario 3
To test the filters in time-varying detection profile and clutter rate condition, we create a scenario where the detection probability pD and clutter rate c values increase from low to high during tracking period. Specifically, for the first 50 time steps, we simulate the condition with low detection probability and low clutter rate (parameters as in the scenario 2). For the remaining tracking period, we simulate tracking condition with high detection probability and high clutter rate (parameters as in the scenario 1). The average detection probability and clutter rate for IC-GLMB and MS-GLMB are set to the mean values of the variation ranges, i.e. 0.7 and 17.5 for detection probability and clutter rate, respectively.
Fig. 10 presents the estimated detection probability and clutter rate from our proposed filter. It demonstrates that our filter correctly captures the variations of background condition. It is also observed that the sensitivity of our filter to the change in clutter rate is higher than that of the one in detection probability.
Considering the filtering performance in terms of OSPA and OSPAp2q errors, the results in Fig. 11 shows that

9

(a) Mean OSPA errors

(b) Mean OSPAp2q errors

Figure 8: Mean OSPA (left 3 plots) and OSPAp2q (right 3 plots) errors in the second tracking scenario for different filters.

Figure 9: Mean estimated cardinality for different filters in scenario 2 with the ground true values.

(a) Mean estimated detection probability

(b) Mean estimated clutter rate

Figure 10: Mean estimated detection probability and mean clutter rate together with 0.4- bound curves in the third tracking scenario.

Scenario No.
1 2 3

Filters

IC-GLMB

MS-GLMB Robust MS-GLMB

94.44( 7.74) 28.81( 10.45) 93.24 ( 3.61) 47.63 ( 9.83) 99.38 ( 1.22) 84.31 ( 3.91)

40.51 ( 10.55) 46.59 ( 12.36) 30.16 ( 10.62)

Table 2: OSPAp2q errors ( 1- bound) (m) (over 100 MC runs evaluated over the entire tracking period (window length of 100s) of different filters in all scenarios.

although MS-GLMB filter has better performance than the IC-GLMB, both of these filters fail to track targets in this scenario. Fig. 11 also indicates that our filter tracks all targets with high level of accuracy. This is due to the capability of our filter in adapting to the changes of background condition.
Fig. 12 shows that IC-GLMB and MS-GLMB filters incorrectly estimates the targets set cardinality in this

10

(a) Mean OSPA errors

(b) Mean OSPAp2q errors

Figure 11: Mean OSPA (left 3 plots) and OSPAp2q (right 3 plots) errors in the third tracking scenario for different filters.

Figure 12: Mean estimated cardinality for different filters in scenario 3 with the ground true values.
scenario. On the other hand, our method demonstrates reliable estimation results, although it tends to slightly underestimate the number of targets from time step 30 onward.
For overall comparison, Table 2 shows the mean OSPAp2q errors (over 100 MC runs) evaluated over the entire tracking period. The results show that the IC-GLMB filter has the worst performance in all three scenarios. On the other hand, the performance of our proposed robust filter is worse than of the MS-GLMB filter in the first scenario. However, it is competitive to the MS-GLMB filter in the second scenarios (which is supplied with correct background parameters). For the last scenario, our proposed filter has the best performance compared to the ones of others given its capability to adapt to the changes in tracking environment.
5 Conclusions
This paper has proposed a robust multi-sensor multi-target tracking algorithm based on the multi-sensor GLMB filter for multi-target tracking and the low-cost robust CPHD filters for clutter rate estimation. Given this formulation, the proposed algorithm efficiently estimates the target trajectories and background information online. The experimental results show that our method provides reliable estimates in different tracking conditions with multiple bearing-only sensors, whereas the iterated corrector approach fails completely due to the high number of sensors. Notably, our filter has a similar performance to the MS-GLMB filter supplied with the correct background parameters in constant background condition. In scenario with fluctuating backgrounds, our filter outperforms the MS-GLMB filter because it can learn and adapt to the changes in clutter rate and target detection profile.
The proposed filter currently assumes prior knowledge of the newborn targets distribution . In practice, this information is not available in many applications. While the measurement adaptive birth model [23] can be readily extended to a multi-sensor setting, it is expensive to combine measurements from different sensors to form the birth density. Hence, an efficient method for births modelling will be considered for a more adaptive multi-sensor multi-target tracking algorithm for future work.
Acknowledgment
The authors acknowledge the supervision of their supervisors and mentors for this work.
11

References
[1] S. J. Wong and B. T. Vo, "Square root gaussian mixture phd filter for multi-target bearings only tracking," in 2011 Seventh International Conference on Intelligent Sensors, Sensor Networks and Information Processing. IEEE, 2011, pp. 520­525.
[2] D. Hull, J. Speyer, and D. Burris, "Linear-quadratic guidance law for dual control of homing missiles," Journal of Guidance, Control, and Dynamics, vol. 13, no. 1, pp. 137­144, 1990.
[3] J. C. Hassab, Underwater signal and data processing. CRC Press, 2018.
[4] G. Fang, G. Dissanayake, N. M. Kwok, and S. Huang, "Near minimum time path planning for bearing-only localisation and mapping," in 2005 IEEE/RSJ International Conference on Intelligent Robots and Systems. IEEE, 2005, pp. 850­855.
[5] S. C. Nardone and V. J. Aidala, "Observability criteria for bearings-only target motion analysis," IEEE Transactions on Aerospace and Electronic systems, vol. AES-17, no. 2, pp. 162­166, 1981.
[6] S. Nardone, A. Lindgren, and K. Gong, "Fundamental properties and performance of conventional bearings-only target motion analysis," IEEE Transactions on automatic control, vol. 29, no. 9, pp. 775­787, 1984.
[7] T. L. Song, "Observability of target tracking with bearings-only measurements," IEEE Transactions on Aerospace and Electronic Systems, vol. 32, no. 4, pp. 1468­1472, 1996.
[8] M. S. Arulampalam, B. Ristic, N. Gordon, and T. Mansell, "Bearings-only tracking of manoeuvring targets using particle filters," EURASIP Journal on Advances in Signal Processing, vol. 2004, no. 15, pp. 1­15, 2004.
[9] E. Fogel and M. Gavish, "Nth-order dynamics target observability from angle measurements," IEEE Transactions on Aerospace and Electronic Systems, vol. 24, no. 3, pp. 305­308, 1988.
[10] F. Dufour and M. Mariton, "Tracking a 3d maneuvering target with passive sensors," IEEE Transactions on aerospace and electronic systems, vol. 27, no. 4, pp. 725­739, 1991.
[11] T.-G. Lee, "Centralized kalman filter with adaptive measurement fusion: its application to a gps/sdins integration system with an additional sensor," International Journal of Control, Automation, and Systems, vol. 1, no. 4, pp. 444­452, 2003.
[12] T. Fortmann, Y. Bar-Shalom, and M. Scheffe, "Sonar tracking of multiple targets using joint probabilistic data association," IEEE Journal of Oceanic Engineering, vol. 8, no. 3, pp. 173­184, 1983.
[13] S. S. Blackman, "Multiple hypothesis tracking for multiple target tracking," IEEE Aerospace and Electronic Systems Magazine, vol. 19, no. 1, pp. 5­18, 2004.
[14] R. P. Mahler, Statistical multisource-multitarget information fusion. Artech House Norwood, MA, 2007, vol. 685.
[15] R. Mahler, ""statistics 102" for multisource-multitarget detection and tracking," IEEE Journal of Selected Topics in Signal Processing, vol. 7, no. 3, pp. 376­389, 2013.
[16] R. P. Mahler, "Multitarget bayes filtering via first-order multitarget moments," IEEE Transactions on Aerospace and Electronic systems, vol. 39, no. 4, pp. 1152­1178, 2003.
[17] B.-N. Vo and W.-K. Ma, "The gaussian mixture probability hypothesis density filter," IEEE Transactions on signal processing, vol. 54, no. 11, pp. 4091­4104, 2006.
[18] B.-T. Vo, B.-N. Vo, and A. Cantoni, "Analytic implementations of the cardinalized probability hypothesis density filter," IEEE Transactions on Signal Processing, vol. 55, no. 7, pp. 3553­3567, 2007.
[19] B.-T. Vo and B.-N. Vo, "Labeled random finite sets and multi-object conjugate priors," IEEE Transactions on Signal Processing, vol. 61, no. 13, pp. 3460­3475, 2013.
[20] B.-N. Vo, B.-T. Vo, and D. Phung, "Labeled random finite sets and the bayes multi-target tracking filter," IEEE Transactions on Signal Processing, vol. 62, no. 24, pp. 6554­6567, 2014.
[21] B.-N. Vo and B.-T. Vo, "A multi-scan labeled random finite set model for multi-object state estimation," IEEE Transactions on Signal Processing, vol. 67, no. 19, pp. 4948­4963, 2019.
[22] B.-N. Vo, B.-T. Vo, and M. Beard, "Multi-sensor multi-object tracking with the generalized labeled multibernoulli filter," IEEE Transactions on Signal Processing, pp. 1­1, 2019.
[23] S. Reuter, B.-T. Vo, B.-N. Vo, and K. Dietmayer, "The labeled multi-bernoulli filter," IEEE Transactions on Signal Processing, vol. 62, no. 12, pp. 3246­3260, 2014.
[24] M. Beard, B. T. Vo, and B.-N. Vo, "A solution for large-scale multi-object tracking," IEEE Transactions on Signal Processing, vol. 68, 2020.
[25] D. S. Bryant, B.-T. Vo, B.-N. Vo, and B. A. Jones, "A generalized labeled multi-bernoulli filter with object spawning," IEEE Transactions on Signal Processing, vol. 66, no. 23, pp. 6177­6189, 2018.
[26] H. Van Nguyen, H. Rezatofighi, B.-N. Vo, and D. C. Ranasinghe, "Online uav path planning for joint detection and tracking of multiple radio-tagged objects," IEEE Transactions on Signal Processing, vol. 67, no. 20, pp. 5365­5379, 2019.
[27] B. Wei and B. D. Nener, "Multi-sensor space debris tracking for space situational awareness with labeled random finite sets," IEEE Access, vol. 7, pp. 36 991­37 003, 2019.
[28] B. A. Jones, D. S. Bryant, B.-T. Vo, and B.-N. Vo, "Challenges of multi-target tracking for space situational awareness," in 2015 18th International Conference on Information Fusion (Fusion), 2015, pp. 1278­1285.
[29] D. Y. Kim, B.-N. Vo, B.-T. Vo, and M. Jeon, "A labeled random finite set online multi-object tracker for video data," Pattern Recognition, vol. 90, pp. 377­389, 2019.
[30] J. Ong, B. T. Vo, B. N. Vo, D. Y. Kim, and S. Nordholm, "A bayesian filter for multi-view 3d multi-object tracking with occlusion handling," IEEE Transactions on Pattern Analysis and Machine Intelligence, pp. 1­1, 2020.
[31] J. Mullane, B.-N. Vo, M. D. Adams, and B.-T. Vo, "A random-finite-set approach to bayesian slam," IEEE Transactions on Robotics, vol. 27, no. 2, pp. 268­282, 2011.
12

[32] W. J. Hadden, J. L. Young, A. W. Holle, M. L. McFetridge, D. Y. Kim, P. Wijesinghe, H. Taylor-Weiner, J. H. Wen, A. R. Lee, K. Bieback et al., "Stem cell migration and mechanotransduction on linear stiffness gradient hydrogels," Proceedings of the National Academy of Sciences, vol. 114, no. 22, pp. 5647­5652, 2017.
[33] T. T. D. Nguyen, B.-N. Vo, B.-T. Vo, D. Y. Kim, and Y. S. Choi, "Tracking cells and their lineages via labeled random finite sets," arXiv preprint arXiv:2104.10964, 2021.
[34] M. Uney, D. E. Clark, and S. J. Julier, "Distributed fusion of phd filters via exponential mixture densities," IEEE Journal of Selected Topics in Signal Processing, vol. 7, no. 3, pp. 521­531, 2013.
[35] G. Battistelli, L. Chisci, C. Fantacci, A. Farina, and A. Graziano, "Consensus cphd filter for distributed multitarget tracking," IEEE Journal of Selected Topics in Signal Processing, vol. 7, no. 3, pp. 508­520, 2013.
[36] M. B. Guldogan, "Consensus bernoulli filter for distributed detection and tracking using multi-static doppler shifts," IEEE Signal Processing Letters, vol. 21, no. 6, pp. 672­676, 2014.
[37] W. Yi, M. Jiang, R. Hoseinnezhad, and B. Wang, "Distributed multi-sensor fusion using generalised multibernoulli densities," IET Radar, Sonar & Navigation, vol. 11, no. 3, pp. 434­443, 2017.
[38] W. Yi, S. Li, B. Wang, R. Hoseinnezhad, and L. Kong, "Computationally efficient distributed multi-sensor fusion with multi-bernoulli filter," IEEE Transactions on Signal Processing, vol. 68, pp. 241­256, 2019.
[39] C. Fantacci, B.-N. Vo, B.-T. Vo, G. Battistelli, and L. Chisci, "Robust fusion for multisensor multiobject tracking," IEEE Signal Processing Letters, vol. 25, no. 5, pp. 640­644, 2018.
[40] S. Li, W. Yi, R. Hoseinnezhad, G. Battistelli, B. Wang, and L. Kong, "Robust distributed fusion with labeled random finite sets," IEEE Transactions on Signal Processing, vol. 66, no. 2, pp. 278­293, 2017.
[41] S. Li, G. Battistelli, L. Chisci, W. Yi, B. Wang, and L. Kong, "Computationally eff i cient multi-agent multiobject tracking with labeled random finite sets," IEEE Transactions on Signal Processing, vol. 67, no. 1, pp. 260­275, 2018.
[42] B.-N. Vo, S. Singh, and W. K. Ma, "Tracking multiple speakers using random sets," in 2004 IEEE International Conference on Acoustics, Speech, and Signal Processing, vol. 2. IEEE, 2004, pp. ii­357.
[43] S. Nannuru, S. Blouin, M. Coates, and M. Rabbat, "Multisensor cphd filter," IEEE Transactions on Aerospace and Electronic Systems, vol. 52, no. 4, pp. 1834­1854, 2016.
[44] A. Saucan, M. J. Coates, and M. Rabbat, "A multisensor multi-bernoulli filter," IEEE Transactions on Signal Processing, vol. 65, no. 20, pp. 5495­5509, 2017.
[45] X. Wang, A. K. Gostar, T. Rathnayake, B. Xu, A. Bab-Hadiashar, and R. Hoseinnezhad, "Centralized multipleview sensor fusion using labeled multi-bernoulli filters," Signal Processing, vol. 150, pp. 75­84, 2018.
[46] A. K. Gostar, T. Rathnayake, R. Tennakoon, A. Bab-Hadiashar, G. Battistelli, L. Chisci, and R. Hoseinnezhad, "Cooperative sensor fusion in centralized sensor networks using cauchy­schwarz divergence," Signal Processing, vol. 167, p. 107278, 2020.
[47] A. Khodadadiangostar, T. Rathnayake, R. B. Tennakoon, A. Bab-Hadiashar, G. Battistelli, L. Chisci, and R. Hoseinnezhad, "Centralized cooperative sensor fusion for dynamic sensor network with limited field-of-view via labeled multi-bernoulli filter," IEEE Transactions on Signal Processing, 2020.
[48] S. Panicker, A. K. Gostar, A. Bab-Hadiashar, and R. Hoseinnezhad, "Tracking of targets of interest using labeled multi-bernoulli filter with multi-sensor control," Signal Processing, vol. 171, p. 107451, 2020.
[49] N. T. Pham, W. Huang, and S. H. Ong, "Multiple sensor multiple object tracking with gmphd filter," in 2007 10th International Conference on Information Fusion. IEEE, 2007, pp. 1­7.
[50] M. Beard, B.-T. Vo, and B.-N. Vo, "Multitarget filtering with unknown clutter density using a bootstrap gmcphd filter," IEEE Signal Processing Letters, vol. 20, no. 4, pp. 323­326, 2013.
[51] C.-T. Do and H. V. Nguyen, "Tracking multiple targets from multistatic doppler radar with unknown probability of detection," Sensors, vol. 19, no. 7, p. 1672, 2019.
[52] R. P. Mahler, B.-T. Vo, and B.-N. Vo, "Cphd filtering with unknown clutter rate and detection profile," IEEE Transactions on Signal Processing, vol. 59, no. 8, pp. 3497­3513, 2011.
[53] Y. G. Punchihewa, B.-T. Vo, B.-N. Vo, and D. Y. Kim, "Multiple object tracking in unknown backgrounds with labeled random finite sets," IEEE Transactions on Signal Processing, vol. 66, no. 11, pp. 3040­3055, 2018.
[54] B.-N. Vo, S. Singh, and A. Doucet, "Sequential monte carlo methods for multitarget filtering with random finite sets," IEEE Transactions on Aerospace and electronic systems, vol. 41, no. 4, pp. 1224­1245, 2005.
[55] R. Mahler, "Exact closed-form multitarget bayes filters," Sensors, vol. 19, no. 12, p. 2818, 2019. [56] B.-N. Vo, B.-T. Vo, and H. G. Hoang, "An efficient implementation of the generalized labeled multi-bernoulli
filter," IEEE Transactions on Signal Processing, vol. 65, no. 8, pp. 1975­1987, 2017. [57] T. T. D. Nguyen and D. Y. Kim, "Glmb tracker with partial smoothing," Sensors, vol. 19, no. 20, p. 4419, 2019. [58] D. Schuhmacher, B.-T. Vo, and B.-N. Vo, "A consistent metric for performance evaluation of multi-object filters,"
IEEE transactions on signal processing, vol. 56, no. 8, pp. 3447­3457, 2008.
13

