Robust a-posteriori error estimates for weak Galerkin method for the convection-diffusion problem
Natasha Sharmaa,
aDepartment of Mathematical Sciences, University of Texas of El Paso, El Paso, TX 79968

arXiv:2106.00485v1 [math.NA] 1 Jun 2021

Abstract
We present a robust a posteriori error estimator for the weak Galerkin finite element method applied to stationary convection-diffusion equations in the convection-dominated regime. The estimator provides global upper and lower bounds of the error and is robust in the sense that upper and lower bounds are uniformly bounded with respect to the diffusion coefficient. Results of the numerical experiments are presented to illustrate the performance of the error estimator.
Keywords: weak Galerkin, finite element methods, discrete weak gradient, a posteriori error estimates, convection-diffusion equation, adaptive mesh refinement

1. Introduction

We consider the following convection-diffusion equations as our model problem

-div u + div bu + au = f in , u = 0 on ,

(1.1a) (1.1b)

where  is a polygonal domain in R2 with boundary  and where the data of the problem (1.1) and the right-hand side in (1.1a) satisfy the following assumptions:

A1.  > 0.

Corresponding author Email address: nssharma@utep.edu (Natasha Sharma)
Preprint submitted to Elsevier

June 2, 2021

A2. f  L2(), b  W 1,()2, a  L().

A3. There exists a positive constant c0 such that

0

<

c0



1 2

divb

+

a

on .

(1.2)

One of the challenges in the numerical approximations to (1.1) is that when the problem is convection-dominated, the solutions to these problems possess layers of small width. In the presence of these layers, the solutions and/or their gradients change rapidly and as a consequence, standard finite element methods give inaccurate approximations unless the mesh size is fine enough to capture the layers.
In response to this challenge, several numerical approaches have been proposed over the years including stabilized methods [1, 2, 3, 4, 5], discontinuous Galerkin (DG) methods [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] and most recently, the weak Galerkin (WG) methods [16, 17]. In particular, the WG methods use discontinuous approximations and have gained popularity owing to their attractive properties such as mass conservation, flexibility of geometry, flexibility on the choice of approximating functions [18]. It is interesting to note that over and above the advantages enjoyed by WG methods, the additional advantages of the WG scheme proposed in [17] is that it assumes a simple form and does not require any strict assumptions on the convection coefficient, a requirement which is crucial for several of the existing methods such as [8, 13, 14, 16]. Additionally, this simple WG scheme converges at the rate of O(hk+1/2) in the strongly advective regime, k here denoting the polynomial order.
The motivation of our paper stems from the fact that despite the advantages of this simple WG scheme, it exhibits a poor performance in the intermediate regime see [17, Example 2], for instance. Our goal in this paper is to present a posteriori error analysis for the simple WG method proposed in [17]. We further demonstrate that by relying on adaptively refined meshes based on a posteriori residual-type estimator, we can retrieve the optimal order of convergence for all the regimes not just the convection-dominated regime. Additionally, we also prove that this estimator provides global upper and lower bounds of the error and is robust in the sense that upper and lower bounds are uniformly bounded with respect to the diffusion coefficient.
Existing literature for convection-diffusion problems solved using adaptive finite element methods based on a posteriori error estimates was initialized

2

by Eriksson and Johnson in [19] and enriched by several works authored and co-authored by Verfu¨rth in [20, 21, 22]. Within the DG framework, a posteriori estimates were developed by Sch¨otzau and Zhu in [13, 14], and by Ern and co-authors in [23, 24]. In [15], a posteriori analysis using the hybridizable DG (HDG) method was presented and the error analysis relies on the extra conditions imposed on the convection coefficient. Furthermore, the proof of the local efficiency of the error estimator explicitly imposes a condition on mesh size to prove local efficiency see [15, Lemma 5.3].
The WG method was originally introduced in [18] by Wang and Ye as a class of finite element methods that employ weakly defined differential operators to discretize partial differential equations without demanding any fine tuning of parameters in its weak formulation. While much attention has been paid to developing weak Galerkin methods for a wide class of problems [25, 26, 27, 28, 29, 30, 31, 32, 33], there is not much development in the direction of adaptive WG methods and most of the existing a posteriori error analysis is derived for either the second-order elliptic equations [34, 35, 36, 37] or for the Stokes problem [38].
The paper is organized as follows. Section 2 develops the weak Galerkin finite element method for the model problem. Section 3 derivation of the a posteriori error analysis is presented. Section 4 demonstrates the effectiveness of our method with results of numerical experiments.

2. Weak Galerkin Formulation

Let {Th}h>0 be a uniformly shape-regular partition of  into rectangular

or triangular cells. For any T  Th, let hT denote the diameter of T , h =

maxLTetTEh hhTa,ntdheE¯hmdeeshnostiezethoef

Th and T denote the boundary of T. collection of all the interior edges and

all

the

edges associated with the triangulation Th respectively. Also, for any E  E¯h,

let hE denote the length of E. We assume that there exists a constant  > 0

such that for each T  Th, we have

hT  hE

(2.1)

We also introduce the shorthand notation for broken inner products over

3

Th and Th respectively as

(f, g)Th :=

(f, g)T =

f g dx,

T Th

T Th T

f, g Th :=

f, g T =

f gdx.

T Th

T Th T

In the above, we have used the shorthand T to denote the boundary of each cell T  Th. The notation · S denotes the L2 norm over any S belonging to Th or Eh. Here and in the sequel, we employ the standard notation for wellknown Lebesque and Sobolev spaces and norms defined on them (cf., e.g, [39,

Section 1.2]). Throughout this paper, we use the symbol to denote bounds

involving positive constants independent of the local mesh size and .

2.1. Weak Differential Operators
Following [18], we introduce the definitions of the weak gradient and divergence operators. For any T  Th, we let V (T ), denote the space of weak functions on T as

V (T ) :=

v

=

{v0,

vb}

:

v0



L2(T ),

vb



H

1 2

(

T

),

and define the weak gradient as follows.

Definition 2.1 (Weak Gradient). Given v  V (T ),

(wv, q)T := - v0divq dx + vbn · q ds q  H(div; T ),

T

T

where n is the outward unit normal vector to T and

H(div; T ) := {q : divq  L2(T )}.

On T , let Pk(T ) denote the space of all polynomials with degree no greater than k. For a given integer k  1, let Vh,k be the weak Galerkin finite element space corresponding to Th defined as follows:
Vh,k : {v = {v0, vb} : v0|T  Pk(T ), vb|T  Pk(T ), T  Th},
and let Vh0 be its subspace defined as: Vh0,k : {v = {v0, vb}  Vh,k : vb = 0, on }.
We introduce the definition of the discrete weak gradient as described in [17].

4

Definition 2.2 (Discrete Weak Gradient). For any v = {v0, vb}  Vh,k and for any T  Th, the discrete weak gradient w,kv  Pk-1(T )2 is defined on
T as the unique polynomial satisfying

(w,kv, )T = -(v0, div)T + vb,  · n T   Pk-1(T )2,

(2.2)

where n is the outward unit normal to T .

We note that since the right-hand side of (2.2) defines a bounded linear functional on H(div; T ), the definition of discrete weak gradient (2.2) is well defined for   H(div; T ) as well. Thus,

(w,kv, )T = -(v0, div)T + vb,  · n T = (wv, )T ,   H(div; T ).

(2.3)

Next, we introduce the weak divergence operator by first defining the space of weak vector-valued functions on T as

V (T ) :=

{v0,

vb}

:

v0



L2(T )2,

n

·

vb



H-

1 2

(T

)

,

so that the weak divergence operator can be defined as follows.

Definition 2.3 (Weak Divergence). For v  V (T ),

(w · v, )T := -(v0, )T + vb · n,  T   H1(T )

where

H1(T ) := {v : v  L2(T )}.

Following [17], the discrete weak divergence is defined as follows.

Definition 2.4 (Discrete Weak Divergence). Given v = {v0, vb}  Vh,k and for any T  Th, a discrete weak divergence w,k · (bv)  Pk(T ) associated with b can be defined as the unique polynomial satisfying

(w,k · (bv), )T = -(bv0, )T + b · nvb,  T   Pk(T ), (2.4)
where n is the outward unit normal to T .
Notice that the above definition 2.4 holds true for   H1(T ). This is because the right-hand side of (2.4) defines a bounded linear functional on H1(T ). Thus for   H1(T ), we have

(w,k · (bv), )T = -(bv0, )T + b · nvb,  T = (w · (bv), )T . (2.5)
In view of (2.3) and (2.5), we drop the subscript "k" from the discrete weak differential operator w,k and instead adopt the notation w and w· whenever the context is clear.

5

2.2. Weak Galerkin Method
For wh = {wh0, whb} and vh = {vh0, vhb} in Vh,k, we define a bilinear form as

ah(wh, vh) :=(wwh, wvh)Th + (awh0 + w · (bwh), vh0)Th + s(wh, vh),

(2.6)

where s(wh, vh) =  +(wh0 - whb), vh0 - vhb Th with  + defining the stabilization parameter defined as:

 +|T = (b · n) IT + + (hT )-1 + ( b -1 + 1)hT + h-T 1, T  Th, with the constant  > 0 introduced in (2.1) and

IT +(x) =

1 0

if b(x) · n(x)  0, otherwise.

A weak Galerkin approximation for (1.1) amounts to seeking uh = {uh0, uhb}  Vh0,k satisfying the following equation:

ah(uh, vh) = (f, vh0) vh = {vh0, vhb}  Vh0.

(2.7)

We equip the space Vh0 with the following weak Galerkin energy norm

|||vh|||2 := 

w,kvh

2 Th

+

v0

2 Th

+

 (vh0 - vhb), vh0 - vhb Th .

(2.8)

where

 |T = |b · n| + h-T 1 + (hT )-1 + b -1 + 1)hT T  Th.
The present work modifies the WG method of Lin and co-authors [17, eq. (2.8)] for solving the convection-diffusion equation with an additional diffusion-dependent stability term (h-T 1 + hT )(wh0 - whb), vh0 - vhb Th. The presence of this additional stability term enables us to bound several terms of the a posteriori error estimator.
Associated with the solution u satisfying (1.1a)­(1.1b) and uh  Vh satisfying (2.7), we introduce the following weak function measuring the error

eh := {eh0, ehb} = {u0 - uh0, ub - uhb},

(2.9)

6

where u0 and ub are understood to be the restrictions of u to the interior and the boundary of each T  Th. Furthermore, following the discussion in [18, Section 3], for any T  Th, an application of Green formula reveals

(u, q)T = -(u, divq)T + u, n · q T = -(u0, divq)T + ub, n · q T = (wu, q)T , q  Pm-1(T )2.

This allows us to measure the error in the energy norm:

|||u - uh|||2 = 

wu - wuh

2 Th

+

 1/2(uh0 - uhb)

2 Th

+

u - uh0

2 Th

(2.10)

where wuh is understood to be the discrete weak gradient w,kuh of uh  Vh,k while wu is the classical derivative of u.
The well-posedness of the WG formulation is guaranteed thanks to the following Lemma which appeared in of [17, Section 3.1] and readily applies to our WG form.

Lemma 2.1 (Coercivity and Continuity). There exists constants c1 and c2 such that there holds

ah(w, v)  c1|||w||| |||v||| w, v  Vh, c2|||v|||2  ah(v, v), v  Vh.

(2.11) (2.12)

Proof. The proof has been provided in subsection 3.1 of [17].

Remark 2.1. While the above Lemma 2.1 guarantees the well-posedness of
the WG method (2.7), the constant c1 appearing in (2.11) have an undesirable dependence on -1. This dependence arises when trying to control the term
(w · (bu), w). Hence, our a posteriori error analysis cannot rely on the continuity property to control this term. Instead, inspired by the strategy
in [13], we control this term by including the following semi-norm | · | to our energy norm (2.8).

Definition 2.5 (Operator). For any q  L2()2, we define the following semi-norm | · | as

|q| = sup
wH01()\{0}



q · w |||w|||

dx .

(2.13)

7

The definition above is well defined because q admits the following Helmholtz decomposition

q =  + q0, where   H01() uniquely solves

(2.14)

 · w dx = q · w dx w  H01(),





and q0 = q -  satisfies the divergence-free property

q0 · w dx = 0 w  H01().

The decomposition (2.14) is unique and orthogonal in L2()2.
Consequently, we have the following upper bound: For uh = {uh0, uhb}  Vh,k, v  H01(),
(w · (buh), v)  |buh0||||v|||,
where |||v|||2 :=  v 2 + v 2. Inequality (2.15) holds because

(2.15)

(w · (buh), v)Th = -(buh0, v)Th + n · buhb, v Th and using the fact that n · buhb, v Th = 0.

Remark 2.2 (Practical estimation of |b(u-uh0)|). Following the arguments presented in [13, Remark 3.5], we use the following inequality

|(u - uh0)| ¯

1 

u - uh0

to serve as a computable upper bound for |b(u - uh0)|.
We close this section by proving the inf-sup condition for ah(·, ·) on H01(). The proof follows the arguments presented in [13]. However, since our definition of the energy norm |||u||| + |bu| differs from the one used in [13], we include the proof below for completeness.

8

Theorem 2.1 (inf-sup condition). There exists a constant C > 0 satisfying

inf

sup

ah(u, v)

 C > 0.

uH01()\{0} vH01()\{0} (|||u||| + |bu|)|||v|||

(2.16)

Proof. Let u  H01() and 0 <  < 1. There exists w  H01() such that

|||w||| = 1, (w · (bu), w)  |bu|.

(u, -w) + (au, -w)  1/2u 1/2w + a  u w  max{1, a } |||u|||.
Thus,

ah(u, w) = (u, w) + (au, w) + (w · (bu), w)  -c1 |||u||| + |bu|,

(2.17)

where c1 = max{1, a }. Noting that Next, we define v = u + w where  > 0 is chosen suitably. Using

ah(u, u)   wu 2 + (c0u, u)  c|||u|||2 where c = min{1, c0}

(2.18)

and (2.17), we have

ah(u, v) = ah(u, u) + ah(u, w)  c|||u|||2 +  - c1 |||u||| + |bu| .

(2.19)

We pick  = c|||u|||/(c1 + 1) so that,

ah(u, v)  (c1 + 1)-1c |||u||| + |bu| |||u||| and, |||v||| = (c1 + 1)-1{c1 + 1 + c}|||u|||

thus,

ah(u, v) |||v|||



c

|||u||| + |bu| {c1 + 1 + c}

= C |||u||| + |bu|

where C = c{c1 + 1 + c}-1 > 0. Consequently, for any u  H01(),   (0, 1), we have

C |||u||| + |bu|

 ah(u, v)  sup

ah(u, v)

|||v||| vH01() (|||u||| + |bu|)|||v|||

from which, the result follows.

9

3. A Posteriori Error Analysis

In this section, we present a residual-based estimator and prove its reliability and efficiency.
Definition 3.1 (Estimator). We introduce the estimator in terms of the cell and edge indicators defined as shown below:

h2 :=

T2,1 + T2,2 +

E2 ,

T Th

EEh

(3.1)

where the cell and edge residuals are

T2,1 := T2

Rh

2 T

,

with Rh := fh + div(wuh) - w · (b uh0) - ahuh0,

T2,2 :=  (uh0 - uhb), uh0 - uhb T ,

E2

:= E-1/2

Jh

2 E

,

with Jh := [n · wuh] ,

(3.2)

and the weights are according to [20, equation (3.4)]

T = min{hT -1/2, c0-1/2}, and E = min{hE-1/2, c-0 1/2}.

(3.3)

We note that if c0 = 0, we define the weights as follows

T = min{hT -1/2, 1}, and E = min{hE-1/2, 1}.

(3.4)

We also define the oscillation of data as

osc(f, a) =

T2

f - fh

2 T

+

(a - ah)uh0

2 T

1/2
.

T Th

(3.5)

3.0.1. Reliability of Estimator
This subsection is devoted to proving the reliability for the estimator
defined in (3.1). The proof of the reliability relies on decomposing the dis-
cretization error into its conforming and non-conforming component and de-
riving upper bounds for each component. To this end, we first introduce a suitable conforming discrete space Vhc = Vh  H01().
For any vh = {vh0, vhb}  Vh we associate a conforming approximation vhc0  Vhc. Construction of such an approximation is a standard DG tool in the error analysis (see [40, Theorems 2.2 and 2.3] for instance). This allows
us to decompose vh as

vh = vhc + vhr

(3.6)

10

where the nonconforming component vhr = {vh0 - vhc , vhb - vhc }  Vh. The above conforming approximation satisfies the following properties:

vh0 - vhc

2 Th

hE [vh0]2 ds,
EEh E

(3.7a)

vh0 - vhc

2 Th

h-E1 [vh0]2 ds.
EEh E

(3.7b)

Thanks to the single-valuedness of vhb over each edge E  Eh, the jump term in the rhs of (3.9) and (3.10) can be expressed as

[vh0]2 ds =

[vh0 - vhb]2 ds

EEh E

EEh E



2(vh0 - vhb)2 ds.

T Th T

Using (3.8) in (3.7) and by using hT  hE, and hE  hT , we have

(3.8)

vh0 - vhc

2 Th

hT (vh0 - vhb)2 ds,

T Th

T

(3.9)

vh0 - vhc

2 Th

(hT )-1 (vh0 - vhb)2 ds.

T Th

T

(3.10)

The lemma below provides bounds for the non-conforming component.

Lemma 3.1 (Nonconforming term bound). For vh  Vh admitting the decomposition (3.6) the following hold true:

ah(vhr , w) |||vhr||| + |bvhr0|

max{1, a , b } |||vhr||| |||w|||, w  H01(), (3.11)

(h-T 1 + (hT )-1 + hT )

vh0 - vhb

2 T

.

(3.12)

T Th

Proof. To see (3.11), we apply the definitions of the WG form and weak divergence

ah(vhr , w) = (wvhr , w)Th - (bvhr0, w)Th + (avhr0, w)Th + n · bvhrb, w Th  |||vhr||| + b -1/2 vhr0 + a  vhr0 |||w|||,  max{1, a , b }|||vhr||| |||w|||, w  H01().

11

Here we have used (3.9) and n · burhb, w Th = 0. Next, for deriving (3.12), we use the definition (2.2) of the weak gradi-
ent in conjunction with the trace, inverse and Cauchy-Schwarz inequalities
and (3.9) to obtain

w vhr

2 T

=

(vhr0, wvhr )T

-

vhr0 - vbr, n · wvhr T

 vhr0 T + Ch-T 1/2 vhr0 - vhrb T wvhr T

1/2 wvhr T  min{1, C}



vhr0

2 T

+

h-T 1

vh0 - vhb

2 T

1/2

Thus, summing over all T  Th,



wvhr

2 Th

h-E1 [vh0]2 ds +

h-T 1

vh0 - vhb

2 T

.

(3.13)

EEh E

T Th

Using (3.8) in (3.13) and (3.9) we obtain



wvhr

2 Th

+

vhr0

2 Th

(h-T 1 + (hT )-1 + hT )

vh0 - vhb

2 

T

.

(3.14)

T Th

Finally, for bounding |bvhr0|, we use (3.9), Cauchy-Schwarz inequality and the definition of |bvhr0|

|bvhr0|

-1/2 b  vhr0 Th

b

-1hT

vh0 - vhb

2 T

1/2
.

T Th

(3.15)

Next, we proceed to control the conforming term by first deriving the error equation. To this end, we introduce the following continuous subspace
Vhc,1 := {w  H01() : w|K  P1(T ), T  Th}
and observe that by setting vb as trace of v on all the edges E  Th, Vhc,1 can be naturally embedded in Vh. This approach was used within the adaptive WG framework by Chen et al. [34] for obtaining partial orthogonality for second order elliptic problems.
We also introduce the following Cl´ement interpolation operator specially designed for convection diffusion problems by Verfu¨rth [20, Lemma 3.3] and
12

references therein. We denote this operator by h : H01  Vhc,1 satisfying |||hv||| |||v||| and

T-2

v - hv

2 T

1/2

T Th

1/2E-1

v - hv

2 E

1/2

EEh

|||v|||, |||v|||, v  H01().

(3.16) (3.17)

It is easy to see that for u satisfying (1.1) and uh  Vh satisfying the WG form (2.7), the following holds true:

ah(u - uh, vhc ) = 0 vhc  Vhc,1. As a consequence, we have the following error equation.

(3.18)

Lemma 3.2 (Error Equation). Let u solve (1.1a)­(1.1b), uh  Vh solve (2.7) decomposed as uh = uch + urh according to the decomposition (3.6). Then, for any v  H01(),

ah(u - uh, v) = (osc(f, a), v^) + (Rh, v^) - Jh, v^

(3.19)

where v^ = v - chv and osc(f, a), Rh and Jh are defined in (3.5) (3.2) respectively.

Proof. Since the exact solution u solves (1.1a)­(1.1b), we obtain, by applying (3.18) for chv  Vhc,1,

ah(u - uh, v) = (f, v) - ah(uh, v)

= (f, v - chv) - ah(uh, v - chv) + {(f, chv) - ah(uh, chv)}

= (f - fh + ahuh0 - auh0, v^) + (Rh, v^) - (Jh, v^).

(3.20)

To obtain (3.20), we have added and subtracted the data (fh - ahuh0, v^) and for the last two terms of (3.20) we apply integration by parts to (wuh, wv^).

Lemma 3.3 (Conforming term bound). Let u solve (1.1a)­(1.1b) and uh  Vh solve (2.7) and express uh = uch + urh according to (3.6). For any v = 0  H01(),

|||u - uch||| + |b(u - uch)|

ah(urh, v) |||v|||

+

h

+

osc(f,

a).

(3.21)

13

Proof. Thanks to the inf-sup condition (2.16), for any v  H01() \ {0},

|||u - uch||| + |b(u - uch)|

ah(u - uch, v) . |||v|||

(3.22)

Now, for the rhs of (3.22), using uch = uh - urh and (3.19) we have
ah(u - uch, v) = (f, v) - ah(uh - urh, v) = ah(urh, v) + (f, v) - ah(uh, v) = ah(urh, v) + (osc(f, a), v^) + (Rh, v^) - Jh, v^ .

(3.23)

In view of (3.23) and (3.22) and using the approximation properties (3.16) and (3.16) we obtain the desired upper bound.

We are now in the position to prove the reliability of the estimator.

Theorem 3.1 (Reliability). Let u solve (1.1) and uh  Vh be the WG approximation to (2.7). Then,

|||u - uh||| + |b(u - uh0)| h + osc(f, a).

(3.24)

Proof. Decompose uh = uch + urh where uch  Vhc. By the triangle inequality and Lemma 3.3, for any nonzero v  H01(),

|||u - uh||| + |b(u - uh0)|  |||u - uch||| + |b(u - uch)| + |||urh||| + |burh0|

ah(urh, v) |||v|||

+

h

+

osc(f,

a)

+

|||urh|||

+

|burh0|

The result now follows thanks to Lemma 3.1.

Theorem 3.2 (Efficiency).

h |||u - uh||| + |b(u - uh0)| + osc(f, a).

(3.25)

Proof. Efficiency will be shown through the following lemmas which employ the bubble function techniques introduced by Verfu¨rth[20]. We remark that the arguments presented here are simpler than its DG counterpart presented in [13] thanks to the simpler weak form.

Lemma 3.4 (Cell efficiency).

T2 ,1 + T2 ,2 1/2
T Th

|||u - uh||| + |b(u - uh0)| + osc(f, b, a). (3.26)

14

Proof. It is easy to see that T Th T2,2  |||u - uh|||2. Now for bounding T Th T2,1, we let bT denote the element-bubble function described in [20,
p. 1771] for any cell T  Th. We first take
vT = T2 RhbT .
Since Rh belongs to a finite dimensional space on T , a local equivalence of norms yields

T2 |Rh|2 dx
T

T2 Rh2 bT dx = Rh vT dx.

T

T

(3.27)

Since the exact solution u satisfies the strong form -divu + div(bu) +

au = f on each T  Th, by adding and subtracting the exact data and applying integration by parts to T div(wu - wuh)vT dx in conjunction with vT |T = 0, we have

Rh vT dx = (wu - wuh) · wvT dx +

T

T

w · (bu) - w · (buh) + a(u - uh0) vT dx +
T

(fh - f + (ah - a)uh0)vT dx.
T

(3.28)

Now combining (3.27) and (3.28), summing over all T  Th and applying Cauchy Schwarz inequality we obtain

T2 ,1
T Th

|||eh||| + |beh| + osc(f, a)

|||vT |||2 + T-2 vT

2 T

1/2
.

T Th

(3.29)

Thus,

T2,1 |||eh||| + |beh| + osc(f, a)

T Th

|||vT |||2 +

T-2 vT

2 T

1/2
.

T Th

(3.30)

Using the following property of the element bubble function

|||vT |||2

|||bT ||| T-1  L2(T ), bT  = 1

T2

Rh

L2(T ) and T-2

vT

2 T

T2 Rh L2(T ) the assertion follows.

15

Lemma 3.5 (edge efficiency).

1/2
E2
EEh

|||u - uh||| + |b(u - uh0)| + osc(f ).

(3.31)

Proof. For any edge E  Eh, let bE denote the edge-bubble function described in [20, p. 1771]. We first take

vE = -1/2EJhbE .

Since Rh belongs to a finite dimensional space on T , once again we rely on a local equivalence of norms to obtain

Jh vE ds
E

[n · wuh] vE ds = - [n · weh] vE ds. (3.32)

E

E

Let E  Th denote the compact support of E and vE denote the extension of edge bubble function to E.

- [n · weh] vE ds = - div(wu - wuh)vE dx

E

E

-

(wu - wuh) · vE dx

E

±

w · (bu) - w · (buh) + au - ahuh0 vE dx.

E

= osc(f, a)vE dx -

w · (beh) + aeh0 vE dx

E

E

+ RhvE dx - weh · vE dx

E

E

 osc(f, a) + |beh0| + a  eh0 vE E +

T T,1T-1 vE T

T E

+ 1/2weh E 1/2vE E

(3.33)

Using the properties of the edge bubble function

bE

2 E

1/4E1/2



2 E

,

and the assertion follows.

|||bE |||2E

1/4E-1/2



2 E

,

16

4. Numerical Results
In this section we present the results of the following benchmark problems to test the performance of the estimator. The numerical implementation has been realized by using the C++ software library deal.II [41, 42]. Our sequence of adaptively refined rectangular meshes is constructed by selecting those elements for refinement which possess the top 25% of the largest local indicators T . Since we are using rectangular meshes, local grid refinement inevitably leads to irregular meshes, i.e., not every edge of a cell is also a complete edge of its neighboring cell. Consistent with our implementation, we restrict this irregularity to one-irregular meshes, that is, any edge of a cell is shared by at most two cells on the other side of the edge.
All the experiments were performed on the unit square  = (0, 1)2 with the initial grid consisting of 16 × 16 elements, using polynomial degree k = 2, 3. We remark that these examples have been previously investigated in [8, 16].
Since the norm used in proving the reliability and efficiency of the estimator involves the energy norm (2.8) and the unusual norm |b(u - uh0)|, for the numerical experiments, we calculate |b(u - uh0)|, by using the upper bound -1/2 u - uh0 which has been described in [13, Remark 3.5].
4.1. Boundary Layer Benchmark

error and estimator error and estimator error and estimator

101

 =10-1 , k=2

100

10-1

10-2

10-3

10-4

10-5

unif-error

adaptive-error

10-6

adaptive-err-bound

estimator

10-17 02

103

104

105

106

Dofs

102

 =10-2 , k=2

101

100

10-1

10-2

10-3

10-4

unif-error

adaptive-error

10-5

adaptive-err-bound

estimator

10-16 02

103

104

105

106

107

Dofs

102

 =10-3 , k=2

101

100

10-1

10-2

10-3

10-4

unif-error

adaptive-error

10-5

adaptive-err-bound

estimator

10-16 02

103

104

105

106

107

Dofs

Figure 1: Boundary Layer Benchmark: Convergence history for  = 10-1, 10-2, 10-3 and k = 2.

We take b = (1, 1)T and a = 0 with the diffusive coefficient varying between 10-3 to 10-1. We pick the boundary conditions and the right-hand
side f (x, y) so that the analytical solution to (1.1) is

u(x, y) = x + y 1 - x

+

e--1

- 1

e-(1-x)(1-y)-1 - e--1

.

17

error and estimator error and estimator error and estimator

102

 =10-1 , k=3

101

100

10-1

10-2

10-3

10-4

10-5

10-6

10-7

unif-error

10-8

adaptive-error

10-9

adaptive-err-bound estimator

10-10102

103

104

105

106

107

Dofs

102

 =10-2 , k=3

101

100

10-1

10-2

10-3

10-4

10-5

unif-error adaptive-error

10-6

adaptive-err-bound

estimator

10-17 02

103

104

105

106

107

Dofs

103

 =10-3 , k=3

102

101

100

10-1

10-2

10-3

10-4

unif-error adaptive-error

10-5

adaptive-err-bound

estimator

10-16 02

103

104

105

106

107

Dofs

Figure 2: Boundary Layer Benchmark: Convergence history for  = 10-1, 10-2, 10-3 and k = 3.

Figure 3: Boundary Layer Benchmark: Refined meshes after 11 levels of refinement for  = 10-1, (left) 10-2, (center) 10-3 (right) and k = 3.
It is well known that when  is small, the solution develops boundary layers at x = 1 and y = 1. These layers have width O(). In Figures 1 and 2, we demonstrate the performance of our estimator for  = 10-1, 10-2, 10-3 200 using k = 2 and k = 3 respectively against the total degrees of freedom. In the same figures, we also plot the "true" energy error |||u - uh||| on adaptively refined meshes denoted by the curve "adaptive-error" and the curve "adaptive-err-bound". The latter serves as a computable upper bound for |beh0| (see Remark 2.2). We compare the performance of "adaptive-error" curve with the "true" energy error computed on uniformly refined meshes depicted by the curve "unif-error" plotted in the same figures.
As expected the estimator always overestimates the "true" energy norm thereby confirming the reliability of the estimator. Furthermore, after the boundary layers are sufficiently resolved for each choice of , the asymptotic regime is achieved. We remark that through the adaptive mesh refinement, we can achieve the expected convergence rates particularly for the interme-
18

diate regime  = 10-3, where the poor numerical behavior was observed on uniformly refined meshes. See [17, Example 2] and [8, Example 2]. This phenomena is numerically verified in Figures 1 and 2 for the uniform error curves. We notice that for  = 10-1, the adaptive error and uniform error curves are almost indistinguishable for k = 2 and certainly the uniform error curve outperforms the adaptive error curve for k = 3. The reason for this observation is that for  = 10-1, it takes only a few levels of uniform refinement for the mesh size to be fine enough to resolve the layer of width 10-1.
In Figure 3, we present the adaptively refined meshes after 11 levels of refinement for k = 3. We notice a pronounced refinement along the lines x = 1 and y = 1 which suggests that our estimator accurately detects the boundary layers and is able to resolve them. We also notice that for  = 10-1, the width of the layer is "large" enough to be resolved within just a few levels of refinement.
4.2. Internal Layer Benchmark

102

,  =10-2  =0.25

103

,  =10-3  =0.25

estimator estimator

101

100

h , k=1

h , k=2

h , k=3

10-11 01

102

103

104

105

106

107

Dofs

102

101

100

h , k=1

h , k=2

h , k=3

10-11 01

102

103

104

105

106

107

Dofs

Figure 4: Internal Layer Benchmark: Convergence behavior for  = 10-2, (left)  = 10-3 (right) using k = 3.

In this example, we present the performance of the estimator in the pres-

ence of internal layers.

We

choose

b

=

(

1 2

,

3 2

),

a

=

0,

f (x, y)

=

0

and

the

Dirichlet boundary conditions are chosen as:

1 on [0, 1] × {0}, 

u(x, y) =

1

on

{0}

×

[0,

1 5

],

0 otherwise.

19

Figure 5: Internal Layer Benchmark: Adaptively refined after 11 levels of refinement for  = 10-2 (left) and  = 10-3 (right) using k = 3..
Since the boundary data is discontinuous at the inflow boundary, an internal layer occurs across the domain. In the absence of the exact solution to this problem, we present the convergence of the estimator for the cases  = 10-2 and  = 10-3 in Figure 4. In Figure 5, we present the meshes which are adaptively refined after 11 levels of refinement for the same values of . As expected, we observe the strong refinement concentrated along the internal layer as shown in demonstrating the performance of the estimator in successfully detecting the internal layer.
Acknowledgment
The author would like to thank Sara Pollock for her valuable advice and fruitful discussions related to the weak Galerkin method.
References
References
[1] A. N. Brooks, T. J. Hughes, Streamline upwind/Petrov-Galerkin formulations for convection dominated flows with particular emphasis on the incompressible Navier-Stokes equations, Computer Methods in Applied Mechanics and Engineering 32 (1-3) (1982) 199­259.
20

[2] T. J. Hughes, Finite element methods for convection dominated flows; Proceedings of the Winter Annual Meeting, New York, NY, December 2-7, 1979, Finite Element Methods for Convection Dominated Flows.
[3] F. Brezzi, T. J. Hughes, L. Marini, A. Russo, E. Su¨li, A priori error analysis of residual-free bubbles for advection-diffusion problems, SIAM Journal on Numerical Analysis 36 (6) (1999) 1933­1948.
[4] F. Brezzi, D. Marini, E. Su¨li, Residual-free bubbles for advectiondiffusion problems: the general error analysis, Numerische Mathematik 85 (1) (2000) 31­47.
[5] E. Burman, A. Ern, Stabilized Galerkin approximation of convectiondiffusion-reaction equations: discrete maximum principle and convergence, Mathematics of computation 74 (252) (2005) 1637­1652.
[6] B. Cockburn, C. Dawson, Some extensions of the local discontinuous Galerkin method for convection-diffusion equations in multidimensions.
[7] P. Houston, C. Schwab, E. Su¨li, Discontinuous hp-finite element methods for advection-diffusion-reaction problems, SIAM Journal on Numerical Analysis 39 (6) (2002) 2133­2163.
[8] B. Ayuso, L. D. Marini, Discontinuous galerkin methods for advectiondiffusion-reaction problems, SIAM Journal on Numerical Analysis 47 (2) (2009) 1391­1420.
[9] B. Cockburn, Discontinuous Galerkin methods for convectiondominated problems, in: High-order methods for Computational Physics, Springer, 1999, pp. 69­224.
[10] H. Zarin, H.-G. Roos, Interior penalty discontinuous approximations of convection­diffusion problems with parabolic layers, Numerische Mathematik 100 (4) (2005) 735­759.
[11] R. Becker, P. Hansbo, Discontinuous Galerkin methods for convection­ diffusion problems with arbitrary P´eclet number, in: 5th European Conference on Numerical Mathematics and Advanced Applications, Prague, August 2003, Springer, 2000.
21

[12] A. Buffa, T. J. Hughes, G. Sangalli, Analysis of a multiscale discontinuous Galerkin method for convection-diffusion problems, SIAM Journal on Numerical Analysis 44 (4) (2006) 1420­1440.

[13] D. Sch¨otzau, L. Zhu, A robust a-posteriori error estimator for discontinuous Galerkin methods for convection­diffusion equations, Applied Numerical Mathematics 59 (9) (2009) 2236­2255.

[14] L. Zhu, D. Sch¨otzau, A robust a posteriori error estimate for hp-adaptive DG methods for convection­diffusion equations, IMA Journal of Numerical Analysis 31 (3) (2011) 971­1005.

[15] H. Chen, J. Li, W. Qiu, Robust a posteriori error estimates for HDG method for convection­diffusion equations, IMA Journal of Numerical Analysis 36 (1) (2016) 437­462.

[16] G. Chen, M. Feng, X. Xie, A robust WG finite element method for convection­diffusion­reacti Journal of Computational and Applied Mathematics 315 (2017) 107 ­ 125. doi:https://doi.org/10.1016/j.cam.2016.10.029. URL http://www.sciencedirect.com/science/article/pii/S0377042716305180

[17] R. Lin,

X. Ye,

S. Zhang,

P. Zhu,

A weak Galerkin Finite Element Method for Singularly Perturbed Convection-Diffusion­Reac

SIAM Journal on Numerical Analysis 56 (3) (2018) 1482­

1497.

arXiv:https://doi.org/10.1137/17M1152528,

doi:10.1137/17M1152528.

URL https://doi.org/10.1137/17M1152528

[18] J. Wang, X. Ye, A weak Galerkin finite element method for second-order elliptic problems, J. Comput. Appl. Math. 241 (2013) 103­115. doi:10.1016/j.cam.2012.10.003. URL http://dx.doi.org/10.1016/j.cam.2012.10.003

[19] K. Eriksson, C. Johnson, Adaptive streamline diffusion finite element methods for stationary convection-diffusion problems, Mathematics of computation 60 (201) (1993) 167­188.

[20] R. Verfu¨rth, Robust a posteriori error estimates for stationary convection-diffusion equations, SIAM Journal on Numerical Analysis 43 (4) (2005) 1766­1782.

22

[21] R. Verfu¨rth, A posteriori error estimators for convection-diffusion equations, Numerische Mathematik 80 (4) (1998) 641­663.

[22] L. Tobiska, R. Verfu¨rth, Robust a posteriori error estimates for stabilized finite element methods, IMA Journal of Numerical Analysis 35 (4) (2015) 1652­1671.

[23] A. Ern, A. F. Stephansen, A posteriori energy-norm error estimates for advection-diffusion equations approximated by weighted interior penalty methods, Journal of Computational Mathematics (2008) 488­510.

[24] A. Ern, A. F. Stephansen, M. Vohral´ik, Guaranteed and robust discontinuous Galerkin a posteriori error estimates for convection­diffusion­ reaction problems, Journal of Computational and Applied Mathematics 234 (1) (2010) 114­130.

[25] Q. H. Li, J. Wang, Weak Galerkin finite element methods for parabolic equations, Numer. Methods Partial Differential Equations 29 (6) (2013) 2004­2024.

[26] J. Wang, X. Ye, A weak Galerkin finite element method for the Stokes equations, Adv. Comput. Math. 42 (1) (2016) 155­174. doi:10.1007/s10444-015-9415-2. URL http://dx.doi.org/10.1007/s10444-015-9415-2

[27] L. Mu, J. Wang, X. Ye, A stable numerical algorithm for the Brinkman equations by weak Gal

J.

Comput.

Phys.

273

(2014)

327­342.

doi:10.1016/j.jcp.2014.04.017.

URL http://dx.doi.org/10.1016/j.jcp.2014.04.017

[28] L. Mu,

J. Wang,

X. Ye,

S. Zhang,

A weak Galerkin finite element method for the Maxwell equations,

J.

Sci.

Comput.

65

(1)

(2015)

363­386.

doi:10.1007/s10915-014-9964-4.

URL http://dx.doi.org/10.1007/s10915-014-9964-4

[29] L. Mu, J. Wang, X. Ye, Weak Galerkin finite element methods on polytopal meshes, International Journal of Numerical Analysis and Modeling 12 (1) (2015) 31­53.

23

[30] L. Mu,

J. Wang,

Y. Wang,

X. Ye,

A weak Galerkin mixed finite element method for biharmonic equations,

in: Numerical solution of partial differential equations: the-

ory, algorithms, and their applications, Vol. 45 of Springer

Proc. Math. Stat., Springer, New York, 2013, pp. 247­277.

doi:10.1007/978-1-4614-7172-1_13.

URL http://dx.doi.org/10.1007/978-1-4614-7172-1_13

[31] L. Mu, J. Wang, X. Ye, Weak Galerkin finite element methods for the biharmonic equation on Numer. Methods Partial Differential Equations 30 (3) (2014) 1003­1029. doi:10.1002/num.21855. URL http://dx.doi.org/10.1002/num.21855

[32] C. Wang, J. Wang, An efficient numerical scheme for the biharmonic equation by weak Galerk Comput. Math. Appl. 68 (12, part B) (2014) 2314­2330. doi:10.1016/j.camwa.2014.03.021. URL http://dx.doi.org/10.1016/j.camwa.2014.03.021

[33] C. Wang, J. Wang, A hybridized weak Galerkin finite element method for the biharmonic equation, Int. J. Numer. Anal. Model. 12 (2) (2015) 302­317.

[34] L. Chen, J. Wang, X. Ye, A posteriori error estimates for weak Galerkin finite element methods for second order elliptic problems, Journal of Scientific Computing 59 (2) (2014) 496­511.

[35] H. Li, A posteriori error estimates for the weak Galerkin finite element methods on polytopal meshes, Communications in Computational Physics 26 (2).

[36] T. Zhang, Y. Chen, A posteriori error analysis for the weak Galerkin method for solving ellipt International Journal of Computational Methods 15 (08) (2018) 1850075. arXiv:https://doi.org/10.1142/S0219876218500755, doi:10.1142/S0219876218500755. URL https://doi.org/10.1142/S0219876218500755

[37] J. H. Adler, X. Hu, L. Mu, X. Ye, An a posteriori error estimator for the weak Galerkin least-squares finite-element method 59 (2) (2018) 496­ 511.

24

[38] X. Zheng, X. Xie, A posteriori error estimator for a weak Galerkin finite element solution of the Stokes problem, East Asian Journal on Applied Mathematics 7 (3) (2017) 508­529.
[39] P. G. Ciarlet, The finite element method for elliptic problems, SIAM, 2002.
[40] O. A. Karakashian, F. Pascal, A posteriori error estimates for a discontinuous Galerkin approximation of second-order elliptic problems, SIAM Journal on Numerical Analysis 41 (6) (2003) 2374­2399.
[41] W. Bangerth, T. Heister, L. Heltai, G. Kanschat, M. Kronbichler, M. Maier, B. Turcksin, T. D. Young, The deal.ii library, version 8.2. archive of numerical software, Archive of Numerical Software 3.
[42] W. Bangerth, R. Hartmann, G. Kanschat, deal.ii ­ a general purpose object oriented finite element library., ACM Trans. Math. Softw. 33 (2007) 24/1­24/27.
25

